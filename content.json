{"pages":[{"title":"Unit Converter","date":"2023-07-08T14:37:39.896Z","path":"Links/energyConverter.html","text":"[data-tts-block-id].tts-active {background: rgba(206, 225, 255, 0.9) !important;} [data-tts-sentence-id].tts-active {background: rgba(0, 89, 191, 0.7) !important;} Energy Units Converter Enter your energy value in the box with the appropriate units, then press \"tab\" or click outside of the input box. HartreeseVkJ&#x2F;molkcal&#x2F;molcm-1V for 1e- transferK (equivalent temperature)Boltzmann population ratio at 298.15KGHznm-1 Boltzmann Populations Change the temperature and degeneracies: K upper degeneracy= % lower degeneracy= % Electrochemical Voltage Change the number of electrons transferred, z= Then, V= V (function(){var f5_cspm={f5_p:'EIHHKPDBMGJHCFPIKELJPECEAPDEKKHPCHCMNNDNEINJPKFPGALIJPEHMIIHGGOCKDBBKFNFAAKGAOLHAJGACLBJAAFNMPCEAJPFPJNNDFMDLJEHDJOONIAEIPOCLANG',setCharAt:function(str,index,chr){if(index>str.length-1)return str;return str.substr(0,index)+chr+str.substr(index+1);},get_byte:function(str,i){var s=(i/16)|0;i=(i&15);s=s*32;return((str.charCodeAt(i+16+s)-65)4)+65));str=f5_cspm.setCharAt(str,(i+s),String.fromCharCode((b&15)+65));return str;},set_latency:function(str,latency){latency=latency&0xffff;str=f5_cspm.set_byte(str,40,(latency>>8));str=f5_cspm.set_byte(str,41,(latency&0xff));str=f5_cspm.set_byte(str,35,2);return str;},wait_perf_data:function(){try{var wp=window.performance.timing;if(wp.loadEventEnd>0){var res=wp.loadEventEnd-wp.navigationStart;if(res"},{"title":"Links","date":"2023-07-08T14:37:21.497Z","path":"Links/index.html","text":"今日诗词 挑选中... jinrishici.load(function(result) { poem.innerHTML = result.data.content info.innerHTML = '【' + result.data.origin.dynasty + '】' + result.data.origin.author + '《' + result.data.origin.title + '》' document.getElementById(\"poem\").value(poem); document.getElementById(\"info\").value(info); }); Friends 🏃‍ Zequn’s Wiki Site Navigation ⭐ 不凡导航 🌈 陈不凡的资源库 访客地图 访客信息"},{"title":"Gallery","date":"2023-04-02T10:19:22.899Z","path":"Gallery/index.html","text":"2023 兰亭集序 洛神赋 浪浪山"},{"title":"Project","date":"2023-03-17T04:54:55.864Z","path":"project/index.html","text":""},{"title":"资源收集","date":"2023-07-08T14:34:20.606Z","path":"collections/index.html","text":"💻软件 | 📑博客 | 💭论坛 | 💼工具 | 📺视频 | 📰期刊 2023 2023-2 2023-1 2022 2022-2 2022-1 2021 2021-2 2021-1 Project | Gallery | lifetime"},{"title":"About","date":"2023-07-08T09:54:31.287Z","path":"about/index.html","text":""},{"title":"As time goes by","date":"2023-04-05T10:11:40.670Z","path":"lifetime/index.html","text":"body{background:#ebeef1;color:#333;display:flex;flex-direction:column;align-items:center;justify-content:center;font-family:’Muli’;height:100vh;margin:0}.reviews-container{background-color:#fff;border-radius:5px;box-shadow:0 3px 10px -5px rgba(0,0,0,0.3);padding:20px}.review{color:#777;padding:10px 10px 20px 10px;font-size:14px}.progress{background-color:rgba(100,100,100,0.2);border-radius:5px;position:relative;height:10px;width:200px;margin-right:50px;margin-top:10px}.progress-done{background:linear-gradient(to left,#f2709c,#ff9472);box-shadow:0 3px 3px -5px #f2709c,0 2px 5px #f2709c;border-radius:5px;height:10px;transition:width 2s ease .3s;animation:barberpole 9s linear infinite;background-image:linear-gradient(45deg,rgba(255,255,255,.15) 25%,transparent 25%,transparent 50%,rgba(255,255,255,.15) 50%,rgba(255,255,255,.15) 75%,transparent 75%,transparent);background-size:40px 40px}@keyframes barberpole{from{background-position:0 0}to{background-position:500px 0}}.percent{color:#333;float:right;margin-top:-14px}.social-panel-container{position:fixed;right:0;bottom:80px;transform:translateX(100%);transition:transform .4s ease-in-out}.social-panel-container.visible{transform:translateX(-10px)}.social-panel{background-color:#fff;border-radius:16px;box-shadow:0 16px 31px -17px rgba(0,31,97,0.6);border:5px solid #001f61;display:flex;flex-direction:column;justify-content:center;align-items:center;font-family:’Muli’;position:relative;height:169px;width:370px;max-width:calc(100% - 10px)}.social-panel button.close-btn{border:0;color:#97a5ce;cursor:pointer;font-size:20px;position:absolute;top:5px;right:5px}.social-panel button.close-btn:focus{outline:0}.social-panel p{background-color:#001f61;border-radius:0 0 10px 10px;color:#fff;font-size:14px;line-height:18px;padding:2px 17px 6px;position:absolute;top:0;left:50%;margin:0;transform:translateX(-50%);text-align:center;width:235px}.social-panel p a{color:#ff7500;text-decoration:none}.social-panel h4{margin:20px 0;color:#97a5ce;font-family:’Muli’;font-size:14px;line-height:18px;text-transform:uppercase}.social-panel ul{display:flex;list-style-type:none;padding:0;margin:0}.social-panel ul li{margin:0 10px}.social-panel ul li a{border:1px solid #dce1f2;border-radius:50%;color:#001f61;font-size:20px;display:flex;justify-content:center;align-items:center;height:50px;width:50px;text-decoration:none}.social-panel ul li a:hover{border-color:#ff6a00;box-shadow:0 9px 12px -9px #ff6a00}.floating-btn{border-radius:26.5px;background-color:#001f61;border:1px solid #001f61;box-shadow:0 16px 22px -17px #03153b;color:#fff;cursor:pointer;font-size:16px;line-height:20px;padding:12px 20px;position:fixed;bottom:20px;right:20px;z-index:999}.floating-btn:hover{background-color:#fff;color:#001f61}.floating-btn:focus{outline:0}.floating-text{background-color:#001f61;border-radius:10px 10px 0 0;color:#fff;font-family:’Muli’;padding:7px 15px;position:fixed;bottom:0;left:50%;transform:translateX(-50%);text-align:center;z-index:998}.floating-text a{color:#ff7500;text-decoration:none} 倒计时 const hh = new Date().getHours(),mm = new Date().getMinutes(),hhmmt = hh + '.' + mm; document.querySelector('.time .icon-container').innerText = '今天已过去 ' + hh + ' 小时'; document.querySelector('.time .progress-done').setAttribute(\"data-done\", parseInt(hhmmt/24*100)); document.querySelector('.time .percent').innerText = parseInt(hhmmt/24*100) + '%'; dd = new Date().getDay(); if(dd==0){dd=7}; document.querySelector('.week .icon-container').innerText = '本周已过去 ' + dd + ' 天'; document.querySelector('.week .progress-done').setAttribute(\"data-done\", parseInt(dd/7*100)); document.querySelector('.week .percent').innerText = parseInt(dd/7*100) + '%'; const md = new Date().getDate(),months = new Date(new Date().getFullYear(), new Date().getMonth()+1, 0).getDate(); document.querySelector('.month .icon-container').innerText = '本月已过去 ' + md + ' 天'; document.querySelector('.month .progress-done').setAttribute(\"data-done\", parseInt(md/months*100)); document.querySelector('.month .percent').innerText = parseInt(md/months*100) + '%'; const yy = new Date().getMonth(); document.querySelector('.year .icon-container').innerText = '今年已过去 ' + yy + ' 个月 零 ' + md + ' 天'; document.querySelector('.year .progress-done').setAttribute(\"data-done\", parseInt(yy/12*100)); document.querySelector('.year .percent').innerText = parseInt(yy/12*100) + '%'; const d1=\"2024/02/09 00:00:00\"; const dateBegin = new Date(d1); const dateEnd = new Date(); const dateDiff = dateEnd.getTime() - dateBegin.getTime();//时间差的毫秒数 const dayDiff = Math.floor(dateDiff / (24 * 3600 * 1000));//计算出相差天数 const leave1=dateDiff%(24*3600*1000) //计算天数后剩余的毫秒数 const hours=Math.floor(leave1/(3600*1000))//计算出小时数 const dayDifft = 365+dayDiff; document.querySelector('.festival .icon-container').innerText = '距离 2024 年春节还有 ' + Math.abs(dayDiff) + ' 天 ' +Math.abs(hours)+' 小时'; document.querySelector('.festival .progress-done').setAttribute(\"data-done\", parseInt(dayDifft/365*100)); document.querySelector('.festival .percent').innerText = parseInt(dayDifft/365*100) + '%'; const progressDone = document.querySelectorAll('.progress-done'); progressDone.forEach(progress => { progress.style.width = progress.getAttribute('data-done') + '%'; if(progress.getAttribute('data-done')80){ progress.style.backgroundColor = \"#d9534f\"; progress.style.boxShadow = \"-2px 2px 5px 0px #d9534f\"; } if(progress.getAttribute('data-done')60){ progress.style.backgroundColor = \"#f0ad4e\"; progress.style.boxShadow = \"-2px 2px 5px 0px #f0ad4e\"; } if(progress.getAttribute('data-done')40){ progress.style.backgroundColor = \"#5bc0de\"; progress.style.boxShadow = \"-2px 2px 5px 0px #5bc0de\"; } if(progress.getAttribute('data-done')20){ progress.style.backgroundColor = \"#5cb85c\"; progress.style.boxShadow = \"-2px 2px 5px 0px #5cb85c\"; } if(progress.getAttribute('data-done')=0){ progress.style.backgroundColor = \"#5cb85c\"; progress.style.boxShadow = \"-2px 2px 5px 0px #5cb85c\"; } }); 00 00 00 00 毕业倒计时 function getRTime(){ var EndTime= new Date('2025/05/01 00:00:00'); //截止时间 var NowTime = new Date(); var t =EndTime.getTime() - NowTime.getTime(); var d=Math.floor(t/1000/60/60/24); var h=Math.floor(t/1000/60/60%24); var m=Math.floor(t/1000/60%60); var s=Math.floor(t/1000%60);document.getElementById(\"t_d\").innerHTML = d + \" 天\"; document.getElementById(\"t_h\").innerHTML = h + \" 时\"; document.getElementById(\"t_m\").innerHTML = m + \" 分\"; document.getElementById(\"t_s\").innerHTML = s + \" 秒\"; } setInterval(getRTime,1000); 00 00 00 00 —假如能活到80岁— 人生倒计时 function getRTime(){ var EndTime= new Date('2073/01/01 00:00:00'); //截止时间 var NowTime = new Date(); var t =EndTime.getTime() - NowTime.getTime(); var d=Math.floor(t/1000/60/60/24); var h=Math.floor(t/1000/60/60%24); var m=Math.floor(t/1000/60%60); var s=Math.floor(t/1000%60);document.getElementById(\"t_d1\").innerHTML = d + \" 天\"; document.getElementById(\"t_h1\").innerHTML = h + \" 时\"; document.getElementById(\"t_m1\").innerHTML = m + \" 分\"; document.getElementById(\"t_s1\").innerHTML = s + \" 秒\"; } setInterval(getRTime,1000);"},{"title":"Publications","date":"2023-04-12T02:41:20.355Z","path":"about/publications.html","text":"Google Scholar | ResearchGate | ORCID Ongoing Dongsheng Chen, Tingting Miao,Hengyuan Chen, Tong Cheng. Significant Effect of the Sodium Dodecyl Benzene Sulfonate Concentration on the Molecular interplay of Heavy Oil&#x2F;Steam: A Molecular Dynamics Simulation. September 2023, Fuel, unsubmited 2023 Wang Z, An M, Chen D, et al. Molecular insights into enhanced water evaporation from a hybrid nanostructured surface with hydrophilic and hydrophobic domains[J]. Chemical Engineering Journal, 2023: 142838. Z Wang, M An, K Zhang, D Chen, X Sun, X Wang, Y Yuan, J Shi, J Wu. Phonon transport in two-dimensional carbon-boron material and heterointerfaces Surfaces and Interfaces, 2023, 36: 102603. Renfeng Yang, Dongsheng Chen, Wei Zheng, Tingting Miao, Fan Liu, Taichao Wang, Hengyuan Chen, Tong Cheng. Theoretical Insight into the Effect of Steam Temperature on Heavy Oil&#x2F;Steam Interface Behaviors Using Molecular Dynamics Simulation. August 2022, Journal of Thermal Science, accepted 2022 Dongsheng Chen, Wei Zheng, Taichao Wang， Fan Liu, Tong Cheng, Hengyuan Chen, Tingting Miao. Influence of Temperature on the Adsorption and Diffusion of Heavy Oil in Quartz Nanopore: A Molecular Dynamics Study. July 2022, Energies 2022, 15(16), 5870. Ting-TingMiao YiXia Dong-ShengChen Yu-ChaoZhen Jie-XinWang. Significant enhancement of thermal conductivity in toluene-based nanofluids employing highly dispersed and concentrated ZrO2 nanodots. International Journal of Thermal Sciences, Volume 182, December 2022, 107819. Meng An, Xuhui Sun, Dongsheng Chen, Nuo Yang. Research progress on thermal transprot of graphene-based composite thermal interface materials. Acta Phys. Sin.. doi: 10.7498&#x2F;aps.71.20220306 Tingting Miao, Zhengyang Liu, Dongsheng Chen, Meng An, Weigang Ma. Regulatable thermal conductivity and excellent mass transport of water-filled carbon nanotube as capillary wicks, International Journal of Heat and Mass Transfer, Volume 195, October 2022, 123211 Tingting Miao, Mengxian Xiang, Dongsheng Chen, Meng An, Weigang Ma. Thermal transport characteristics of two-dimensional t-PdTe2 and its Janus structures, International Journal of Heat and Mass Transfer, Volume 183, Part B, February 2022, 122099. Meng An, Haotian Wang, Yuejin Yuan, Dongsheng Chen, Weigang Ma, Swellam W Sharshir, Zhiheng Zheng, Yaoxiao Zhao, Xing Zhang. Strong phonon coupling induces low thermal conductivity of one-dimensional carbon boron nanotube,Surfaces and Interfaces, Volume 28, February 2022, 101690 2021 MengAn, DongshengChen, WeigangMa ShiqianHu XingZhang. Directly Visualizing the Crossover from Incoherent to Coherent Phonons in Two-dimensional Periodic MoS2&#x2F;MoSe2 Arrayed Heterostructure., International Journal of Heat and Mass Transfer, Volume 178, October 2021, 121630 Yufeng Zhang, Meng An, Dongxing Song, Aoran Fan, Dongsheng Chen, Haidong Wang, Weigang Maa and Xing Zhang. Phonon magic angle in two-dimensional puckered homostructures. J. Mater. Chem. C, 2021,9, 12741-12750 2020 DongshengChen, HaifengChen, ShiqianHu, HangGuo, Swellam W.Sharshir, MengAn, WeigangMa and XingZhang. Influence of atomic-scale defect on thermal conductivity of single-layer MoS2 sheet. Journal of Alloys and Compounds, Volume 831, 5 August 2020, 154875"},{"title":"Curriculum Vitae","date":"2023-07-08T09:52:01.900Z","path":"about/me.html","text":"img{ border-radius: 50%; overflow: hidden; width: 160px; } Dongsheng Chen Currently, I am focusing on the thermodynamic stability of methane hydrate... Email: eastsheng#hotmail.com Google Scholar | ResearchGate | ORCID 🎓 Education: Ph.D, Thermal Engineering, China University of Petroleum-Beijing, China Time: 2021 - Aug, 2025 (expected) Doctoral Thesis: Molecular Dynamics Study on Thermal Stability Mechanism of Methane Hydrate in Microscopic Pores (to be completed) Advisor: Dr. Tingting Miao M.S., Thermal Engineering, Shaanxi University of Science and Technology, China Time: 2018 - 2021 Master Thesis: Thermal Conductivity Modulation of Molybdenum Disulfide Heterostructure Based on Phonon Wave-particle Duality Advisor: Dr. Meng An &amp; Haifeng Chen B.S., Applied Physics, Zhongyuan University of Technology, China Time: 2014 - 2018 Bachelor Thesis: Hydrothermal preparation of graphene composites modified with CuO Advisor: Dr. Li Yin 🗡 Skills: Interests: Molecular dynamics simulation; Methane hydrate; Thermal physical properties; Machine learning; EOR Programs: Python numpy, matplotlib, pandas, scipy, package; C&#x2F;C++; Fortran; Matlab Softwares: LAMMPS; PACKMOL; MOLTEMPLATE; Material studios; VMD; OVITO; Avogadro; VESTA; Origin; GULP 📰 Publications: D Chen, W Zheng, T Wang, F Liu, T Cheng, H Chen, T Miao, Influence of Temperature on the Adsorption and Diffusion of Heavy Oil in Quartz Nanopore: A Molecular Dynamics Study. July 2022, Energies 2022, 15(16), 5870. TT Miao, Y Xia, DS Chen, YC Zhen, JX Wang. Significant enhancement of thermal conductivity in toluene-based nanofluids employing highly dispersed and concentrated ZrO2 nanodots. International Journal of Thermal Sciences, Volume 182, December 2022, 107819. M An, D Chen, W Ma, S Hu, X Zhang. Directly Visualizing the Crossover from Incoherent to Coherent Phonons in Two-dimensional Periodic MoS2&#x2F;MoSe2 Arrayed Heterostructure., International Journal of Heat and Mass Transfer, Volume 178, October 2021, 121630 D Chen, H Chen, S Hu, H Guo, SW Sharshir, M An, W Ma, X Zhang. Influence of atomic-scale defect on thermal conductivity of single-layer MoS2 sheet. Journal of Alloys and Compounds, Volume 831, 5 August 2020, 154875 Read More 🎤 Talks and Posters: Influence of atomic-scale defect on thermal conductivity of single-layer MoS2 sheet ⏰September 21, 2019 Talk at Huazhong University of Science and Technology: Workshop on Thermal Transport (WTT 2019), Wuhan, China"},{"title":"Tags","date":"2023-07-08T14:36:34.816Z","path":"tags/index.html","text":""},{"title":"期刊收藏","date":"2023-04-01T05:31:28.000Z","path":"collections/pages/Journals.html","text":"[toc] Journal 期刊名称 影响因子 中科院分区 JCR分区 是否Top International Journal of Heat and Mass Transfer 5.431 2 Q1 √ International Journal of Thermal Sciences 4.779 2 Q1 Fuel 8.035 1 Q1 √ International Journal of Multiphase Flow 4.044 2 Q2 Corrosion Science 7.72 1 Q1 √ Advanced Powder Technology 4.969 3 Q2 Chemical Engineering Journal 16.744 1 Q1 √ Chemical Engineering Science 4.889 2 Q2 √ Progress in Energy and Combustion Science 35.339 1 Q1 √ Combustion and Flame 5.767 2 Q2 √ Proceedings of the Combustion Institute 6.719 1 Q2 √ Applied Thermal Engineering 6.465 2 Q2 √ The Journal of Chemical Thermodynamics 3.269 2 Q3 Journal of Fluid Mechanics 4.245 2 Q1 Physics of Fluids 4.980 2 Q1 √ Energy Conversion and Management 11.533 1 Q1 √ Industrial &amp; Engineering Chemistry Research 4.326 3 Q2 Energy &amp; Fuels 4.654 3 Q3 Chemical Engineering Research and Design 4.119 3 Q2 Applied physics letter 3.971 2 Q2 √ Wear 4.695 1 Q1 √ The International Journal of Advanced Manufacturing Technology 3.563 3 Q2 Applied Energy 11.446 1 Q1 √ ACS Nano 18.027 1 Q1 √ Carbon 11.307 2 Q1 √ Environmental Science &amp; Technology 11.357 1 Q1 √ Journal of Cleaner Production 11.072 1 Q1 √ International Journal of Greenhouse Gas Control 4.4 2 Q3 PHYSICAL REVIEW B 3.908 2 Q2 √ PHYSICAL REVIEW LETTERS 9.185 1 Q1 √ PHYSICAL REVIEW FLUIDS 2.895 3 Q2 Journal of Computational Physics 4.645 2 Q2 Journal of Power Sources 9.794 2 Q1 √ Renewable Energy 8.634 1 Q1 √ Energy 8.857 1 Q1 √ Applied Surface Science 6.7 1 Q1 √ Advances in Colloid and Interface Science 15.6 1 Q1 √"},{"title":"Open Resources 1","date":"2021-07-03T02:50:48.000Z","path":"collections/pages/OpenResources_1.html","text":"[toc] 数据库 名称 链接 Crystallography Open Database http://www.crystallography.net/cod/ Materials Project https://materialsproject.org/ 自动化拓扑构建器(ATB)和存储库（需注册才能下载） https://atb.uq.edu.au/index.py Explore Chemistry Quickly find chemical information from authoritative sources https://pubchem.ncbi.nlm.nih.gov/ ChemSpider http://www.chemspider.com/ chemdraw https://chemdrawdirect.perkinelmer.cloud/js/sample/index.html# 美国矿物数据库 http://rruff.geo.arizona.edu/AMS/amcsd.php LJ势参数 https://lammpstube.com/mdpotentials/ 图书馆 名称 链接 世界数字图书馆 https://www.wdl.org/zh/ Library Genesis http://libgen.rs/ 鸠摩搜索 https://www.jiumodiary.com/ 国家统计局（National Bureau of Statistics） http://www.stats.gov.cn/ 中国数字科技馆 https://www.cdstm.cn/ wdfxw文档分享网 https://www.wdfxw.net/ 搬 书 匠 http://www.banshujiang.cn/ 书格 https://new.shuge.org/ 书享家 http://shuxiangjia.cn/ 图灵社区 https://www.ituring.com.cn/ Open Accsess Library https://www.oalib.com/ 云海电子图书馆 http://www.pdfbook.cn/ 码农之家 https://www.xz577.com/ 静思书屋 https://book.tinynews.org/ 书享家 http://shuxiangjia.cn/ 必读网 http://www.beduu.com/ 全国图书馆参考咨询联盟 http://www.ucdrs.superlib.net/ 物理 固体物理 《固体物理》固体物理学课程网站 3.2 晶格振动的量子化－声子 3.3 固体热容的量子理论 3.4 离子晶体的红外光学性质 3.5 非简谐效应（Anharmonicity) 3.6 晶格振动的实验观测 4.1&#x2F;2 金属自由电子论 4.3 金属的热容和顺磁磁化率 5.1&#x2F;2&#x2F;3 能带理论 5.4 紧束缚模型 (tight-binding model) 5.7 晶体能带的对称性 5.8 能态密度和费米面： 6.1 晶体中电子的运动特征 6.4 在恒定磁场中电子的运动 6.5 能带结构的实验研究 固体物理Homepage of Professor Guanzhong Wang 结晶学-吉大 第四章 晶向、晶面等概念 半导体 Principles of Semiconductor Sevices, by Bart Van Zeghbroeck 分子模拟 名称 链接 GPUMD在线Manual、GPUMD源码、MD模拟教材 Molecular Dynamics Simulaiton http://gpumd.zheyongfan.org/index.php/Main_Page 分子的构建 https://struchem.nankai.edu.cn/mmnew/kejian/MMChap2.pdf 结构化学国家精品课 https://struchem.nankai.edu.cn/ LAMMPS初学者教程（小结） https://mp.weixin.qq.com/s/MD_7NrANO4XQiESlzLFFOg 全网免费LAMMPS案例收集(持续更新) https://mp.weixin.qq.com/s/E50QAZH76ZuAPDr3U7V1Dw 热学 工程热力学基础 光学 光的干涉和相干条件 波动光学基本原理 材料力学 《材料力学》-全美经典-赵志岗译 《材料力学》-西安交通大学-航天航空学院–力学中心 流体力学 无痛苦N-S方程笔记 第五章 粘性流体运动基础 数学 应用数值分析第四版答案1 应用数值分析第四版答案2 应用数值分析第四版第一章课后作业答案 英语 名称 链接 BritishCouncil http://learnenglish.britishcouncil.org 微软小英写作 https://aimwriting.mtutor.engkoo.com Academic prasebank http://www.phrasebank.manchester.ac.uk/ keke http://www.kekenet.com NEWSLETTERS https://www.newscientist.com linggle https://linggle.com/ 口语伙伴 http://qidian.isayb.com/ 批改网 https://www.pigai.org/?ssl=on VOA英语网 http://www.tingvoa.com/ 英语自学网 http://english.dxsbb.com/ 田间小站 https://www.tjxz.cc/ grammar-quizzes https://www.grammar-quizzes.com/index.html 资源 名称 链接 libpku - 贵校课程资料民间整理 https://lib-pku.github.io/ 我爱分享网 https://www.5ifxw.com/ 小语种学习网 http://xyz.tingroom.com/ 科普中国网 http://www.kepuchina.cn/ PhET：免费的在线物理化学、、、仿真程序 https://phet.colorado.edu/zh_CN/ 一个有情怀的免费PPT模板下载网站 https://www.ypppt.com/"},{"title":"Open Resources 2","date":"2022-03-07T02:50:48.000Z","path":"collections/pages/OpenResources_2.html","text":"[toc] 资源汇总2021&#x2F;12&#x2F;15之后收藏ps:之前收藏的在: Eastsheng’s WiKi Site 系统Windows HelloWindows操作系统下载 MSDN Linux 镜像源：网易、阿里 软件综合软件下载网站 Downloadly 科学上网 AstarVPN iGuge谷歌学术助手+油猴+Sci-hub button下载论文神器 科研程序&#x2F;软件 espresso Gauss、Gaussview、Gaussian入门教程 SMILES转3D结构 计算电荷密度 程序语言相关 Anaconda安装包 正则表达式30分钟入门教程 C语言中文网 视频&#x2F;音频 PotPlayer中文视频播放 录音精灵 Helioviewer观察太阳 游戏 GBT乐赏游戏空间 工具 Everything 图片在线处理—photokit**** 教程 w3schools python 数据、曲线平滑处理 PyWebIO构架简单的Web应用或基于浏览器的GUI应用 颜色 RGB常用颜色。 Python Color对照表。 Python cmap对照表。 WebGradientsWeb渐变 编辑器 思源笔记 图图标 ionicons 免费Favicon.ico图标在线生成器 资源资源导航 资源汇社区的资源库 在线盘 永硕E盘 阿里云盘 免费云服务器 三丰云 网站建设资源 模板王 书籍&#x2F;图书馆 —————-限制下载5个—————- ZLibrary英文主站 ZLibrary中文主站 ZLibrary子站（可以打开，下载很快） ZLibrary子站 ZLibrary子站 ZLibrary子站 ZLibrary子站—————-限制下载5个—————- freecomputerbooks 在线视频资源 大学生资源网"},{"title":"书籍/社区/论坛收藏","date":"2020-06-18T01:33:48.000Z","path":"collections/pages/communities_fora.html","text":"[toc] 编程C&#x2F;C++ 名称 链接 C语言中文网 http://c.biancheng.net/cpp/compiler/ Markdown 名称 链接 Markdown中文文档 https://markdown-zh.readthedocs.io/en/latest/ Markdown在线编辑器 http://mahua.jser.me/ Learning-Markdown (Markdown 入门参考) https://xianbai.me/learn-md/ Rust 名称 链接 Rust 程序设计语言 简体中文版 https://kaisery.github.io/trpl-zh-cn/title-page.html 论坛&#x2F;教程&#x2F;文档&#x2F;手册RUNOOB菜鸟教程廖雪峰的官方网站W3Cschool极客学院AI研习社V2EX掘金北大HTML教程DIVCSS5HTML580HelloGithub程序员工具箱justcode数据科学社区掘金Matlab论坛一个神奇的文档网站生成器中科大超算资料手册程序院洪哥笔记segmentfault一个开放的技术社区思想家公社的门口：量子化学·分子模拟·二次元|Guidebook|https://www.guidebook.top/?from=http://dianying.im| 其他周期表ptablePeriodic Table of ElementsThe periodic table of the elements元素周期表Periodic Table博士论文集"},{"title":"高质量博客/科研主页收藏","date":"2021-04-25T15:56:48.000Z","path":"collections/pages/bloggers.html","text":"[toc] Scientific blogger Blogger 链接 思想家公社的门口：量子化学·分子模拟·二次元 http://sobereva.com/ 哲●科●文Jerkwin https://jerkwin.github.io/ 计算模拟分享汇 http://www.matercomp.com/ Tyler C. Sterling https://sites.google.com/colorado.edu/ty-sterling/home Daniel C. Elton. https://sites.google.com/colorado.edu/ty-sterling/home Yuan Cao https://caoyuan.scripts.mit.edu/ Lipai’s site http://home.ustc.edu.cn/~lipai/index.html Ji-Huan Guan https://www.guanjihuan.com/ Bingqing Cheng https://sites.google.com/site/tonicbq/home_1 BigBro(a)s https://www.bigbrosci.com/ 世事如棋 http://blog.wangruixing.cn/ Taishan Zhu https://sites.google.com/view/taishan/home Mr.ZhengGang’s blog https://mrzhenggang.com/alamode/#%E7%AE%80%E4%BB%8B Z. Ye’s Homepage https://yyyu200.github.io/ www.cup.uni-muenchen.de https://www.cup.uni-muenchen.de/ Chenglab Wiki https://chenggroup.github.io/ Pai Li (李湃) http://home.ustc.edu.cn/~lipai/me.html RILEY HANUS http://rileyhanus.com/science.html Z. Ye’s Homepage https://yyyu200.github.io/ 分子动力学MD https://ploou.github.io/ LAMMPS tutorials https://lammpstutorials.github.io/index.html simongravelle https://simongravelle.github.io/ 小康学习计算化学与分子模拟爱好者 https://kangsgo.github.io/ Longkun (Luke) Xu https://longkunxuluke.github.io/ IT博主 Blogger 链接 奇它博客 https://qitablog.com/ 良许Linux教程网 https://www.lxlinux.net/ 帅地玩编程 https://www.iamshuaidi.com/ 这是fengyqf的博客 https://blog.path8.net/ cchilei https://www.cnblogs.com/cchilei/ 冯诺依曼 https://www.cnblogs.com/yunjisuan1024/ XYKenny https://blog.csdn.net/XYKenny Xiaocai https://www.cnblogs.com/JohnTsai/ cungudafa https://cungudafa.blog.csdn.net/ docs https://docsify.js.org/#/zh-cn/quickstart 分享 GitHub 上有趣、入门级的开源项目 https://hellogithub.com/ itellyou https://msdn.itellyou.cn/ talich https://blog.csdn.net/weixin_28687807 好久不见 https://www.cnblogs.com/onelikeone/ IT楠老师 https://www.itnanls.cn/ Lainme’s Blog https://www.lainme.com/doku.php cndaqiang https://cndaqiang.github.io/ dp2px https://dp2px.com/ KYLE https://kylechandev.github.io/ 诗与酒 https://shawnzeng.com/ 三叔博客 http://www.sanshu.cn/ 你能成为任何你想成为的人 https://t880216t.github.io/ AIDE技术官网 https://aidezy.com/ Apibug https://www.apibug.com/ 大海资源网 https://www.dhzy.fun/ HAN https://www.vvhan.com/ 懒人之家 https://www.lanrenzhijia.com/ geek极客中心 https://www.geekzl.com/ 阮一峰的网络日志 https://www.ruanyifeng.com/blog/ lovestu https://www.lovestu.com/ q.jinsom.cn https://q.jinsom.cn/ 技术搜索 https://www.bfw.wiki/ 机器学习 Blogger 链接 wepon_ https://blog.csdn.net/u012162613 放羊的水瓶 https://www.cnblogs.com/fydeblog/ 机器学习笔记 https://www.askpure.com/course_9MCKRUQP-GJYX2MGF-0GLVH4YG-C0QOTMN1.html 莫烦PYTHON https://mofanpy.com/ Michael Nielsen https://michaelnielsen.org/ Jindong Wang (王晋东) http://jd92.wang/#publications Machine Learning Group https://www.microsoft.com/en-us/research/group/machine-learning-research-group/ Research Groups Blogger 链接 NanoEngineering Group http://web.mit.edu/nanoengineering/ 纳米传热实验室 http://nanoheat.energy.hust.edu.cn/index.htm Nano Energy Transport (NET) Group https://net-sust.github.io/ Henkelman Research Group http://theory.cm.utexas.edu/henkelman/ HALL RESEARCH GROUP https://hallgroup.engineering.osu.edu/node/153 The IDEAL Lab http://ideal.umd.edu/ Cheng Lab http://epsilon.ustc.edu.cn/index.html bell-labs https://www.bell-labs.com/ Chenglab Wiki https://chenggroup.github.io/ Tsuda Lab https://www.tsudalab.org/en/ Micro&#x2F;Nano Photonics Lab http://202.38.64.11/~chunhua/ 光機電系統實驗室 https://www.ym.edu.tw/cyliu66/ Douglas Spearot https://mae.ufl.edu/~dspearot/index.html Prof. Jin Zhao’s Lab http://staff.ustc.edu.cn/~zhaojin/ The Terrones Research Group https://sites.psu.edu/terronesresearch/ Orsi Group http://www.orsi.sems.qmul.ac.uk/index.html Jorgensen Lab（LigParGen） http://zarbi.chem.yale.edu/"},{"title":"乱七八糟的收藏1","date":"2021-03-15T10:11:28.000Z","path":"collections/pages/luan78zao_20211.html","text":"[toc] 2021-03-15 不太清楚什么东西，但是好像都挺有用： Atomsk https://atomsk.univ-lille.fr/index.php AIRSS https://airss-docs.github.io/tutorials/examples/ https://code.google.com/archive/p/fix-phonon/ Python黑洞网 https://www.pythonheidong.com/ Python中文网 https://www.cnpython.com/ matminer是一个用于数据挖掘材料属性的Python库。https://hackingmaterials.lbl.gov/matminer/#installing-matminer%E6%92%B0%E5%86%99%EF%BC%89 Django documentation https://docs.djangoproject.com/en/3.2/ plan9 http://9p.io/ plan9 https://9p.io/plan9/ 贝尔实验室网页 https://www.bell-labs.com/ WannierTools! https://www.wanniertools.org/ 超理论坛https://chaoli.club/index.php/1949/0https://chaoli.club/ pdf https://juejin.cn/post/6844903837791158285 hugo https://themes.gohugo.io/https://zhuanlan.zhihu.com/p/126298572https://www.jianshu.com/p/4669fb3bf35a 英文降重 Python在线学习 ZetCode 最新WIN10 20H2系统找回经典系统属性界面的几种方法 kALDo https://www.cnblogs.com/onelikeone/p/10665260.html http://music.zhuolin.wang/ http://www.haoshici.com/ http://www.saohua.com/shuku/3/daozang/ Python 数据科学入门教程 免费版权图片一键搜索 EAM potentials： https://sites.google.com/site/eampotentials/ 计算模拟分享汇 http://www.matercomp.com/ 文件创建_LAMMPS data文件创建工具–moltemplate https://blog.csdn.net/weixin_28687807/article/details/112672909 moltemplate https://www.moltemplate.org/examples.html 斗图网 http://www.bbsnet.com/ 发表情 https://www.fabiaoqing.com/ MSDN https://msdn.itellyou.cn/ 周期表 https://www.webelements.com/ Periodic Table of Elements https://pubchem.ncbi.nlm.nih.gov/periodic-table/ Periodic Table https://ptable.com/#%E6%80%A7%E8%B3%AA Cheng Lab http://epsilon.ustc.edu.cn/index.html 机器学习笔记 https://www.askpure.com/course_9MCKRUQP-GJYX2MGF-0GLVH4YG-C0QOTMN1.html COMB3 in LAMMPS https://research.matse.psu.edu/sinnott/software Vasp http://home.ustc.edu.cn/~lipai/scripts/vasp.html Welcome to Lipai’s site! http://home.ustc.edu.cn/~lipai/index.html warwick https://warwick.ac.uk/fac/sci/eng/research/ 分享 GitHub 上有趣、入门级的开源项目 https://hellogithub.com/ docsify https://docsify.js.org/#/zh-cn/quickstart LAMMPS and Python Scripts https://hallgroup.engineering.osu.edu/node/153 Academic Phrasebank – The Largest Collection of Academic Phrases https://www.ref-n-write.com/trial/academic-phrasebank/ DOWNLOAD LATEST VERSION OF ANDROID APPS AND GAMES https://apkdl.in/ The Materials Project https://www.materialsproject.org/ Search ChemSpider http://www.chemspider.com/ PotPlayer官网最新下载 中文,绿色版 https://www.potplayer.org/gengxin/403.html npm mirrors https://npm.taobao.org/mirrors/ nanoHUB https://nanohub.org/https://nanohub.org/tools/phononlifetime mahua–在线Markdown http://mahua.jser.me/ https://www.ncbi.nlm.nih.gov/nlmcatalog/journals/ https://gotolink.cn/general 在线编程 https://www.bccn.net/run/ 2021-04-11 hexo butterfly https://blog.csdn.net/cungudafa/article/details/105699384 Markdown目录 https://www.cnblogs.com/JohnTsai/p/4027229.html 第二届中国热物性学术会议 http://www.thermophysicalproperty.net/ 2021-04-19 Centos7向日葵安装 https://blog.csdn.net/XYKenny/article/details/89517621https://www.cnblogs.com/yunjisuan1024/p/11731369.html 频率与角频率的单位换算，有空查一查 距离21号还有两天，24号还有5天 https://www.cnblogs.com/cchilei/p/13884987.html vps新手入门全攻略：基础知识，选购，配置环境，日常管理及精品vps主机商推荐 https://www.path8.net/tn/archives/5370 2021-04-24 SCI666 http://www.sci666.net/ 奇它博客 https://qitablog.com/ Tyler C. Sterling https://sites.google.com/colorado.edu/ty-sterling/home Semiconductor Spectroscopy and Devices group https://ssd.phys.strath.ac.uk Machine Learning http://www.moreisdifferent.com/ Machine Learning http://ideal.umd.edu/ 能不能找一个或写一个，从谷歌学术上爬取文章push到个人主页上的代码 大学英语六级作文万能模板： https://docs.qq.com/doc/DR3R1bklad0J4S3VL Thermal smart materials controlled by electric fields: From principles to applications http://www.researchexpress.net/videoDetail/151 良许Linux教程网 https://www.lxlinux.net/ 帅地玩编程 https://www.iamshuaidi.com/ NEWSLETTERS https://www.newscientist.com/ 最新注册freenom免费域名的方法 https://zhuanlan.zhihu.com/p/115535965 给 hexo博客添加免费域名 【自定义条件生成美国身份】 http://www.shenfendaquan.com/ IPIP https://www.ipip.net/ 机器学习博主 https://blog.csdn.net/u012162613 | https://www.cnblogs.com/fydeblog/ 免费商用字体 https://ziyouziti.com/ 素材公社 https://www.tooopen.com/ matlab实现牛顿迭代法求解非线性方程组 https://blog.csdn.net/doupei2006/article/details/7476081?utm_source=blogxgwz0 10分钟邮箱 https://10minutemail.net/ https://www.facecards.com/ 学堂在线 cloudflare https://dash.cloudflare.com/ 工程热力学 https://vip.studypro.club/2021/2021%E4%B8%AD%E5%9B%BD%E5%A4%A7%E5%AD%A6mooc-%E5%B7%A5%E7%A8%8B%E7%83%AD%E5%8A%9B%E5%AD%A6%E6%A5%9A%E9%9B%84%E5%B8%88%E8%8C%83%E5%AD%A6%E9%99%A2-%E6%9C%80%E6%96%B0%E4%B8%AD%E5%9B%BD%E5%A4%A7/https://wenku.baidu.com/view/7188ed57a517866fb84ae45c3b3567ec102ddc99.htmlhttps://wenku.baidu.com/view/cf8e473076a20029bd642df4.html 网课小帮手 https://vip.studypro.club/ https://www.scm.com/applications/ 熵意味着体系混乱程度，熵增意味着体系更混乱和无序。 http://www.ecsponline.com/ 2021-05-02 2—4 光的干涉和相干条件 http://home.ustc.edu.cn/~rambo/kejian/gx/ch2-4.pdf http://202.38.64.11/~chunhua/2-03-2.pdf http://202.38.64.11/~chunhua/ https://www.ym.edu.tw/cyliu66/ https://letsencrypt.org/ Github Pages新的自定义域名HTTPS功能无法打开的解决方案 https://tlingc.com/2018/06/github-pages%e6%96%b0%e7%9a%84%e8%87%aa%e5%ae%9a%e4%b9%89%e5%9f%9f%e5%90%8dhttps%e5%8a%9f%e8%83%bd%e6%97%a0%e6%b3%95%e6%89%93%e5%bc%80%e7%9a%84%e8%a7%a3%e5%86%b3%e6%96%b9%e6%a1%88/ https://blog.csdn.net/qq_36852780/article/details/104886131 IP查询 https://www.ipaddress.com/ 域名查询 https://lookup.icann.org/ http://www.sanshu.cn/ http://www.china-nengyuan.com/ WeCenter 是一款建立知识社区的开源程序。 https://www.wecenter.com/ 阿里云免费疫情数据接口申请：https://market.aliyun.com/products/57002003/cmapi00037970.html https://www.58588885.com/ 2021-05-08 https://www.krellinst.org/doecsgf/conf/2007/pres/pascal.pdf https://program-hub.cn/index https://www.cnblogs.com/zhangxuel1ang/p/13929193.html untimeWarning untimeWarning: overflow encountered in det r = _umath_linalg.det(a, signature=signature) https://doc.codingdict.com/NumPy_v111/reference/generated/numpy.linalg.slogdet.html https://doc.codingdict.com/NumPy_v111/reference/generated/numpy.linalg.det.html#numpy.linalg.det slogdet 另一种表示行列式的方法，更适合于可能发生下溢&#x2F;溢出的大矩阵。 https://doc.codingdict.com/NumPy_v111/index.html https://blog.csdn.net/qq_34840129/article/details/86294530 https://blog.csdn.net/wangshuang1631/article/details/54286551 Could not fetch URL1Could not fetch URL https://pypi.python.org/simple/numpy/: There was a problem confirming the ssl certificate: Can&#x27;t connect to HTTPS URL because the SSL module is not available. - skipping https://github.com/pypa/pip/issues/5226 https://blog.csdn.net/jeryjeryjery/article/details/77880227 如何使用numpy从一维数组创建对角矩阵 https://www.cnpython.com/qa/82336 Can&#39;t connect to HTTPS URL because the SSL module is not available. Linux - https://www.cnblogs.com/zhangweiyi/p/10614658.html11. Linux下安装NumPy https://blog.csdn.net/taoyanqi8932/article/details/5266161012. https://ftqq.com/13. https://numpy.org/doc/stable/reference/generated/numpy.log.html14. http://www.kangsgo.com/https://kangsgo.cn/15. https://www.mdanalysis.org/16. https://blog.csdn.net/juanjuan1314/article/details/7897294117. https://baike.baidu.com/item/%E6%91%A9%E5%B0%94%E6%95%B018. https://zhuanlan.zhihu.com/p/2235948419. https://blog.csdn.net/weixin_39750084/article/details/8150139520. https://chenqx.github.io/2014/10/29/Python-fastest-way-to-read-a-large-file/21. Python MemoryError https://blog.csdn.net/m0_37052320/article/details/78850260 https://blog.csdn.net/fu6543210/article/details/91164037 https://www.jianshu.com/p/b460d26ab09f https://jingyan.baidu.com/article/a65957f434970a24e67f9be6.html https://www.codenong.com/4318615/ https://www.codenong.com/12461413/ 码农家园 https://www.codenong.com/ ProgramTip https://programtip.com/zh Python并行 https://blog.csdn.net/qq_23869697/article/details/84798614 matlab https://blog.csdn.net/lxlsin/article/details/103530416 https://blog.csdn.net/hudaweikevin/article/details/14161625 https://jingyan.baidu.com/article/f3ad7d0f4abea009c2345b78.html 2021-05-16 https://dx.doi.org/ https://www.zhangqiaokeyan.com/ https://pubmed.ncbi.nlm.nih.gov/ https://www.zhihu.com/question/452507835/answer/1822732193?ivk_sa=1024320u https://www.chajianmi.com/topic/jajilbjjinjmgcibalaakngmkilboobh https://www.zhihu.com/question/428685276 http://www.tentod.com/ https://www.chajianmi.com/ https://www.wyp88.com/sort/2 https://www.kutogroup.com/apps/zh-vpn.html https://a.newday.me/ https://www.qulaba.com/1023.html https://iguge.app/ http://www.ascl.info/ https://endnote.com/style_download/international-journal-of-heat-and-mass-transfer/ https://search.crossref.org/ https://www.zotero.org/ https://www.php.cn/xiazai/code https://blog.csdn.net/lammps_jiayou http://nht.xjtu.edu.cn/2019-jdjz-Chapter-4.pdf https://blog.csdn.net/qyb19970829/article/details/105128724 https://yuanbaoqiang.blog.csdn.net/ 2021-05-21 http://www.splaybow.com/html-font-style.shtml https://blog.csdn.net/sikong00/article/details/78628984?utm_medium=distribute.pc_relevant.none-task-blog-baidujs_baidulandingword-0&amp;spm=1001.2101.3001.4242 VIM https://yelog.org/2017/03/06/Vim-command/ Academic Accelerator https://academic-accelerator.com/ Welcome to the Knowledgebase of Interatomic Models! https://openkim.org/ 元气 https://bizhi.ijinshan.com/ https://www.v1tx.com/ video-to-gif-online https://www.apowersoft.cn/video-to-gif-online ValueError: too many values to unpack (expected 2) https://mae.ufl.edu/~dspearot/index.html REBO MoS2,https://research.matse.psu.edu/sinnott/software 注意： 120.020 epsilon_SS #对应300K0.01386 epsilon_SS #对应0K 2021-06-11 markdown https://blog.csdn.net/ShuqiaoS/article/details/82752344 https://www.programminghunter.com/article/706915024/ pypy https://www.cnblogs.com/anpengapple/p/5586678.html meam 势函数，data很多重复元素的原子的时候，library那个文件后面只需要写元素，另一个需要写全原子类型。 https://note.t4x.org/ https://streamlit.io/"},{"title":"乱七八糟的收藏2","date":"2021-07-03T05:31:28.000Z","path":"collections/pages/luan78zao_20212.html","text":"[toc] 2021-07-03 收藏简介 收藏链接 使用CloudFlare为自己的网站保驾护航 https://www.aferica.site/post/18c91674.html Giligili WordPress主题 https://shawnzeng.com/ jquery插件 https://www.jq22.com/ Bash:在linux终端上显示网页内容 https://www.osetc.com/archives/157.html 10个精选国外免费空间推荐 https://bbs.huaweicloud.com/blogs/215455 Markdown https://blog.csdn.net/weixin_39653948/article/details/104621249 Markdown公式编写 https://www.jianshu.com/p/e74eb43960a1 Markdown公式编写 https://www.jianshu.com/p/25f0139637b7 GitHub 自定义首页，结合 GitHub Action 更香 https://zhuanlan.zhihu.com/p/180550738 无限流量免费 PHP 空间 https://oneinf.com/resource/4502.html Sublime Text3 的 Markdown 实时预览全面总结 https://blog.csdn.net/qq_20011607/article/details/81370236 LAMMPS之水分子模型与力场 https://zhuanlan.zhihu.com/p/370186845 MD模拟中力场文件生成工具 https://zhuanlan.zhihu.com/p/374607729 OneDrive扩容 https://www.douban.com/note/745433036/ https://www.microsoft.com/zh-cn/education/products/office Office 365 教育版注册 https://www.microsoft.com/zh-cn/education/products/office lammps教程：单原子温度计算及输出方法 https://zhuanlan.zhihu.com/p/378020394 lammps简单教程 https://wenku.baidu.com/view/9399d972366baf1ffc4ffe4733687e21af45ffce.html"},{"title":"乱七八糟的收藏","date":"2023-07-01T05:31:28.000Z","path":"collections/pages/luan78zao_20232.html","text":"[toc] 2023-07 收藏链接 描述 Ubuntu18.04没有WiFi怎么解决 Ubuntu系统装好后没有wifi解决方案 Ubuntu启动U盘制作 Rufus启动U盘制作工具 ChatGPT Plus官方推荐新手教程 国内开通Chat GPT Plus保姆级教程【典藏】 OpenAI API 代理 国内用户无法访问 OpenAI 的 API，现提供代理服务地址供开发者 免费 使用 LocalAI ~OpenAI 的本地替代品 shotcut 跨平台（Qt）、开源（GPLv3）视频编辑器 Obsidian 一款私密、灵活的笔记应用程序，能够适应您的思维方式。 joplin 具有同步功能的安全笔记和待办事项应用程序 crystallm 根据成分生成晶体结构 GEMDAT GEMDAT用于分析分子动力学模拟的Python代码。 Miniconda安装 Ubuntu 22.04 LTS下Miniconda安装+换源（踩坑向） Python各版本华为镜像 ~ AI吧Python handson-ml3 A series of Jupyter notebooks about Machine Learning and Deep Learning using Scikit-Learn, Keras and TensorFlow 2. data-science-ipython-notebooks Data science Python notebooks TensorFlow-Examples ~ Dive-into-DL-TensorFlow2.0 《动手学深度学习》(Dive into Deep Learning)原书中的MXNet实现改为TensorFlow 2.0实现 pumpkin-book 《机器学习》（西瓜书）公式详解 Bash 脚本教程 Bash 脚本教程 Discrete Element Method (DEM) Software EDEM是用于块状和颗粒状材料模拟的高性能软件。 MS培训资料 北化超算平台培训资料 MolAICal 使用 MolAICal 软件计算PMF USTC Mirror Help ~ wget for windows ~ 商务决策模型（国贸本科） 课件-深圳大学-Wang shu jia 商务决策模型及应用（国贸专硕） 课件-深圳大学-Wang shu jia 贝叶斯统计及应用(统计学硕) 课件-深圳大学-Wang shu jia 红色石头Blog 机器学习 阿里云天池 jupyter lab 在线notebook，免费Jupyter notebook colaboratory et al. Jupyter on WSL2 wsl中使用jupyter-lab peridigm peridynamic lammpscn ~ CodeFormer 开源老照片修复 restorePhotos.io 开源老照片修复"},{"title":"软件收藏","date":"2021-06-10T02:56:48.000Z","path":"collections/pages/softwares.html","text":"[toc] 持续更新… 软件分享网站 软件名称 链接 花间社 https://www.huajclub.com/ 极客空间 cuiuc https://www.cuiuc.com/ 小众软件 https://www.appinn.com/ 画夹插件&amp;软件 https://huajiakeji.com/ 钟小哇 https://www.yaomei.co/ Office教程 https://www.office26.com/ 绿色软件分享 https://www.wotianna.com/ 五星软件 https://fivestar.app/ macno1 https://www.macno1.com/ 极客道 https://www.geekdao.cn/ Downloadly https://downloadly.net/ 科研软件 软件名称 链接 LAMMPS https://download.lammps.org/tars/?C=M;O=D Lammps tutorials https://lammpstutorials.github.io/ LAMMPS Online https://editor.lammps.org/ LAMMPS中文站-moltemplate https://www.lammps.org.cn/ GULP http://gulp.curtin.edu.au/gulp/ phonopy https://phonopy.github.io/phonopy/ phono3py http://phonopy.github.io/phono3py/ ALAMODE https://alamode.readthedocs.io/en/latest/ DynaPhoPy http://abelcarreras.github.io/DynaPhoPy/index.html thermo https://thermomd.readthedocs.io/en/latest/ 量 子 化 学 软 件 中 文 网 http://qchem.pw/ VASP https://www.vasp.at/ Ubuntu18.04编译VASP5.4.4的详细步骤 https://www.bilibili.com/read/cv3794759/ VASPKIT https://tamaswells.github.io/VASPKIT_manual/manual0.73/vaspkit-manual-0.73.html The VASP Manual https://www.vasp.at/wiki/index.php/The_VASP_Manual upho http://yuzie007.github.io/upho/ FFTW http://www.fftw.org/download.html nanohub https://nanohub.org/tools/phononlifetime/ GetData Graph Digitizer http://www.getdata-graph-digitizer.com/download.php MathType 7 简体中文版 https://www.mathtype.cn/ AMBER https://ambermd.org/index.php GROMACS https://www.gromacs.org/ GROMACS教程 http://www.mdtutorials.com/gmx/ HyperChem http://www.hypercubeusa.com/ PTRANS http://www.phonon.t.u-tokyo.ac.jp/p-trans/index.html Spartan for Linux by Wavefunction https://www.wavefun.com/ Towhee(蒙特卡洛) http://towhee.sourceforge.net/ PumMa(Parallel Utility for Modeling of Molecular Aggregation)设计用于模拟油水混合物的分子动力学程序 http://cbio.bmt.tue.nl/pumma/index.php 可视化软件 软件名称 链接 VMD-Linux安装VMD http://www.ks.uiuc.edu/Research/vmd/ OVITO https://www.ovito.org/ VESTA http://jp-minerals.org/vesta/en/ PLATINUM此程序基于分子疏水势的概念。上传受体&#x2F;配体结构文件后计算，会显示分子总面积、极性面积、非极性面积的大小。得到的疏水势格点文件可保存也可以在 线自动调用Jmol观看，以不同颜色描述分子的疏水&#x2F;亲水性质，可以直观了解受、配体不同方式的的结合能力。对于脂体系可以显示2D疏水图。 https://model.nmr.ru/platinum/#opennewwindow Prodrg输入结构或者在线绘制结构，生成gromacs等软件的拓扑文件，以及加过氢的pdb、gro、mol结构文件。支持gromos87&#x2F;96力场，支持结构优化。 http://davapc1.bioch.dundee.ac.uk/cgi-bin/prodrg OpenBabel http://openbabel.org/wiki/Main_Page 建模&#x2F;TOPO 软件名称 链接 packmol：packmol中文教程 http://leandro.iqm.unicamp.br/m3g/packmol/home.shtml moltemplate、moltemplate简单教程1+2 https://www.moltemplate.org/ LAMMPS中文站之moltemplate https://www.lammps.org.cn/ ASE https://wiki.fysik.dtu.dk/ase/ 自动化拓扑构建器(ATB)和存储库（需注册才能下载） https://atb.uq.edu.au/index.py LigParGen http://zarbi.chem.yale.edu/ligpargen/index.html PolyParGen http://polypargen.com/ TPPmktop GMXtop 远程操控 软件名称 链接 向日葵远程控制 https://sunlogin.oray.com/ RUSTDesk（还没用过） https://rustdesk.com/zh/ 其他 软件名称 链接 intel-compilers http://downloads.arc.ox.ac.uk/software/performance-compilers/intel-compilers/ CAJViewer阅读器 http://cajviewer.cnki.net/download.html 加速器 软件名称 链接 Astar Pigcha加速器 http://www.pigcha.com/"},{"title":"好用工具收藏","date":"2021-07-05T13:01:48.000Z","path":"collections/pages/tools.html","text":"[toc] 行业标准 名称&#x2F;简介 链接 建标库 http://www.jianbiaoku.com/ 全国标准信息公共服务平台 http://std.samr.gov.cn/ 科研工具 工具名称 链接 sci-hub https://sci-hub.shop/ sci-hub https://www.sci-hub.ren/ Computational Tools https://www.materialscloud.org/work/tools/options 科研通 https://www.ablesci.com/ 谷歌学术镜像 https://ac.scmor.com/ 科塔学术 https://site.sciping.com/ x-mol科学知识平台 https://www.x-mol.com/ 实用工具 工具名称 链接 在线编程 https://www.bccn.net/run/ 天天云搜 https://www.ttyunsou.com/ 盘搜搜 https://www.pansoso.com/ Unit Converter Express Version https://www.unitconverters.net/ SooPAT专利搜索 http://www.soopat.com/ 费米维基 https://www.fermitech.com.cn/wiki/doku.php?id=start Periodic Table https://www.rsc.org/periodic-table Office-Converter，所有都是100％免费且易于使用！ https://cn.office-converter.com/ MaTools https://www.matools.com/ 各类实用小工具 https://www.guoxingjun.com/ 极简简历制作 https://www.polebrief.com/index 临时邮箱 http://24mail.chacuo.net/ 临时邮箱 https://temp-mail.org/zh/ 临时邮箱 https://od.obagg.com/ 幕布-思维导图 https://mubu.com/home Captura开源录屏工具 https://mathewsachin.github.io/Captura/ oCam录屏软件（xq0n） https://pan.baidu.com/s/1obP7zNBsKiDlCjLVyMB6Tg EV录屏 https://www.ieway.cn/evcapture.html OBS Studio https://obsproject.com/zh-tw OBS设置 https://www.bilibili.com/video/BV1wf4y1S7EM/?spm_id_from=autoNext 站长工具 工具名称 链接 站长工具-爱站网 https://www.aizhan.com/ 站长工具-站长之家 http://tool.chinaz.com/ FREE API https://www.free-api.com/ 稳定、快速、免费的 API 接口服务 https://api.wrdan.com/#/ Coder work IT工具网 https://www.coder.work/ toolfk https://www.toolfk.com/ 视频解析工具 工具名称 链接 视频格式在线转换 https://convertio.co/zh/ Youtube视频下载 https://zh.savefrom.net/7/ 下載Youtube視頻 https://very.ninja/zh3/ 哔哩哔哩（或其他）视频下载 https://bilibili.iiilab.com/ 哔哩哔哩视频下载 https://xbeibeix.com/api/bilibili/ BBC下载视频 https://very.ninja/zh3/bbc-video-downloader-mp4/ 视频解析-去水印 https://dy.kukutool.com/kuaishou 抖音无水印在线解析下载 https://vtool.pro/ VIDEOPARSE 在线去水印解析 https://www.videoparse.cn/ 硕鼠 https://www.flvcd.com/index.htm 视频兔 - 视频工具大全 https://www.videotool.cloud/ VIP视频解析 https://api.wrdan.com/play= 抖音无水印在线解析下载 https://ishare20.net/douyindl/ 嗨呀去水印 https://douyin.haiya360.com/ 短视频无水印解析下载 http://wm.onlychen.cn/ 音频工具 工具名称 链接 全网音乐免费下载工具 https://music.sonimei.cn/ 在线语音合成1-AI在线 https://www.zaixianai.cn/voiceCompose 在线语音合成2-配音娃 http://www.peiyinwa.com/ 游戏工具 名称 链接 LOLSkin http://leagueskin.net/p/download-mod-skin-2020-chn 免费游戏加速器 https://www.golink.com/ 图片 名称&#x2F;简介 链接 Wallpapers Wide http://wallpaperswide.com/ WALLPAPER ABYSS https://wall.alphacoders.com/ 彼岸壁纸 https://pic.netbian.com/ pixabay https://pixabay.com/ Free Photoshop Brushes &amp; PSDs! https://www.brusheezy.com/ subtlepatterns https://www.toptal.com/designers/subtlepatterns/ 图虫 https://tuchong.com/ Duotone https://duotone.shapefactory.co/ Ribbons 2 https://codepen.io/tsuhre/full/BYbjyg Silk-可以画对称波纹 http://weavesilk.com/ AI人工智能图片放大 https://bigjpg.com/ GIF压缩、编辑等 https://www.soogif.com/compress 快速、简单的在线修改图片工具 - 改图宝 https://www.gaitubao.com/ 可批量编辑图片的所有工具 https://www.iloveimg.com/zh-cn 不仅是智能LOGO设计 https://www.logomaker.com.cn/ 官方工具 名称&#x2F;简介 链接 河南省身份证办理进度查询 http://bsdt.henanga.gov.cn/MainPages/ChaXunZhongXin/ShenFenZhengBanLiJinDu 重名查询 http://bsdt.henanga.gov.cn/MainPages/ChaXunZhongXin/SameNameQuery 其他实用工具 工具名称 链接 你注册过哪些网站？ https://www.reg007.com/ 水文生成器 https://fun.liuxunzhuo.tech/"},{"title":"视频收藏","date":"2020-06-18T01:33:48.000Z","path":"collections/pages/videos.html","text":"[toc] 学习视频1. 讲座 讲座&#x2F;平台 链接 蔻享 https://www.koushare.com 微纳传热 https://space.bilibili.com/609834262?spm_id_from=333.788.b_765f7570696e666f.1 2. 教程 教程 链接 VMD软件基础使用讲解 https://app.cailiaoren.com/view/series/detail?id=48&amp;vid=189 科技论文写作与投稿审稿经验分享 https://www.koushare.com/video/videodetail/5710 上交计算材料课程 http://cms.sjtu.edu.cn 慕课 https://www.icourse163.org 我要自学网 https://www.51zxw.net 大学生自学网 http://v.dxsbb.com 番薯学院 http://www.fanshuxueyuan.com 课工场 http://www.kgc.cn 免费的在线物理、化学、生物、地理及数学仿真程序 https://phet.colorado.edu/zh_CN/ 我爱分享网 https://www.5ifxw.com 阿里云大学 https://edu.aliyun.com/ 知识兔 https://zhishitu.com/ 甲骨数字 http://www.oioio.pro/ 朱峰社区 http://www.zf3d.com/ coursera https://www.coursera.org/ HTML中文网 https://www.html.cn/ 学堂在线 https://www.xuetangx.com/ 网易公开课 https://open.163.com/ted"},{"title":"Unit Converter","date":"2023-07-08T14:35:50.662Z","path":"Links/UnitsConverter.html","text":"//长度单位 function lengthconvert() { var from_unit = document.getElementById(\"from_unit\").value; var to_unit = document.getElementById(\"to_unit\").value; var from_value = parseFloat(document.getElementById(\"from_value\").value); var to_value; // 转换为米 if (from_unit == \"cm\") { to_value = from_value / 1e2; } else if (from_unit == \"mm\") { to_value = from_value / 1e3; } else if (from_unit == \"μm\") { to_value = from_value / 1e6; } else if (from_unit == \"nm\") { to_value = from_value / 1e9; } else if (from_unit == \"Å\") { to_value = from_value / 1e10; } else if (from_unit == \"pm\") { to_value = from_value / 1e12; } else if (from_unit == \"in\") { to_value = from_value * 0.0254; } else if (from_unit == \"ft\") { to_value = from_value * 0.3048; } else { to_value = from_value; } // 转换为目标长度单位 if (to_unit == \"cm\") { to_value *= 1e2; } else if (to_unit == \"mm\") { to_value *= 1e3; } else if (to_unit == \"μm\") { to_value *= 1e6; } else if (to_unit == \"nm\") { to_value *= 1e9; } else if (to_unit == \"Å\") { to_value *= 1e10; } else if (to_unit == \"pm\") { to_value *= 1e12; } else if (to_unit == \"in\") { to_value /= 0.0254; } else if (to_unit == \"ft\") { to_value /= 0.3048; } if ((to_value>0.001 && to_value-10000 && to_value0.001 && to_tvalue-10000 && to_tvalue0.001 && to_tevalue-10000 && to_tevalue0.001 && to_pvalue-10000 && to_pvalue0.001 && to_evalue-10000 && to_evalue0.001 && to_mvalue-10000 && to_mvalue"},{"title":"乱七八糟的收藏","date":"2023-04-01T05:31:28.000Z","path":"collections/pages/luan78zao_20231.html","text":"[toc] 2023-06 收藏链接 描述 跳动文字制作 ~ Awesome GitHub profiles ~ Weka 3 - Data Mining with Open Source Machine Learning Software in Java (waikato.ac.nz) 一个机器学习工具 DragGAN 拖动 GAN 完成 P 图 stitching 一个用于快速和强大的图像拼接的Python包 《动手学深度学习》 ~ AFFiNE AFFiNE是一个下一代知识库，集计划、分类和创造于一体 SurveyKing 卷王问卷考试系统 sourcegraph 代码搜索和人工智能助手与代码图的上下文。 shotcut Shotcut is a free, open source, cross-platform video editor geometrize 将图像用几何图形重绘的工具，有windows应用，有web应用 moltemplate_talk_2019-8-15.pdf TALK PPT 2019 atomify Real time molecular dynamics in the browser using LAMMPS ChatPaper 全流程加速科研，利用chatgpt进行论文总结+润色+审稿+审稿回复 atomate Atomate主要是为了与VASP电子结构软件一起工作而构建的 RDKit介绍及使用 ~RDKit CJavaPy编程之路 no pain,no gain~ 【布客】AI Learning ~ DeepLearning 深度学习入门教程, 优秀文章, Deep Learning Tutorial The CIFAR-10 dataset 8000万张微小图像数据集 [PhantomJS - Scriptable Headless Browser](PhantomJS - Scriptable Headless Browser) 无界面浏览器 import.io 是一个免费的、基于Web 的服务，自动抓取网页 TPPmktop OPLS-AA的原子型归属和力场参数分配 AUTOFF AuToFF (Auxiliary Tools of Force Field) 是一个完全自主开发的可视化力场辅助工具 asciiflow 根据流程图生成字符画 *IMG2TXT: ASCII Art Made Easy!* 根据图片生成字符画 在线图片转字符 根据图片生成字符画 ASCII Generator 在线生成字符云 Type Something 在线生成字符云 Python多版本管理工具pyenv 安装与使用，无法加载文件”xxx.ps1”错误解决 | pyenv镜像配置 Energy Units Converter 在线能量转换 Pizza LAMMPS工具，创建输入文件、分析、画数据图和可视化 XMakemol 分子构型绘图软件：能方便地画矢量 手算量子化学 ~ QCgadget Python编写的一个小程序：SI和原子单位之间进行转换 VMD Linux安装 ~ audiocraft 文本生成音乐模型 Awesome-GitHub-Repo 收集整理 GitHub 上高质量、有趣的开源项目 gpt4free-ts 免费的 OpenAI GPT-4 的 API gpt-engineer AI写代码 ChatGPT-Midjourney 一键拥有你自己的 ChatGPT+Midjourney 网页服务 中国高等院校三千所 ~ awesome-free-chatgpt 免费的 ChatGPT 镜像网站列表 FreeGPT 免费开放，不需要账号就能使用 weekly 科技爱好者周刊 NotepadNext A cross-platform, reimplementation of Notepad++ linux免费安装typora 添加桌面图标 Linux下激活Typora教程 ~ Neural Network 在线感受神经网络 机器学习入门 ~ 机器学习算法篇 与B站机器学习教程对应的在线文档 无名小站 语言程序等教程 晶体结构和晶胞 ~ Interatomic Potentials a source for interatomic potentials, related files, and evaluation tools Home of 2NN MEAM Interatomic Potential LAMMPS Examples for 2NN MEAM Interatomic Potentials (Force Fields) 力场参数在线查询 360Zip国际版 国际版不流氓 Yank Note 一款强大可扩展的 Markdown 编辑器 Atomistic View of Materials: Modeling &amp; Simulation nanohub.org&#x2F;courses Practical considerations for Molecular Dynamics 分子动力学课程的研讨会材料 中国大百科全书 UseChatGPT.AI ChatGPT AI Copilot for the Web dwsim5 DWSIM - Open Source Chemical Process Simulator (5.x series) FEHM Finite Element Heat and Mass Transfer Code MLDD 机器学习用于化学和药物设计课程的资源… CT_PostProc_Hydrate_Formation 处理x射线计算机断层扫描的MATLAB脚本和子程序 predict 利用粘土和砂层的概率描述计算断层渗透率分布 pytzer The Pitzer model for chemical activities and equilibria in aqueous solutions in Python MachineLearningCourse 研究生水平的机器学习课程 gempy GemPy是一个开源的、基于python的3-D构造地质建模软件 Kaggle Kaggle is the place to learn data science and build a portfolio. Linux命令大全 Linux命令大全(手册) Pymatgen 是一个强大的、开源的Python库，用于材料分析。 ASE高通量建模 基于python语言集建模、计算、可视化、分析于一体的开元工具。它可以兼容VASP，QE，CP2K, lammps, Gaussian等多种主流计算软件的接口和格式 WebGraphviz WebGraphviz is Graphviz in the Browser scikit-learn中文社区 简单有效的工具进行预测数据分析 思维导图工具 15 款好用的思维导图工具 Xmind 全功能的思维导图软件 research-tool some useful tools for research work Helium Let Sublime Text 3 talk with Jupyter. NetworkX | 一个Python包，用于创建、操作和研究复杂网络的结构、动态和功能 research-method 论文写作与资料分享 Linux安装TimeNewRoman字体 Ubuntu安装字体 2023-05 收藏链接 描述 Ventoy 一个制作可启动U盘的开源工具 快意库-游戏 游戏分享 GFPGAN 腾讯开源的人脸修复算法 Wai 预防颈椎病的项目 OURS-Project 如何制作一个智能手机 Fsnotes macOS&#x2F;iOS 上的笔记管理器 oxipng PNG 图片压缩工具 lossless-cut 视频&#x2F;音频无损编辑的工具 EasySpider 可视化爬虫软件 PlayEdu 一款适用于搭建内部培训平台的开源系统 k3s K3s - 轻量级 Kubernetes LocalAI 本地chatgpt 1Panel Linux 服务器运维管理面板 Pybind11 C++11和python无缝衔接 SophiApp 微调Windows 10和Windows 11 VoiceWave: ChatGPT Voice Control chatGPT语音控制 文本阅读器 文本转语音 搜索兔 找软件&#x2F;在线工具&#x2F;官网 kevinwang676&#x2F;web-singer-2 🥳🎶🎡 - AI歌手，RVC歌声转换 ImgCleaner ImgCleaner satvikag&#x2F;chatbot 在线聊天机器人 rich-text-to-image 在线AI画图 stable-diffusion-2-1 在线AI画图 elevenlabs-tts 文字转语音系统 Synergy_GNN 水合物抑制剂机器学习项目 pyenv Simple Python version management ChatGPT 学术优化 ChatGPT 学术优化在线版（需提供key） Hugging Face 一个开源的人工智能（AI）平台和社区 Hydrate 水合物、油气、干热岩等储层的热流固化耦合数值模拟软件。 中国大百科全书 百科全书网页版 软件资源网站 几个资源网站 Win软件资源网站 Win软件资源网站 Markdown图片 Markdown 图片 F3&#x2F;F4 order parameters F3&#x2F;F4 order parameters Water Structure and Science Water Structure and Science SSCHA 计算声子性质的python库 Windows安装WSL2并配置nVidia GPU 子系统GPU GeoGebra - 数学教学软件 绘图计算, 几何作图 Geogebra入门 Geogebra画图 谱线展宽和线型函数 峰拟合：python实现 matplotlib &#x2F; seabon python画图 水分子序参数的计算 F3&#x2F;F4计算思路 Z-Library 世界上最大的电子书图书馆 MDtraj MD轨迹处理python库 Biz.nf Biz.nf提供免费的网站建设、空间和子域名的服务 Dynadot官网 (dynadot-china.com) Dynadot是国外最大域名注册商之一 Co.cc 可以免费获得.cc域名的平台 freenom 提供免费.tk域名服务的网站 Dot.tk 提供免费.tk域名服务的网站 System is booting up. See pam_nologin(8) ssh无法远程连接 解决Permission denied (publickey). ssh连接不上 Windows系统服务器配置SSH服务 ssh连接 Windows10的Ubuntu子系统启动screen时报错 screen报错 2023-04 收藏链接 描述 神经网络与深度学习 一本书 剧集屋 看剧 esp在线转png 图片格式在线转换 戴尔电脑插上耳机没反应，要重启才能识别 解决电脑耳机无法识别问题 phana phonon计算后处理 一个插件，让你的 ChatGPT 不再报错！ KeepChatGPT油猴插件 Matlab 2022a Matlab 2022a安装包 中国国家图书馆 中国国家图书馆 知识库 知识库 北大出版社电子书架 书籍 「部署全流程」 中科院学术专业版chatGPT来啦 chatGPT学术版 查看代理ip与端口 右键 “检查” ， “网络” ctrl+R,查看远程代理ip gpt_academic chatGPT学术版项目地址 蒙特卡洛模拟 蒙特卡洛模拟 ChatGPT网址导航，分享免费好用AI网站！ AI网站 arXiv Xplorer 学术搜索 宝藏网站 网址 同一局域网建立ftp服务器实现文件共享 ftp共享文件夹"}],"posts":[{"title":"eam_database生成合金势文件","date":"2023-07-08T10:11:28.000Z","path":"wiki/2023/07/08/softwares/lammps/generate_EAM_alloy/","text":"[toc] compile create.f123cd lammps/tools/eam_database/gfortran create.f# generate a.out file edit EAM.input12345678&amp;funccardatomtype=&#x27;Au&#x27;&amp;end&amp;funccardatomtype=&#x27;Ti&#x27;&amp;end&amp;funccard&amp;end create an *.eam.alloy potential file1./a.out &lt; EAM.input Usage12pair_style eam/alloypair_coeff * * AuTi.eam.alloy Au Ti References [1] https://docs.lammps.org/Tools.html#eamdb","tags":[{"name":"Lammps","slug":"Lammps","permalink":"https://eastsheng.github.io/tags/Lammps/"},{"name":"EAM","slug":"EAM","permalink":"https://eastsheng.github.io/tags/EAM/"}],"categories":[{"name":"软件学习","slug":"软件学习","permalink":"https://eastsheng.github.io/categories/%E8%BD%AF%E4%BB%B6%E5%AD%A6%E4%B9%A0/"},{"name":"Lammps","slug":"软件学习/Lammps","permalink":"https://eastsheng.github.io/categories/%E8%BD%AF%E4%BB%B6%E5%AD%A6%E4%B9%A0/Lammps/"}]},{"title":"论文笔记2023-秋","date":"2023-06-30T16:00:00.000Z","path":"wiki/2023/07/01/notes/PaperReadNote2023_C/","text":"Paper Notes 20232023-7月@8月@9月Some phrases- First-order or second-order phase transformation 第一阶相变（First-order phase transformation）和第二阶相变（Second-order phase transformation）是描述物质在不同条件下发生的相变类型的术语。 第一阶相变： 第一阶相变是指在相变过程中，物质的热力学状态会经历一个明显的跃迁。在这种相变中，物质的熵和焓会发生突变，导致相变点处出现明显的跃迁。典型的第一阶相变包括固体和液体之间的相变（如熔化和凝固）、液体和气体之间的相变（如沸腾和液化）。在第一阶相变中，物质在相变点处会同时存在两种相态，而且相变过程中的温度和压力保持不变。 第二阶相变： 第二阶相变是指物质在相变过程中没有明显的热力学跃迁，其熵和焓的变化是连续的。在这种相变中，物质的某些物理性质会发生突变，如磁性、电导率或比热容等。典型的第二阶相变包括铁磁性相与顺磁性相之间的相变、液晶相变、超导相变等。与第一阶相变不同，第二阶相变在相变点处不会同时存在两种相态，而是通过连续的变化逐渐转变。 总结来说，第一阶相变是具有明显热力学跃迁的相变，其过程中熵和焓发生突变，物质在相变点处同时存在两种相态。而第二阶相变是连续的相变，其过程中熵和焓变化连续，物质在相变点处只存在一种相态，但某些物理性质可能发生突变。 ChatGPT May 24 Version","tags":[{"name":"Paper Notes","slug":"Paper-Notes","permalink":"https://eastsheng.github.io/tags/Paper-Notes/"}],"categories":[{"name":"学习笔记","slug":"学习笔记","permalink":"https://eastsheng.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"},{"name":"论文笔记","slug":"学习笔记/论文笔记","permalink":"https://eastsheng.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E8%AE%BA%E6%96%87%E7%AC%94%E8%AE%B0/"},{"name":"2023","slug":"学习笔记/论文笔记/2023","permalink":"https://eastsheng.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E8%AE%BA%E6%96%87%E7%AC%94%E8%AE%B0/2023/"}]},{"title":"机器学习基础-2","date":"2023-05-27T04:18:28.000Z","path":"wiki/2023/05/27/notes/MachineLearning/MLPython-2/","text":"[toc] 机器学习基本流程 sklearn中文文档 数据集 scikit-learn kaggle UCI chEMBL ChEMBL是一个人工整理的具有药物性质的生物活性分子数据库。它汇集了化学、生物活性和基因组数据，以帮助将基因组信息转化为有效的新药 Covalent Inhibitor Database 最大的网络资源，可访问的共价抑制剂和相关的目标。最新版本提供了综合文献检索收集到的8561个共价抑制剂和343个相关蛋白靶点的信息。 读取鸢尾花数据集： 12import pandas as pddf = pd.read_csv(&#x27;iris.data&#x27;,names=[&#x27;sepal length&#x27;,&#x27;sepal width&#x27;,&#x27;petal length&#x27;,&#x27;petal width&#x27;, &#x27;class&#x27;]) 数据处理 缺失值处理： 1234df.isna().sum() # 查看df.dropna() # 删除缺失值行df2 = df[df.standard_value.notna()]df2 LabelEncoder： 123from sklearn.preprocessing import LabelEncoderlabelencoder_B = LabelEncoder()df[&quot;Borough&quot;] = labelencoder_B.fit_transform(df[&quot;Borough&quot;]) 划分数据集： 12from sklearn.model_selection import train_test_splitx_train, x_test, y_train, y_test = train_test_split(x,y, test_size=0.3, random_state=22) 特征工程（特征预处理） Z-score 标准化：在已有样本足够多的情况下比较稳定，适合现代嘈杂大数据场景 1234from sklearn.preprocessing import StandardScalertransfer = StandardScaler()x_train = transfer.fit_transform(x_train)x_test = transfer.fit_transform(x_test) Min-Max 标准化： 1234from sklearn.preprocessing import MinMaxScalertransfer = MinMaxScaler()x_train = transfer.fit_transform(x_train)x_test = transfer.fit_transform(x_test) 特征提取： 1from sklearn.feature_extraction import DictVectorizer 特征降维：改变特征值，选择哪列保留，哪列删除 特征选择：提出数据中的冗余变量 Filter(过滤式)：主要探究特征本身特点、特征与特征和目标值之间关联 方差选择法：低方差特征过滤 相关系数 Embedded (嵌入式)：算法自动选择特征（特征与目标值之间的关联） 决策树:信息熵、信息增益 正则化：L1、L2 12345678910111213141516# 方差选择法# 实例化一个转换器类from sklearn.feature_selection import VarianceThresholdtransfer = VarianceThreshold(threshold=1)# 调用fit_transformdata = transfer.fit_transform(data.iloc[:, 1:10])print(&quot;删除低方差特征的结果：\\n&quot;, data)print(&quot;形状：\\n&quot;, data.shape)# 相关系数from scipy.stats import pearsonrfrom scipy.stats import spearmanrx1 = [12.5, 15.3, 23.2, 26.4, 33.5, 34.4, 39.4, 45.2, 55.4, 60.9]x2 = [21.2, 23.9, 32.9, 34.1, 42.5, 43.2, 49.0, 52.8, 59.4, 63.5]pearsonr(x1, x2)spearmanr(x1, x2) 主成分分析 123456789101112from sklearn.decomposition import PCA# 实例化PCA, 小数——保留90%信息transfer = PCA(n_components=0.9)# 调用fit_transformdata1 = transfer.fit_transform(data)print(&quot;保留90%的信息，降维结果为：\\n&quot;, data1)# 实例化PCA, 整数——指定降维到的维数transfer2 = PCA(n_components=3)# 调用fit_transformdata2 = transfer2.fit_transform(data)print(&quot;降维到3维的结果：\\n&quot;, data2) 数据可视化 统计信息： 12345df.info()df_states = df.describe()df_statesdf_states.transpose() 观察部分信息： 12df.head()df.tail() 快速可视化seaborn.pairplot： 123import seaborn as snspenguins = sns.load_dataset(&quot;penguins&quot;)sns.pairplot(penguins) 常用算法 KNN（K-近邻算法） 12from sklearn.neighbors import KNeighborsClassifierestimator = KNeighborsClassifier(n_neighbors=9) 线性回归 正规方程： 12from sklearn.linear_model import LinearRegressionestimator = LinearRegression() 梯度下降： 12from sklearn.linear_model import SGDRegressorestimator = SGDRegressor(max_iter=1000) 正则化：Ridge（岭回归）、ElasticNet（弹性网络）、Lasso（Lasso 回归） 1234from sklearn.linear_model import Ridge, ElasticNet, Lassoestimator = Ridge(alpha=1) # 岭回归estimator = ElasticNet(random_state=0)estimator = Lasso(alpha=0.1) 逻辑回归 12from sklearn.linear_model import LogisticRegressionestimator = LogisticRegression(random_state=0) 决策树 1234from sklearn.tree import DecisionTreeClassifier, export_graphvizestimator = DecisionTreeClassifier(max_depth=5)# 保存树的结构到dot文件export_graphviz(estimator, out_file=&quot;tree.dot&quot;, feature_names=[&#x27;age&#x27;, &#x27;pclass=1st&#x27;, &#x27;pclass=2nd&#x27;, &#x27;pclass=3rd&#x27;, &#x27;女性&#x27;, &#x27;男性&#x27;]) WebGraphviz 网站显示决策树结构 随机森林 123456# 分类from sklearn.ensemble import RandomForestClassifierestimator = RandomForestClassifier(max_depth=2, n_estimators=10, random_state=0)# 回归from sklearn.ensemble import RandomForestRegressorestimator = RandomForestRegressor(max_depth=3, n_estimators=10, random_state=0) DBSCAN（聚类）:基于密度的空间聚类 12from sklearn.cluster import DBSCANestimator = DBSCAN(eps=0.5, min_samples=2) 适合带有噪声数据的应用 K-means（聚类） 12from sklearn.cluster import KMeansestimator = KMeans(n_clusters=2, random_state=0,n_init=&quot;auto&quot;) 支持向量机(Support vector machine, SVM)) 12from sklearn.svm import LinearSVC #, SVC, SVRestimator = LinearSVC() 基于Vapnik-Chervonenkis理论； 可用于分类与回归； 支持向量回归(SVR)的基本思想是将输入数据映射到高维空间，然后在高维特征空间中计算线性回归函数。 朴素贝叶斯 相比于其他更复杂的方法，朴素贝叶斯学习器和分类器非常快 “朴素”表示特征与特征之间相互独立 高斯朴素贝叶斯 运用于分类的高斯朴素贝叶斯算法 特征的可能性(即概率)假设为高斯分布 12from sklearn.naive_bayes import GaussianNBestimator = GaussianNB() 多项分布朴素贝叶斯 12from sklearn.naive_bayes import MultinomialNBestimator = MultinomialNB(force_alpha=True) 服从多项分布数据的朴素贝叶斯算法； 也是用于文本分类的两大经典朴素贝叶斯算法之一 补充朴素贝叶斯(CNB) 12from sklearn.naive_bayes import ComplementNBestimator = ComplementNB(force_alpha=True) CNB是标准多项式朴素贝叶斯(MNB)算法的一种改进； 特别适用于不平衡数据集； 使用来自每个类的补数的统计数据来计算模型的权重； 伯努利朴素贝叶斯 12from sklearn.naive_bayes import BernoulliNBestimator = BernoulliNB(force_alpha=True) 用于多重伯努利分布数据的朴素贝叶斯训练和分类算法; 即有多个特征，但每个特征 都假设是一个二元 (Bernoulli, boolean) 变量 训练与预测 训练： 1estimator.fit(x_train,y_train) 预测： 1y_predict = estimator.predict(x_test) 模型保存与加载 保存： 12from sklearn.externals import joblibjoblib.dump(estimator, &quot;model.pkl&quot;) 加载： 1estimator = joblib.load(&quot;model.pkl&quot;) 模型评估 比对真实值和预测值： 12print(&quot;预测结果为:\\n&quot;, y_predict)print(&quot;比对真实值和预测值：\\n&quot;, y_predict == y_test) 直接计算准确率： 12score = estimator.score(x_test, y_test)print(&quot;准确率为：\\n&quot;, score) metrics 12from sklearn.metrics import silhouette_scoresilhouette_score(data, y_predict) 算法选择 深度学习教程 DeepLearning AI Learning Deep Learning with Python 《动手学深度学习》 scikit-learn中文社区 其他机器学习工具 Weka 3 - Data Mining with Open Source Machine Learning Software in Java (waikato.ac.nz) 使用 MATLAB 进行机器学习 - MATLAB &amp; Simulink (mathworks.cn)","tags":[{"name":"机器学习","slug":"机器学习","permalink":"https://eastsheng.github.io/tags/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"}],"categories":[{"name":"学习笔记","slug":"学习笔记","permalink":"https://eastsheng.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"},{"name":"机器学习","slug":"学习笔记/机器学习","permalink":"https://eastsheng.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"}]},{"title":"Python mdtraj库安装过程","date":"2023-05-04T04:11:28.000Z","path":"wiki/2023/05/04/softwares/lammps/mdtraj/","text":"mdtraj库安装Installation 官网推荐conda安装： 1conda install -c conda-forge mdtraj PIP安装： 1pip install mdtraj Windows环境python安装失败 不想装conda，直接pip install mdtraj报错： 1234567891011121314Looking in indexes: http://pypi.douban.com/simple/Collecting mdtraj Downloading http://pypi.doubanio.com/packages/2f/03/c174bfb6471f796472ce1d8695f6c0d1a20ad6516cb789b70052df45b7a6/mdtraj-1.9.7.tar.gz (2.1 MB) ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 2.1/2.1 MB 3.7 MB/s eta 0:00:00 Installing build dependencies ... done Getting requirements to build wheel ... error error: subprocess-exited-with-error × Getting requirements to build wheel did not run successfully. │ exit code: 1 ╰─&gt; [34 lines of output] ... ... ... 直接源码安装： 123git clone https://github.com/mdtraj/mdtrajcd mdtrajpip install -e . 跟上面直接pip报同样的错误 在mdtraj文件夹下直接python .\\setup.py install出现了不同的错误： 12345678910111213.........cc.initialize() File &quot;D:\\softwares\\Python\\Python311\\Lib\\site-packages\\setuptools\\_distutils\\_msvccompiler.py&quot;, line 253, in initialize vc_env = _get_vc_env(plat_spec) ^^^^^^^^^^^^^^^^^^^^^^ File &quot;D:\\softwares\\Python\\Python311\\Lib\\site-packages\\setuptools\\msvc.py&quot;, line 214, in msvc14_get_vc_env return _msvc14_get_vc_env(plat_spec) ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ File &quot;D:\\softwares\\Python\\Python311\\Lib\\site-packages\\setuptools\\msvc.py&quot;, line 168, in _msvc14_get_vc_env raise distutils.errors.DistutilsPlatformError(distutils.errors.DistutilsPlatformError: Microsoft Visual C++ 14.0 or greater is required. Get it with &quot;Microsoft C++ Build Tools&quot;: https://visualstudio.microsoft.com/visual-cpp-build-tools/ 看样子需要安装：Microsoft C++ Build Tools 下载安装 Microsoft C++ Build Tools 后（默认安装），再次安装 1python .\\setup.py install 成功一部分，显示Cython包未安装： 123456789C compiler:用于 x64 的 Microsoft (R) C/C++ 优化编译器 19.35.32217.1 版版权所有(C) Microsoft Corporation。保留所有权利。用法: cl [ 选项... ] 文件名... [ /link 链接选项... ]Attempting to autodetect OpenMP support... Compiler supports OpenMPmdtrajs setup depends on Cython (&gt;=0.29). Install it prior invoking setup.pyNo module named &#x27;Cython&#x27; 安装Cython包后再次安装 12pip install cython python .\\setup.py install 以为安装成功了，又报错： 12345.........mdtraj/formats/tng/src/lib/tng_io.c(32): fatal error C1083: 无法打开包括文件: “zlib.h”: No such file or directoryerror: command &#x27;D:\\\\Program Files (x86)\\\\Microsoft Visual Studio\\\\2022\\\\BuildTools\\\\VC\\\\Tools\\\\MSVC\\\\14.35.32215\\\\bin\\\\HostX86\\\\x64\\\\cl.exe&#x27; failed with exit code 2 Windows下ZLib的编译（使用VS2019） Windows中zlib的安装与配置 安装zlib： 1git clone https://github.com/madler/zlib.git 安装cmake Windows下ZLib的编译（使用VS2019） Windows中zlib的安装与配置 不想装vs，太臃肿了，所以这里我不尝试了（有机会再试），还是用Linux版的吧 Ubuntu环境python安装 PIP安装成功： 1pip install mdtraj 1234567891011121314Collecting mdtraj Using cached mdtraj-1.9.7.tar.gz (2.1 MB) Installing build dependencies ... done Getting requirements to build wheel ... done Preparing wheel metadata ... doneRequirement already satisfied: scipy in /home/cup/.local/lib/python3.8/site-packages (from mdtraj) (1.7.3)......Building wheels for collected packages: mdtraj Building wheel for mdtraj (PEP 517) ... done Created wheel for mdtraj: filename=mdtraj-1.9.7-cp38-cp38-linux_x86_64.whl size=8473679 sha256=31b82b30935b14413c5d62fe126d29f8837dcc745bb46ba030902d8ba54facfc Stored in directory: /home/cup/.cache/pip/wheels/68/ff/96/5d9a2efac5e5918e5c8fd799e8703e2f8b804a029bcbbd2431Successfully built mdtrajInstalling collected packages: astunparse, mdtrajSuccessfully installed astunparse-1.6.3 mdtraj-1.9.7 mdtraj测试 安装测试包 1pip install pytest 测试 1234git clone https://github.com/mdtraj/mdtraj.gitcd mdtraj# If using conda, make sure to have your conda environment activepy.test","tags":[{"name":"Lammps后处理","slug":"Lammps后处理","permalink":"https://eastsheng.github.io/tags/Lammps%E5%90%8E%E5%A4%84%E7%90%86/"},{"name":"mdtraj","slug":"mdtraj","permalink":"https://eastsheng.github.io/tags/mdtraj/"},{"name":"Python package","slug":"Python-package","permalink":"https://eastsheng.github.io/tags/Python-package/"}],"categories":[{"name":"软件学习","slug":"软件学习","permalink":"https://eastsheng.github.io/categories/%E8%BD%AF%E4%BB%B6%E5%AD%A6%E4%B9%A0/"},{"name":"Lammps","slug":"软件学习/Lammps","permalink":"https://eastsheng.github.io/categories/%E8%BD%AF%E4%BB%B6%E5%AD%A6%E4%B9%A0/Lammps/"}]},{"title":"Lammps VORONOI Package安装","date":"2023-04-29T10:11:28.000Z","path":"wiki/2023/04/29/softwares/lammps/VORONOI_package/","text":"[toc] Download Voro++12cd ~lammps/lib/voronoi/wget https://math.lbl.gov/voro++/download/dir/voro++-0.4.6.tar.gz Compile Voro++123tar -zxvf voro++-0.4.6.tar.gzcd voro++-0.4.6/make Create two soft links123cd .. # cd to /lib/voronoiln -s voro++-0.4.6/src includelinkln -s voro++-0.4.6/src liblink Installing VORONOI package123cd lammps/srcmake yes-voronoimake mpi -j8 Usage12compute 6 all voronoi/atom neighbors yesdump d2 all local 1 dump.neighbors index c_6[1] c_6[2] c_6[3] References [1] Voro++ [2] compute voronoi&#x2F;atom command","tags":[{"name":"Lammps","slug":"Lammps","permalink":"https://eastsheng.github.io/tags/Lammps/"},{"name":"VORONOI package","slug":"VORONOI-package","permalink":"https://eastsheng.github.io/tags/VORONOI-package/"}],"categories":[{"name":"软件学习","slug":"软件学习","permalink":"https://eastsheng.github.io/categories/%E8%BD%AF%E4%BB%B6%E5%AD%A6%E4%B9%A0/"},{"name":"Lammps","slug":"软件学习/Lammps","permalink":"https://eastsheng.github.io/categories/%E8%BD%AF%E4%BB%B6%E5%AD%A6%E4%B9%A0/Lammps/"}]},{"title":"Phonon package安装与使用","date":"2023-04-22T10:11:28.000Z","path":"wiki/2023/04/22/softwares/lammps/phonon_package/","text":"[toc] 1. 安装phonon123456cd lammps/srcmake ps # 查看是否安装phononmake yes-USER-PHONON # 安装phonon# or make yes-PHONON # 安装phononmake cleanmake mpi -j8 # 重新编译lammps 2. 运行Graphene例子1234567cd lammps/examples/USER/phonon/4-Graphene # LAMMPS 2020# orcd lammps/examples/PACKAGES/phonon/4-Graphene #LAMMPS 2023# RUN LAMMPSmpirun -np 8 lmp_mpi -i in.graphene# auxiliary analysing code &quot;phana&quot; to obtain &quot;pdisp.dat&quot;phana Graphene.bin.6000000 &lt; in.disp 3. 安装Phana phana 1git clone https://github.com/lingtikong/phana lammps声子谱配置与计算 | 我是谁 (yuhldr.github.io) 可以直接使用编译好的文件 precompiled/phana 所需依赖，手动编译四个库clapack&#x2F;3.2.1、tricubic&#x2F;1.0、spglib&#x2F;1.9.7、fftw&#x2F;3.3.7 123456789101112131415161718192021222324252627282930313233343536.SUFFIXES : .o .cpp# compiler and flagsCC = g++ -Wno-unused-result -fopenmpLINK = $(CC) -staticCFLAGS = -O3 $(DEBUG) $(UFLAG)OFLAGS = -O3 $(DEBUG)INC = $(LPKINC) $(TCINC) $(SPGINC) $(FFTINC)LIB = $(LPKLIB) $(TCLIB) $(SPGLIB) $(FFTLIB)# cLapack library neededLPKINC = -I/opt/clapack/3.2.1/includeLPKLIB = -L/opt/clapack/3.2.1/lib -lclapack -lblas -lf2c -lm# Tricubic library neededTCINC = -I/opt/tricubic/1.0/includeTCLIB = -L/opt/tricubic/1.0/lib -ltricubic# spglib, used to get the irreducible q-points# if SFLAG is not set, spglib won&#x27;t be used.#SFLAG = -DUseSPG#SPGINC = -I/opt/spglib/1.16.5/include#SPGLIB = -L/opt/spglib/1.16.5/lib -lsymspg# FFTW 3， used to deduce the force constants in real space# if FFLAG is not set, fftw won&#x27;t be used.#FFLAG = -DFFTW3#FFTINC = -I/opt/fftw/3.3.7/include#FFTLIB = -L/opt/fftw/3.3.7/lib -lfftw3# Debug flags# DEBUG = -g -DDEBUGUFLAG = $(SFLAG) $(FFLAG)...... spglib安装 123456789cd /opt/mkdir spglibcd spglibwget https://zh.osdn.net/projects/sfnet_spglib/downloads/spglib/spglib-1.9/spglib-1.9.7.tar.gztar -zxvf spglib-1.9.7.tar.gzcd spglib-1.9.7./configure --prefix=/opt/spglib/1.9.7makesudo make install Linux 下载&amp;使用 CLAPACK (CBLAS) 1234567891011121314151617cd /opt/mkdir clapackcd clapackwget www.netlib.org/clapack/clapack.tgztar xvf clapack.tgzmv CLAPACK-3.2.1 3.2.1cd 3.2.1mv make.inc.example make.incmake f2clib # get `./F2CLIBS/libf2c.a`make blaslib # get `./blas_LINUX.a`make # get `./tmglib_LINUX.a` and `./lapack_LINUX.a`# 忽略TESTING报错mkdir libcp ./F2CLIBS/libf2c.a ./libcp ./blas_LINUX.a ./libcp ./tmglib_LINUX.a ./libcp ./lapack_LINUX.a ./lib tricubic 12345678cd /optmkdir tricubiccd tricubicgit clone https://github.com/nbigaouette/libtricubic.gitcd ./libtricubic/tricubic-1.0./configure --prefix=/opt/tricubic/1.0makesudo make install fftw 12345678cd /optmkdir fftwcd fftwwget http://www.fftw.org/fftw-3.3.10.tar.gzcd fftw-3.3.10./configure --prefix=/opt/fftw/3.3.10makemake install 编译phana 123cd phana# 检查 Makefile 库路径sudo make 4. generate pdisp.eps1gnuplot plot.pdisp","tags":[{"name":"Lammps","slug":"Lammps","permalink":"https://eastsheng.github.io/tags/Lammps/"},{"name":"phonon package","slug":"phonon-package","permalink":"https://eastsheng.github.io/tags/phonon-package/"}],"categories":[{"name":"软件学习","slug":"软件学习","permalink":"https://eastsheng.github.io/categories/%E8%BD%AF%E4%BB%B6%E5%AD%A6%E4%B9%A0/"},{"name":"Lammps","slug":"软件学习/Lammps","permalink":"https://eastsheng.github.io/categories/%E8%BD%AF%E4%BB%B6%E5%AD%A6%E4%B9%A0/Lammps/"}]},{"title":"Ovito高质量图片渲染Python模块","date":"2023-04-13T10:11:28.000Z","path":"wiki/2023/04/13/softwares/lammps/ovito_plot_rendering/","text":"安装ovito安装OVITO Python Module1pip install -U ovito 测试12import ovitoprint(&quot;Hello, this is OVITO %i.%i.%i&quot; % ovito.version) 渲染脚本123456789101112from ovito.io import import_filefrom ovito.vis import Viewport,TachyonRenderer#读入data文件d = &quot;1_nvt_-0.07&quot;pipeline = import_file(d+&#x27;.data&#x27;)pipeline.add_to_scene()vp = Viewport(type = Viewport.Type.FRONT, camera_dir = (0, 0, 0)) #(0, 1, 0))vp.zoom_all()#配置输出vp.render_image(filename=d+&#x27;.png&#x27;, size=(3200, 2400), renderer=TachyonRenderer(shadows=False, direct_light_intensity=1.1)) 参考 [1] Rendering &amp; visualization [2] lammps教程：ovito免费输出高清图片方法","tags":[{"name":"Lammps","slug":"Lammps","permalink":"https://eastsheng.github.io/tags/Lammps/"},{"name":"Ovito图片渲染","slug":"Ovito图片渲染","permalink":"https://eastsheng.github.io/tags/Ovito%E5%9B%BE%E7%89%87%E6%B8%B2%E6%9F%93/"}],"categories":[{"name":"软件学习","slug":"软件学习","permalink":"https://eastsheng.github.io/categories/%E8%BD%AF%E4%BB%B6%E5%AD%A6%E4%B9%A0/"},{"name":"Ovito","slug":"软件学习/Ovito","permalink":"https://eastsheng.github.io/categories/%E8%BD%AF%E4%BB%B6%E5%AD%A6%E4%B9%A0/Ovito/"}]},{"title":"修改HOSTS文件加速Github","date":"2023-04-10T15:56:48.000Z","path":"wiki/2023/04/10/git/github_speedup/","text":"Windows 上 Github加速 获取 github 的 global.ssl.fastly 地址访问：https://www.ipaddress.com/site/github.global.ssl.fastly.net#ipinfo 1199.232.69.194 获取http://github.com 地址: https://www.ipaddress.com/site/github.com#ipinfo 1140.82.114.4 添加以下到C:\\Windows\\System32\\drivers\\etc\\host文件内 12199.232.69.194 github.global.ssl.fastly.net140.82.114.4 github.com Ubuntu 上 Github加速 获取github.global.ssl.fastly.net的IP地址 1nslookup github.global.ssl.fastly.net 获取github.com的IP地址 1nslookup github.com 写入hosts文件 123sudo vim /etc/hosts #打开hosts文件，输入i粘贴以下内容至末尾192.133.77.191 github.global.ssl.fastly.net20.205.243.166 github.com 重启网络或重启系统 12sudo /etc/init.d/networking restart # orreboot","tags":[{"name":"Github加速","slug":"Github加速","permalink":"https://eastsheng.github.io/tags/Github%E5%8A%A0%E9%80%9F/"}],"categories":[{"name":"Git","slug":"Git","permalink":"https://eastsheng.github.io/categories/Git/"}]},{"title":"论文笔记2023-夏","date":"2023-03-31T16:00:00.000Z","path":"wiki/2023/04/01/notes/PaperReadNote2023_B/","text":"Paper Notes 20232023-4月@5月@6月Some phrases complimentary to its thermo effect mitigates the kinetic nucleation of gas hydrate. mitigates v. &lt;正式&gt;减轻，缓和 The growth morphology of hydrates against with simulation time is shown in Fig. 2A This seems to contradict to the fact that … play crucial roles. play the auxiliary roles auxiliary adj. 辅助的；备用的，后备的 On the basis of these analyzations, it is suggested the hydrate inhibition efficiency of $CH_3OH$ can be regulated by changing its H-bond formation ability with waters, which is furtherly verified by MD simulations. have made intensive studies to evaluate the value temporal and spatial This is because the dissociation of MH into gas and water is an endothermic process (436.8 $kJ .kg^{−1}$) that is controlled by heat supply via conduction and advection. yielded much thermodynamic information It is undeniable that the 不可否认， This evidence undoubtedly indicates that 这一证据无疑表明 tertiary recovery 三次开采；强化采油 simulations under realistic conditions and environments are not available yet. 现实条件和环境下的模拟还无法实现。 with the aim to simulate the system behaviour using classical Molecular Dynamics with the direct coexistence technique. 目的是…… With the aim to study the three phase equilibria, 为了研究三相平衡， interfere with crystallization process. v. 干涉 at least three different crystalline structures,至少有三种不同的晶体结构， ranging from microscopic molecular scale to macroscopic geological perspectives has been the option used. albeit very simplified, 虽然非常简单， albeit, conj. 虽然，尽管 were truncated at 11 Å 被截断到11 Å truncate v. 截断，删节；把……截成平面 cut off This means that, 这就是说 &#x2F;这意味着 &#x2F;这就意味着 tentative tests 初步测试 in either freshwater and real seawater. 无论是淡水还是真正的海水。 The results obtained for system ‘B’ are plotted in Fig. 5 against experimental results. triphasic system 三相的系统 This fact is to be underlined the subtle difference 细微的差别 As final remark useful precursor of the hydrate dissociation Whilst highly calorific Whilst ， conj. &lt;英，正式&gt;当……的时候；与…同时；然而，但是；虽然，尽管； The results of the present work are in excellent agreement with the expected values 本研究的结果与预期值非常吻合 This result is not in agreement with the conclusions of Conde we observed hydrate growth at temperature values well above the experimental T 我们观察到水合物在远高于实验温度的温度下生长 it is worthwhile mentioning that In that particular case, Limited by the low spatial and temporal resolution, the hydrate cluster acts as a large gas source they are ubiquitous 它们无处不在 $CH_4$ in the form of hydrate can be used for at least 300 years of global energy consumption. in the incipient stage 在初始阶段 in the vicinity of the hydrate&#x2F;liquid interface 在水合物&#x2F;液体界面附近 hydrolytic power 水解能力 These problems and concerns have spurred on a great interest in KHIs that are able to delay the formation of hydrate spur v. 激励，鼓励；促进，加速，刺激 harsh subsea conditions 恶劣的海底条件 to select more suitable hydrate inhibitors and building a better composite inhibitor system which is based on an understanding of the mechanisms of inhibitors is a key to be solved. variation patterns 变异规律，变异模式，变化规律 at intervals 间隔地，间歇地 replenish methane 补充甲烷 non-toxic 无毒的 trial-and-error method 试错法：一种解决问题的方法，通过不断尝试和改正错误来找到正确的答案。 5-fold higher than that of … an easy-to-use tool is considered the most feasible 被认为是最可行的 水合物分解速率与距离有关？ Yang et al. observed the depressurization dissociation process of xenon (Xe) hydrate using synchrotron X-ray CT and found that the dissociation of hydrate is heterogeneous and that the dissociation rates depend on the distance between the hydrate surface and the gas phase. 海洋水合物沉积物实验观察方法 X-ray computed tomography (CT) microfocus X-ray CT 微聚 synchrotron X-ray CT 同步加速 激活函数 神经网络中的一种函数，用于引入非线性性质，使得神经网络可以学习和表示更加复杂的函数关系； 在神经网络中，每个神经元接收来自前一层神经元的输入，并通过激活函数对输入进行非线性变换后输出； 激活函数通常应用于神经网络的隐藏层和输出层，而输入层通常不需要激活函数； 常见的激活函数包括： Sigmoid函数：将输入值映射到0到1之间的连续输出，常用于二分类问题或将输出解释为概率。 ReLU函数（Rectified Linear Unit）：将负值设为零，正值保持不变，能够解决梯度消失问题，并且计算效率高。 Leaky ReLU函数：在负值部分引入一个小的斜率，解决ReLU函数负值部分出现的死亡神经元问题。 Tanh函数：将输入值映射到-1到1之间的连续输出，比Sigmoid函数具有更大的梯度。 Softmax函数：常用于多分类问题，在输出层将多个神经元的输出归一化为概率分布。 不同的激活函数适用于不同的问题和网络结构，选择合适的激活函数能够提高模型的性能和训练效果。在设计神经网络时，通常需要根据具体任务和网络结构选择适合的激活函数。 ChatGPT May 24 Version kernel function核函数 是机器学习中一种常用的数学函数，它用于衡量两个输入样本之间的相似性或距离； 在很多机器学习算法中，例如支持向量机（SVM）和核方法，核函数起着至关重要的作用； 核函数可以将输入样本从原始的特征空间映射到一个更高维的特征空间，从而使得在原始空间中线性不可分的问题变得线性可分，这种映射可以有效地将非线性问题转化为线性问题，从而提高模型的表达能力和性能。 常见的核函数包括： 线性核函数（Linear Kernel）：直接计算输入样本之间的内积，即 $K(x, y) &#x3D; x^T y$。 多项式核函数（Polynomial Kernel）：通过将输入样本映射到更高维的多项式特征空间，计算两个样本之间的多项式函数值。 高斯径向基函数（Gaussian Radial Basis Function，RBF）：将输入样本映射到无穷维的特征空间，计算两个样本之间的高斯相似度。 sigmoid核函数（Sigmoid Kernel）：通过计算两个样本之间的双曲正切函数值，将输入样本映射到一个非线性特征空间。 核函数的选择取决于数据的特点和所使用的机器学习算法。不同的核函数对应不同的特征映射方式，因此在实际应用中需要根据问题的性质和数据的分布选择适合的核函数。 ChatGPT May 24 Version M5 Rules 基于separateand-conquer 算法 separateand-conquer：将一个问题分解为多个相同或相关类的子问题，直到这些问题变得足够简单，可以直接解决。 这是一种类似于CART的回归树算法，它进行了额外的修剪，使得叶子可以包含线性模型而不是常数值。这个想法是为了得到更流畅和更简单的模型。 Lipinski描述符 Lipinski描述符，也称为Lipinski规则或Lipinski’s Rule of Five，是一组用于评估化合物药物性质和药物可行性的规则。这些规则由药物化学家Christopher A. Lipinski在1997年提出，旨在筛选潜在的药物分子，以判断其可能的口服生物利用度和药物性能。 Lipinski描述符包括以下四个规则： 分子的分子量（Molecular Weight）应小于500 Dalton。 分子的脂水分配系数（LogP）应小于5（或者脂溶性指数（logD）应小于5）。 分子的氢键受体数（Hydrogen Bond Acceptors）应小于10。 分子的氢键供体数（Hydrogen Bond Donors）应小于5。 这些规则是基于统计分析和结构-活性关系模型得出的，并被认为是描述药物分子性质和可行性的基本指标。通过应用Lipinski描述符，可以快速筛选出具有潜在药物活性的化合物，并在早期药物发现阶段进行初步评估和筛选。 需要注意的是，Lipinski描述符仅提供了一种粗略的筛选方法，不能代表药物的所有性质和活性。在药物设计和开发过程中，通常还需要考虑其他因素和更精确的计算方法来评估化合物的潜在药物性能。 热力学水合物抑制剂工业用量 In the current industrial application, it is a safe but conservative practice that THI are often injected at the maximum mass concentration (up to 60%) to prevent hydrate formation to the largest degree Journal of Molecular Liquids 370 (2023) 120952 氨基酸作为绿色热力学抑制剂 There are growing interest to employ amino acids as green THI, because they are natural compounds without toxicity and biodegradability issues and they are less expensive. 使用好处 Previous studies demonstrated that some amino acids coul thermodynamically inhibit hydrate information but some others could promote the kinetics of hydrate formation 存在争议 Journal of Molecular Liquids 370 (2023) 120952 It was observed that the inhibition or promotion effects depended on a variety of factors such as the composition of natural gas and the concentration and hydrophobicity of amino acid. 矛盾的抑制和促进作用与很多因素有关 sII比sI甲烷水合物更稳定 sII gas hydrate is more stable than sI gas hydrate, in other words, sII gas hydrate can endure higher temperature than sI hydrate at the same water depth [1] 曲率 曲率是描述曲线在某一点的弯曲程度的物理量。计算曲率需要使用微积分。具体来说，如果曲线可以表示为参数方程 $x&#x3D;f(t)$, $y&#x3D;g(t)$，那么曲线在点 $(x_0, y_0)$ 处的曲率为： $$\\kappa &#x3D; \\frac{|x’(t) y’’(t) - y’(t) x’’(t)|}{[x’(t)^2+y’(t)^2]^{3&#x2F;2}}$$ 其中，$x’(t)$ 和 $y’(t)$ 分别表示曲线在点 $(x_0, y_0)$ 处的切线在 $x$ 和 $y$ 方向的分量，$x’’(t)$ 和 $y’’(t)$ 分别表示曲线在点 $(x_0, y_0)$ 处的二阶导数在 $x$ 和 $y$ 方向的分量。 另外，如果曲线可以表示为 $y&#x3D;f(x)$ 的函数形式，那么曲线在点 $(x_0, y_0)$ 处的曲率为： $$ \\kappa &#x3D; \\frac{|f’’(x)|}{[1+f’(x)^2]^\\frac{3}{2}} $$ 需要注意的是，曲率通常是一个标量，但在某些情况下，为了描述曲线的弯曲方向，可以引入曲率的正负号。 当曲线向左弯曲时，曲率为负；当曲线向右弯曲时，曲率为正。 化学势（chemical potential ） 在热力学中，某种物质的化学势指的是，在化学反应或者相变中，此物质的粒子数发生改变时所吸收或放出的能量。 在混合物中的某种物质的化学势定义为此热力学系统的吉布斯自由能对此物质粒子数的变化率，即偏导数（其他物质的粒子数及其他系统参数保持不变）。 当温度和压强固定时，化学势也被称作偏摩尔吉布斯自由能，或者摩尔化学势[1]。在化学平衡或相平衡状态下，自由能处于极小值，各种物质的化学势与化学计量系数乘积之和为零。 粒子总是趋向于从高化学势流向低化学势，因而，化学势可视为物理中“势能”概念的推广。 ChatGPT: 化学势代表的是物质在化学反应或物理过程中能够转化为其他物质的能力。 化学势是一种能量，它与物质的浓度、压力和温度等状态参量有关。 对于单一成分的理想气体，在一个稳定状态下，其化学势与其摩尔浓度成正比。 在化学反应中，化学势是判断反应方向和反应速率的一个重要参数。 Simple free energy calculation分子模拟控压&#x2F;控温 Controlling Pressure Molecular dynamics: thermostats &amp; barostats Parrinello-Rahman MD - lammps Triclinic (Parrinello-Rahman) Effects of thermostats&#x2F;barostats on physical properties of liquids by molecular dynamics simulations Overall, Nosé-Hoover&#x2F;V-rescale thermostat, and Parrinello-Rahman barostat with moderate coupling strength are recommended for common NVT&#x2F;NPT production simulations. Arrhenius plot Arrhenius plot是用于研究化学反应速率和温度之间关系的常用图形方法。该方法用于表征化学反应速率随温度的变化规律，并通过考察反应速率常数的指数形式分析反应机理的温度依赖性，进而了解反应的活化能和反应路径等信息。 Arrhenius方程式通常用于反应速率常数（$k$）随温度（$T$）的函数关系描述$ln k &#x3D;-Ea&#x2F;R*1&#x2F;T + lnA$ 其中，$Ea$是激活能，$A$是反应因子或振动频率，$R$是气体常量。对该方程进行自然对数变换后，对于反应速率常数$ln k$，可以得到一个关于$1&#x2F;T$的线性方程式，即: $ln k &#x3D; -Ea&#x2F;R*1&#x2F;T + lnA$，这就是Arrhenius方程式在Arrhenius plot中的表现形式,可以用线性回归的技术对展示线性方程式。在Arrhenius plot中，常数浓度下温度和反应速率常数$1&#x2F;T$作为横纵轴的图形。将实验数据通过自然对数进行转换，可得到一个关于$1&#x2F;T$的线性函数，其斜率是由反应激活能Ea和R得出的，而其截距是由反应因子或振动频率A得出的。 Arrhenius plot可用于研究很多与温度有关的化学反应、物理过程的速率变化规律，是一个在实验化学中常用的分析手段。 Arrhenius 图的绘制 为什么水合物分解都是一层一层分解？ 水合物内部在水合物表面分解之前无法分解。 这一现象背后的原因是： 未释放的甲烷分子可以稳定水分子氢键形成的水合物笼； 对于水合物表面笼，如果有少量水分子从完整的氢键笼网中逸出，则气体分子很容易从不完整的笼中扩散出来，有利于分解过程； 因此，水合物的分解过程是不均匀的； 水合物从外表面到内表面依次分解； 但是，如果表面传质有限，系统加热迅速，水合物分解过程可以以均匀的方式发生 Fuel 345 (2023) 128230 晶体水合物在水相中分解 如果一个水合物立方体结构在水溶液中分解，会从方形结构，逐渐分解为圆形，主要是由于[Gibbs–Thomson](Generalization of the Gibbs-Thomson equation - ScienceDirect)效应 Gibbs-Thomson效应，也被称为Kelvin效应，是指在纳米尺度下，曲率对材料的相变温度或熔点的影响。该效应描述了纳米尺度下曲率引起的相变温度或熔点的升高或降低现象。 Gibbs-Thomson效应的原理基于表面自由能和曲率之间的相互作用。根据Gibbs公式，材料的化学势与温度、压力和表面自由能有关。在曲率存在的情况下，材料的表面自由能会发生变化，导致相变温度或熔点发生偏移。 具体而言，对于曲率半径为$r$的纳米尺度材料颗粒，Gibbs-Thomson效应可以用以下公式描述： $ΔT &#x3D; (2γV_m)&#x2F;(rρ_mΔH_f)$ 其中，$ΔT$是相变温度或熔点的变化，$γ$是材料的表面自由能，$V_m$是摩尔体积，$ρ_m$是摩尔密度，$ΔH_f$是相变的摩尔热。公式表明，当曲率半径减小时，$ΔT$将增加，即相变温度或熔点将升高。 这种效应的原理是，曲率会引起材料表面原子或分子的排列紧凑程度的变化，从而改变表面自由能。 当曲率半径较小时，表面自由能的增加导致了相变温度或熔点的升高。这是因为在小曲率下，表面自由能的增加更为显著，相应地需要更高的温度或能量才能克服这种增加而发生相变。 Gibbs-Thomson效应在纳米颗粒、纳米线和其他纳米结构中具有重要的应用和影响，特别是在研究和控制纳米材料的相变行为和熔化过程中。 ChatGPT3.5 关于TIP4P水分子中键角系数 TIP4P是一个刚性水势。因此，力常数是无关紧要的，因为几何体必须通过固定震动或震动或刚性来保持刚性 Regarding bond coefficient parameters of TIP4P water model 水合物分解后产生纳米气泡 Fuel 345 (2023) 128230 已经通过使用透射电子显微镜TEM观察到纳米气泡： Korean Journal of Chemical Engineering volume 33, pages1749–1755 (2016) 纳米气泡特点： 体积小，在水中的上升速度可以忽略不计，以及极高的内压。 气泡可能会促进残余水合物的分解，但是也有研究发现相反的影响： 当气泡在水合物界面处时，由于热阻影响，显著降低水合物分解率，可见热输运在水合物中分解是十分重要的； Chem A Eur J 2014;118(11):1971–88. English等提出一个水合物分解过程中，耦合质量和热量传输的简单模型， J. Chem. Phys. 131, 074704 (2009) 宏观实验上也证明了，气泡、泡沫的存在会减少水合物分解速率 Chem Eng J 2021;425:130633. The combination of gas supersaturation and diffusion controls the formation of nanobubbles during hydrate dissociation, which strongly depends on temperature. Fuel 345 (2023) 128230 In nature, hydrate sources often occur in systems with porous media. 固体和受限空间会影响传质和纳米气泡的形成，因此，在真实的水合物储层环境中存在体相和表面纳米气泡。在TEM实验上已经观察到这两种气泡。 Thermodynamic inhibitors, such as methanol ($CH_3OH$) and sodium chloride (NaCl), enhance the hydrate dissociation process by facilitating nanobubble formation by different mechanisms. 在水合物表面附近，纳米气泡可以在不同距离和任何时间随机形成。因此，纳米气泡的形成是不可预测的。 Fuel 345 (2023) 128230 sI型水合物中$CH_4$与$H_2O$的比例： The methane to water ratio reaches 1:5.75 in the sI methane hydrate Clathrate Hydrates of Natural Gases. Crc Press. 2007. 抑制水合物分解的钻井液工艺 1. 增加井底压力：在一定温度下，只要保证水合物层处的井内液柱压力比此温度下天然气水合物的相平衡压力高，就可以保证水合物不分解。 优点：对于设备的要求很少，且操作简便，是一种应用非常广泛的控制水合物分解的方法，并且可以有效防止井涌井喷等事故的发生； 但是，钻井作业是一个完全动态的过程，欲抑制天然气水合物的分解，仅靠压力控制是不够的。井筒内部压力时刻在变化，且受到多种外部因素的影响，就简单以停钻换钻头为例，起钻后会造成压力波动； 如不改变钻井液密度，井内液柱压力很有可能降低至平衡压力以下，此时水合物就可能发生不受控分解； 而如果每次井下施工作业都需要调整钻井液密度以配合施工时的压力变化，势必造成工序的复杂化； 如果仅仅是继续增大钻井液密度以满足停钻或起钻时的压力需求，那么在正常钻进过程中或者下钻过程中就有可能使井下压力过高造成井漏。 2. 温度控制与压力控制协同作用：从相平衡的两个方面（即温度和压力）同时着手，再增加钻井液液柱压力的同时通过冷却设备在不影响钻井液性能的前提下将钻井液温度降低； 优点：此类方法较单纯的压力控制法具有更广泛的压力适应范围； 缺点：海洋钻井作业一般是在钻井平台或者钻井船上完成，空间非常有限，钻井液冷却设备上船或上平台无疑会大幅增加钻井成本； 3. 化学方法稳定地层水合物： 传统的物理学方法抑制地层中天然气水合物的分解存在一定的局限性。陈卫东等通过测定Lecithin 存在条件下钻井液的水合物热力学平衡条件及动力学条件，得出Lecithin 不会影响试验中的钻井也体系的热力学平衡条件，且如果控制在一定浓度范围内，也并不会对水合物的动力学特性造成影响 Tips: 为了保证能在井底提供足够高的压力，钻井液密度也需要达到一定水平; 当井底的条件已经非常适合水合物的生成时，就需要考虑水合物在钻井液中生成的问题，就需要加入一定的水合物生成抑制剂; 常见的情况是加入一定量的热力学抑制剂（NaCl、乙二醇等）并配合少量的动力学抑制剂（PVP、PVCap 等） 海洋钻井液特点与性能要求 耐盐性、时效性、耐低温、天然气水合物生成与分解的抑制性能 天然气水合物层钻井过程势必会引起一部分天然气水合物分解； 分解出的水和天然气进入井筒，在低温高压环境中极易重新生成水合物，会对钻井液性能造成不良影响； 此外天然气水合物地层钻井过程中还需尽量减少地层中水合物的分解，否则可能造成井壁失稳等严重问题。 深水钻井液在水合物开发中的应用 对于水合物储层来说 类型 优点 缺点 现状 油基钻井液 低含水量，抑制水合物生成 不环保、使用非常繁琐 不少国家已禁止在海洋钻井中使用 水基钻井液：高盐&#x2F;聚合物钻井液 NaCl等热力学抑制剂降低相平衡温度，抑制钻井液中水合物生成，具有生物降解速度快、生物毒性低等特点 高盐度无法获得低密度钻井液、无机盐溶解度的限制使其性能维护繁琐 盐度可达20%NaCl 水基钻井液：氨基聚合物水基钻井液 由包被剂、页岩抑制剂、降滤失剂和防聚剂组成的高性能水基钻井液体系，能够有有效提高钻速、减少钻头泥包、抑制泥页岩水化膨胀，具有较好的储层保护效果 ~ ~ 水合物抑制剂抑制与分解的矛盾问题 针对钻井过程中井筒稳定性： 一方面要防止天然气水合物在井筒中生成； 一方面也应该从化学手段中寻求减缓水合物分解的方法 卵磷脂（Lecithin）可以抑制水合物分解； 此时抑制剂的作用是抑制水合物的分解 钻井过程中的钻井液性质变化： 由于初始应力状态被打破、外来流体冲刷、钻头与地层之间的摩擦等原因，地层中的天然气水合物不可避免的会部分分解； 分解出的水和甲烷气体都会进入钻井液中； 而此时的外部环境其实还是处于一个低温高压的状态； 如果钻井液抑制性能不足，则可能在井筒中形成天然气水合物，对钻井液体系性能造成严重影响。 此时抑制剂的作用是抑制钻井液中的水合物的形成 例：钻井液中Lecithin卵磷脂浓度过高（&gt;0.5%），可能会加速钻井液中水合物生成；而钻井液内加入卵磷脂是为了抑制井壁水合物的分解 Direct phase coexistence methodology In the direct phase coexistence methodology, different phases including a solid hydrate, liquid water and gas methane are brought in contact； and through MD NPT simulations, the system is allowed to evolve to the equilibrium state that corresponds to the given condition； By scanning the temperature for a given pressure, it is possible to determine the coexistence temperature. 具体模拟细节： 全部在NPT系综下模拟； NPT系综1ps； 采用aniso各向异性进行控压，使每个方向可压缩； timestep&#x3D;2 fs、leap-frog integrator; 总模拟时间取决于压力和温度条件，通常在1000-4000 ns; cutoff distance&#x3D;1.1 nm; 多次独立运行系综平均； 一般以预期的三相共存温度为中心，以2K为间隔； 一般预期的$T_{3,预期}&#x3D;T_{3,实验}-3.15$K; 初步模拟设计： 构建“甲烷-水-水合物-水-甲烷”模型（为了后期研究孔隙内的情况）； 结构优化； 2 ps NPT；(4, 14, 24, 40 MPa)，各向异性（aniso），温度可以先进行大的温度步长进行搜索，比如10K缩小范围，然后为2K，确定共存温度。 200 ns tp equilibration, dt&#x3D;2 fs 继续1500 ns甚至2000 ns去确定三相共存点 水合物在MD模拟过程中存在的细节： 直接相共存法固有的随机性影响在三相平衡条件下更为明显; 在三相共存平衡压力温度下，水合物即可能分解也可能生长； 稍微不同的初始速度加上温度和压力耦合所施加的波动可以导致不同的最终状态(即生长、分解)，这种行为在平衡温度附近的几K内持续存在；那么实验上有没有这种现象呢？ 类似，水合物的分解率在不同的独立运行之间是不同的； 如果只使用一次运行，这种随机行为会给共存温度的确定带来严重的问题； 因此，由水合物生长和分解过程的随机性引起的另一个含义是，为了对系统的最终状态得出明确结论所需的模拟时间在不同的运行之间差别很大； 压力越高，所需时间越短，但是在接近三相共存温度时却不适用； 其次，水合物的生长速率随着温度的降低而增加，这对所有被测试的压力都成立； J. Chem. Phys. 142, 044501 (2015) 甲烷过饱和到底在自然界水合物储层常见不常见？ Supersaturated conditions are not commonly encountered in nature, while on the other hand, methane concentration that corresponds to the solubility limit is believed to offer improved accuracy. J. Chem. Phys. 142, 044501 (2015) Another characteristic of methane hydrates in the ocean is the presence of an excess of methane. Journal ofMolecular Liquids 274 (2019) 426–433 为什么水合物MD模拟中生成要比分解慢的多 It must be noted that the process of growing the methane hydrate crystalline structure presents a much slower kinetic than the process of dissociation. Journal ofMolecular Liquids 274 (2019) 426–433 it is explained that methane molecules are transported from the water (L) –methane(G) to the hydrate (S) –water(L) interphase by a methane concentration gradient. This process is considered to be the most important step, because it is the slowest mass transfer process present, and thus it controls the hydrate growth. Clathrate Hydrates of Natural Gases, , 3rd Edition ed., CRC Press. 2008. 占有率对水合物分解速率 English等人采用MD表明在80%-100%的范围内，甲烷占据水合物相对解离率的影响不大。 Chem. Phys. 123 (24) (2005) 244503. 一些MD研究表明，当笼子占有率大于85%时，甲烷水合物的分解点不会改变 Journal ofMolecular Liquids 274 (2019) 426–433 此外，Kvenvolden表示大多数天然甲烷水合物的占有率在98%左右。 Rev. of Geophys. 31 (2) (1993) 173–187. 在水合物分子模拟的三相共存研究时截断半径选择 设置为盒子的一半左右，先前的研究都要小于该值； 但是，it has been shown that this value has a relevant influence in the determination of properties of coexisting phases using Molecular Simulation Thus, it is advisable to use a value approaching the upper limiting value which is half the simulation box size, and for this reason this 11Å value has been fixed in this case. J. Chem. Phys. 138, 034707 (2013) 甲烷浓度对水合物相平衡存在影响； 什么是Grand Canonical？ Grand Canonical（广义巨正则）是统计力学中的一个系综，用于描述具有可变粒子数、能量和体积的开放系统。Grand Canonical系综适用于研究与热平衡的大型储备系统相互作用的系统，其中粒子可以通过与储备系统的交换而进入或离开系统。 Grand Canonical系综中，系统的能量、粒子数和体积不是固定的，而是在一定的约束条件下可以变化。系统与一个大型储备系统（例如热浴）保持热平衡，并且可以通过粒子的进出调整粒子数。这个储备系统的粒子数和能量与系统之间可以发生交换。 在Grand Canonical系综中，系统的状态由三个变量决定：化学势（μ），温度（T）和体积（V）。化学势是描述粒子进出系统的趋势的参数，温度则决定系统与储备系统之间的热平衡，而体积是系统的几何约束。 Grand Canonical系综的基本假设是系统和储备系统之间的粒子交换是自由的，即系统可以自由地吸收或释放粒子，以使其化学势与储备系统的化学势保持平衡。这种交换可以通过粒子数的涨落来描述。 通过应用Grand Canonical系综，可以计算系统中粒子的平均数、能量的平均值以及其他与系统的热力学性质相关的量。它是研究具有可变粒子数的开放系统的重要工具，并在各种领域的研究中得到广泛应用，包括凝聚态物理、统计力学和物理化学等。 ChatGPT May 24 Version MD测定水合物的相平衡曲线 the direct coexistence technique to estimate the three phase equilibrium curve for methane hydrate This relatively straightforward but quite efficient technique uses a simulation box where all coexisting phases at given thermodynamic conditions are placed in contact. A scan in pressure and temperature allows to determine the phase boundaries by locating the stability limits of the present phases. Journal ofMolecular Liquids 274 (2019) 426–433 水合物模拟时间、尺寸范围： The range of methods used go, ordered bottom-up for the time and distance scales involved, from ab initio quantum mechanics atomic calculations, classical molecular simulations (both Molecular Dynamics and Monte Carlo) to continuum thermodynamic models as equations of state. Journal ofMolecular Liquids 274 (2019) 426–433 为什么有的水合物分解模拟，分解温度设置会很高330K Next, dissociation temperature (300 or 325 K), which is higher than equilibrium temperature (~286 K), was used to investigate hydrate decomposition to shorten the simulation time. Such a high thermodynamic nucleation condition is selected for hydrate formation to overcome the rare event of natural nucleation and accelerate hydrate nucleation and growth 为了缩短模拟时间 Journal of Molecular Liquids 363 (2022) 119831 以下是水合物抑制剂抑制水合物分解的高通量搜索步骤的一般示例： 确定研究目标：明确希望通过高通量搜索找到具有水合物抑制效果的化合物或物质。 构建化合物库：收集一系列潜在的水合物抑制剂候选物质，并建立一个化合物库。这可以包括已知的抑制剂、天然产物、合成化合物、药物库中的化合物等。 设计实验方案：确定实验条件和参数，如温度、压力、水合物样品类型等。设计实验方案时要考虑使用高通量方法进行大规模筛选和评估。 高通量筛选：使用自动化设备和高通量筛选平台，将化合物库中的候选物质逐一进行筛选。可以通过各种高通量技术，如微孔板筛选、流式细胞术、荧光筛选等，进行快速而高效的样品处理和评估。 抑制效果评估：使用合适的评估方法，对筛选后的化合物进行水合物抑制效果的评估。这可能包括水合物稳定性测试、分解速率测量、热导率测量等，以确定化合物对水合物分解的抑制效果。 数据处理和分析：对获得的大量数据进行处理和分析。可以使用统计分析、机器学习算法等方法，筛选出具有良好抑制效果的候选物质，并进一步优化筛选结果。 优化和验证：根据筛选结果，进一步优化和验证具有潜在抑制性能的化合物。这可能涉及合成改进、药物化学修饰等方法，以提高抑制剂的活性和选择性。 验证和应用：对筛选和优化后的抑制剂进行验证和应用。这可能包括在实验室条件下进行更详细的研究、进一步的性能评估、模拟计算等，以验证其在实际应用中的效果和潜力。 请注意，具体的高通量搜索步骤可能因研究目标、实验条件和设备可用性而有所不同。因此，在实际应用中，根据具体情况进行调整和优化是必要的。 Modeling Two-Phase Flow Caused by Hydrate Dissociation in a Reservoir on the Concept of Global Pressure采用注入抑制剂的方法并不是进行水合物藏开采的首选方案 主要有以下几个原因： 技术可行性：注入抑制剂需要将抑制剂物质输送到水合物储层中，以抑制水合物的形成或分解。这要求具备高效的注入设备和工艺，并能够确保抑制剂能够均匀地分布到整个储层中。由于水合物储层通常位于深水或深地层中，注入过程面临着较高的技术挑战。 经济可行性：注入抑制剂的成本较高，包括抑制剂物质的采购、储存和输送成本，以及注入设备和操作的成本。此外，注入抑制剂也需要额外的时间和资源来实施和管理，这可能增加开采成本并降低经济效益。 环境影响：注入抑制剂可能对环境产生一定的影响。抑制剂的选择和使用需要考虑其对环境的可持续性和生态影响，以及可能的排放和废弃物处理问题。这需要进行详细的环境评估和监测，增加了开采过程的复杂性和成本。 风险与不确定性：注入抑制剂可能存在一定的风险和不确定性。例如，注入过程可能引起地层的压力变化和渗透性的变化，导致地质灾害风险的增加。此外，抑制剂的效果和持续性可能受到地质条件、水合物性质和开采操作等因素的影响，存在一定的不确定性。 综上所述，尽管注入抑制剂是一种用于水合物储层开采的方法，但其技术、经济、环境和风险方面的限制使得其并不是首选方案。在实际应用中，研究人员和工程师们通常会综合考虑各种因素，选择适合特定水合物储层开采的最佳方案和技术组合。 含水合物沉积物孔隙结构特征与微观渗流模拟研究裸眼砾石充填防砂完井 裸眼砾石充填防砂完井 单位 $J &#x3D; kg.m^2&#x2F;s^2$ , $ke &#x3D; \\frac 1 2 {mc^2}$ 热力学性质（chatGPT-3.5） 热力学性质是指物质在不同热力学条件下的物理性质，包括热力学参量、热力学函数和热力学关系等。以下是一些常见的热力学性质： 热力学参量：包括温度、压力、体积、摩尔数等，这些参数可以用来描述物质的状态。 热力学函数：包括内能、焓、自由能、熵等，这些函数描述了物质在热力学过程中的能量转移和熵的变化。 热力学关系：包括热力学基本方程、吉布斯-亥姆霍兹方程、麦克斯韦关系等，这些关系可以用来描述物质在不同热力学条件下的相互关系和变化。 除了上述常见的热力学性质，还有许多其他的性质，例如热容、热传导系数、热膨胀系数、热导率等等，这些性质对于理解和描述物质在热力学过程中的行为和变化都非常重要。 钻井液需要高黏度还是低粘度？（chatGPT-3.5） 钻井液的黏度需求取决于多个因素，包括地质条件、钻头类型、孔隙度、流体性质等等。一般来说，在特定的钻井条件下，钻井液需要具有适当的黏度以实现最佳的钻进效果。 对于一些粘土含量较高的地层，需要使用高黏度的钻井液以防止地层塌陷和漏失等问题。而在一些比较致密的地层，使用低黏度的钻井液可以提高钻进速度并减少钻头磨损，同时也有利于清除岩屑和防止井眼塞积。 此外，不同类型的钻头也需要不同黏度的钻井液来实现最佳的钻进效果。例如，PDC（聚晶金刚石）钻头适用于低黏度的钻井液，而三刃钻头适用于高黏度的钻井液。 因此，需要根据具体的钻井条件选择适当的钻井液黏度，以实现最佳的钻进效果。 Strain rate change in length &#x3D; deltaL &#x3D; r * time engineering strain &#x3D; deltaL&#x2F;L &#x3D; r * time&#x2F;L engineering strain rate &#x3D; strain per time &#x3D; r&#x2F;L true strain &#x3D; ln(1+ engineering strain) &#x3D; ln(1+ r*time&#x2F;L) true (effective) strain rate varies with time &#x3D; d(true strain)&#x2F;dt ​ &#x3D; [ln(1+rtime2&#x2F;L) - ln(1+rtime1&#x2F;L)]&#x2F;(time2-time1) L &#x3D; length of specimen in loaded direction; r &#x3D; rate of loading 涨落耗散理论（chatGPT-3.5） 涨落耗散理论（Fluctuation-dissipation theory，FDT）是一种物理学理论框架，用于处理非平衡态统计物理系统中的现象。在一个非平衡态系统中，系统中的碰撞、耗散和随机激励等因素都会导致各种涨落和噪声行为。涨落耗散理论描述了这些涨落和噪声如何受系统中宏观力的影响。 涨落耗散理论中的“涨落”指的是系统中各个部分由于热或其他原因的随机运动，而“耗散”则是指系统通过与环境的相互作用而损失的能量。理论中的“耦合”则是描述系统中的各个部分如何相互作用，以及在基于测量得到的数据的情况下如何估算这些部分之间的耦合。 涨落耗散理论总结了被内部或外部因素引起的涨落和噪声与系统的响应之间的关系，以及如何从系统的噪声光谱和响应光谱中提取信息。应用于很多物理领域，如凝聚态物理、高能物理、统计物理等。 Green-Kubo公式是描述液体或气体粘性特性的重要公式，其基本思想是将物理量的时间积分转化为相关函数的积分，从而求得粘度或热导率等宏观性质。 涨落耗散理论和Green-Kubo公式之间的联系在于涨落耗散定理：在平衡态系统中，由于涨落与耗散的关系，系统的某一宏观数量（如粘度、热传导率等）可以通过涨落的自相关函数计算得到。因此，Green-Kubo公式可以被视为涨落耗散理论的一种直接应用。 具体地说，Green-Kubo公式将宏观物理量的时间积分表示为一个二阶自相关函数的积分。涨落耗散定理导出了该自相关函数的解析表达式，从而给出了该物理量的具体计算方式。 总之，涨落耗散理论的涨落-耗散定理为Green-Kubo公式提供了理论基础，从而使得Green-Kubo公式成为计算特定宏观性质的重要工具。 ChatGPT-model: gpt-3.5-turbo生成 水合物出砂 水合物开采过程中的出砂是指：水合物由固态分解为气液两相并流入井筒的过程中，在各地质、工程因素综合作用下地层骨架结构破坏，泥砂颗粒由原始地层骨架剥落并被流体携带进入井筒的现象 从世界范围内已进行的水合物试采项目来看，出砂问题严重制约着水合物安全高效开采 从技术的角度，出砂会导致井筒内沉砂、量增加，砂颗粒随流体在管道内运移会引起管道堵塞以及电潜泵等井下设施损坏； 从经济的角度出砂导致的生产故障会延长生产周期，甚至导致停产，对产出的砂液混合物也要进行处理； 从安全的角度出砂会使储层结构破坏、强度降低，增加地质灾害发生的风险。 在降压过程中，当温度曲线下降（水合物分解吸热），认为水合物开始分解；当温度曲线降到最低点并不再降低时，认为水合物分解基本完成。 （a）水合物开采之前，海域水合物储层通常是未固结或弱固结的，储层为砂颗粒骨架-水合物-孔隙水体系，水合物稳定带的上、下边界附近也存在游离气和溶解的甲烷气，水合物以孔隙填充、接触胶结、骨架颗粒支撑等模式赋存于储层中 （b）水合物分解前的降压阶段，孔隙水与游离气流入井筒中，随着上覆有效应力的不断增大，储层发生缓慢的沉降。此时储层处于稳定状态，产气量、产水量以及沉降量较小。孔隙水的流动对骨架砂有一定的剥蚀作用，部分细小的砂颗粒从地层骨架中脱落形成自由砂颗粒，在流体的驱动力作用下进入井筒 （c）当水合物开始大量分解时，水合物对储层的固结与胶结作用消失，储层力学性质下降，稳定性降低。许多骨架砂颗粒变成可移动的自由砂颗粒，储层在上覆有效应力作用下迅速下沉。在这一阶段产气量与产水量都明显增加。流体运移尤其是水的流动为自由砂颗粒的运动提供动力，各种粒径自由砂颗粒随流体进入井筒中 （d）水合物分解后产气速率与产水速率下降，在较大上覆有效应力作用下，储层重新发生固结，沉降速率减慢。然而，储层的固结需要一定的时间，此时储层内仍有大量的可以移动的自由砂颗粒。在较大的有效应力挤压和流体携带的共同作用下，仍有自由砂颗粒往出砂口运移并进入井筒中 Journal of Petroleum Science and Engineering 201 (2021) 108506 arbitrary units “(ab. units)”表示的是 “arbitrary units”，即任意单位。在论文中，有时候为了便于表示数据，可以采用无量纲单位或者自定义的单位，这时就使用 “arbitrary units” 来表示。这种单位通常只是用来表示相对大小而不是具体数值，因此不能用于进行具体的数值计算。 水合物试采示意图 水合物抑制剂graph TD; 抑制剂-->LDHIs(低剂量水合物抑制剂); 抑制剂-->T((热力学抑制剂)); LDHIs-->K((动力学抑制剂)); LDHIs-->AAs(抗凝聚剂); K-->PVP; K-->VC-713; K-->PVcap(聚己内酰胺); K-->AFP(I型抗冻蛋白); PVP(聚乙烯吡咯烷酮PVP)-->PVP-ME PVP-->PVP-EE PVP-->PVP-PE PVP-->PVP-A PVP-->PVP-BN T-->M(甲醇/CH3OH); T-->Nacl; T-->CaCl2; T-->MEG(乙二醇); T-->AminoAcids(氨基酸); M-->增加Hydrate相平衡压力-->YK(也具有动力学作用); M-->降低Hydrate相平衡温度-->YK(也具有动力学作用); YK-->如甲醇中OH基团能够与水合层中水分子形成氢键-->高浓度的甲醇甚至能够把水和层中水全部替换导致水合物-->但是水和层丰富的水是水合物成核的必要条件 低剂量抑制剂 Although LDHI are new and promising chemicals, they have limitations and the efficacy remains unstable. For example, they can only decrease the nucleation and growth rate of hydrate crystals or prevent to some extent the agglomeration of hydrate crystals, but cannot prevent hydrate formation. [6] 参考文献 [1] High efficient development of green kinetic hydrate inhibitors via combined molecular dynamic simulation and experimental test approach [2] Molecular dynamics simulation to explore the synergistic inhibition effect of kinetic and thermodynamic hydrate inhibitors [3] Microscopic insights into synergism effect of different hydrate inhibitors on methane hydrate formation: Experiments and molecular dynamics simulations [4] Experimental and molecular dynamics studies of zwitterionic inhibitors of methane hydrate dissociation [5] Role of chemical cementation and hydration inhibition on wellbore stability in hydrate bearing sediment: Experimental and molecular dynamics simulation studies [6] Machine learning models for fast selection of amino acids as green thermodynamic inhibitors for natural gas hydrate","tags":[{"name":"Paper Notes","slug":"Paper-Notes","permalink":"https://eastsheng.github.io/tags/Paper-Notes/"}],"categories":[{"name":"学习笔记","slug":"学习笔记","permalink":"https://eastsheng.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"},{"name":"论文笔记","slug":"学习笔记/论文笔记","permalink":"https://eastsheng.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E8%AE%BA%E6%96%87%E7%AC%94%E8%AE%B0/"},{"name":"2023","slug":"学习笔记/论文笔记/2023","permalink":"https://eastsheng.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E8%AE%BA%E6%96%87%E7%AC%94%E8%AE%B0/2023/"}]},{"title":"删除过期远程桌面连接记录","date":"2023-03-22T15:11:18.000Z","path":"wiki/2023/03/22/others/2023/del_win_remote_connect_records/","text":"打开注册表编辑器 WIN + R 打开运行 输入regedit打开注册表 打开路径：1计算机\\HKEY_CURRENT_USER\\SOFTWARE\\Microsoft\\Terminal Server Client\\Default 删除多余的MRU","tags":[{"name":"Windows","slug":"Windows","permalink":"https://eastsheng.github.io/tags/Windows/"},{"name":"远程桌面连接","slug":"远程桌面连接","permalink":"https://eastsheng.github.io/tags/%E8%BF%9C%E7%A8%8B%E6%A1%8C%E9%9D%A2%E8%BF%9E%E6%8E%A5/"},{"name":"删除远程桌面连接","slug":"删除远程桌面连接","permalink":"https://eastsheng.github.io/tags/%E5%88%A0%E9%99%A4%E8%BF%9C%E7%A8%8B%E6%A1%8C%E9%9D%A2%E8%BF%9E%E6%8E%A5/"}],"categories":[{"name":"Windows","slug":"Windows","permalink":"https://eastsheng.github.io/categories/Windows/"}]},{"title":"Python奇淫巧计-2","date":"2023-03-16T02:48:28.000Z","path":"wiki/2023/03/16/codes/python/python_skills_2/","text":"[toc] 修改jupyter lab默认浏览器 生成jupyter_lab_config.py 1jupyter lab --generate-config 将下面代码粘贴至：jupyter_lab_config.py 123import webbrowserwebbrowser.register(&#x27;chrome&#x27;, None, webbrowser.GenericBrowser(u&#x27;C:/Program Files/Google/Chrome/Application/chrome.exe&#x27;))c.NotebookApp.browser = &#x27;chrome&#x27; 寻找并拟合峰12345678910111213141516171819202122232425262728293031323334353637383940import numpy as npfrom scipy.signal import find_peaksimport matplotlib.pyplot as pltfrom scipy.optimize import curve_fit# 以下函数不保证正确，只看方法# 定义洛伦兹函数def lorentz_func(x, a, b, c): return a / (1 + ((x-b)/c)**2)x = np.linspace(0, 10, 1000)y = np.sin(x) + 0.5 * np.sin(3*x) + 0.2 * np.sin(5*x)peaks, _ = find_peaks(y)peak_positions = x[peaks]# 对每个峰进行拟合peak_params = []for peak_pos in peak_positions: # 提取拟合区域 x_fit = x[(x &gt; peak_pos - 0.1) &amp; (x &lt; peak_pos + 0.1)] y_fit = y[(x &gt; peak_pos - 0.1) &amp; (x &lt; peak_pos + 0.1)] # print(x_fit,y_fit) # 进行拟合 init_params = [y_fit.max(), peak_pos, 0.01] # 初始拟合参数，可根据实际情况修改 # print(init_params) try: params, _ = curve_fit(lorentz_func, x_fit, y_fit, p0=init_params) peak_params.append(params) except RuntimeError: # 如果拟合失败则跳过 print(&quot;pass&quot;) pass# 提取每个峰的弛豫时间fre = [params[1] for params in peak_params]relax_times = [1/(2*params[2]) for params in peak_params]print(fre,relax_times)plt.plot(x, y)plt.plot(x[peaks], y[peaks], &quot;x&quot;)plt.show() 文件判断判断某个文件夹是否存在123456import osif os.path.exists(&#x27;文件路径&#x27;): print(&#x27;文件夹存在&#x27;)else: print(&#x27;文件夹不存在&#x27;) 判断某个文件是否存在12345678import osfilename = &quot;example.txt&quot;if os.path.isfile(filename): print(&quot;文件存在&quot;)else: print(&quot;文件不存在&quot;) 列表解析式（List comprehension）实现矩阵转置12345678910matrix = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]transpose = [[row[i] for row in matrix] for i in range(len(matrix[0]))]print(matrix)print(transpose)&quot;&quot;&quot;out[[1, 2, 3], [4, 5, 6], [7, 8, 9]][[1, 4, 7], [2, 5, 8], [3, 6, 9]]&quot;&quot;&quot; 同时遍历两个序列123456789names = [&quot;Alice&quot;, &quot;Bob&quot;, &quot;Charlie&quot;]ages = [25, 30, 35]for i, (name, age) in enumerate(zip(names, ages)): print(i, name, age)&quot;&quot;&quot;0 Alice 251 Bob 302 Charlie 35&quot;&quot;&quot; Python 的装饰器（Decorator）实现函数运行时间的计算123456789101112131415161718192021import timedef timing_decorator(func): def wrapper(*args, **kwargs): start_time = time.time() result = func(*args, **kwargs) end_time = time.time() print(f&quot;Function &#123;func.__name__&#125; took &#123;end_time - start_time&#125; seconds to run.&quot;) return result return wrapper@timing_decoratordef my_function(): # some code here for i in range(1100): print(&quot;hello python!&quot;) return if __name__ == &#x27;__main__&#x27;: my_function()","tags":[{"name":"Python","slug":"Python","permalink":"https://eastsheng.github.io/tags/Python/"},{"name":"Tutorials","slug":"Tutorials","permalink":"https://eastsheng.github.io/tags/Tutorials/"}],"categories":[{"name":"程序学习","slug":"程序学习","permalink":"https://eastsheng.github.io/categories/%E7%A8%8B%E5%BA%8F%E5%AD%A6%E4%B9%A0/"},{"name":"Python","slug":"程序学习/Python","permalink":"https://eastsheng.github.io/categories/%E7%A8%8B%E5%BA%8F%E5%AD%A6%E4%B9%A0/Python/"}]},{"title":"GROMACS 基础","date":"2023-01-22T10:11:28.000Z","path":"wiki/2023/01/22/softwares/gromacs/GROMACS_basis_1/","text":"[toc] pdb2gmx12gmx pdb2gmx [-f [&lt;.gro/.g96/...&gt;]] [-o [&lt;.gro/.g96/...&gt;]] [-p [&lt;.top&gt;]]gmx pdb2gmx -f xxx.pdb -o xxx.gro -p xxx.top","tags":[{"name":"GROMACS","slug":"GROMACS","permalink":"https://eastsheng.github.io/tags/GROMACS/"},{"name":"pdb2gmx","slug":"pdb2gmx","permalink":"https://eastsheng.github.io/tags/pdb2gmx/"}],"categories":[{"name":"软件学习","slug":"软件学习","permalink":"https://eastsheng.github.io/categories/%E8%BD%AF%E4%BB%B6%E5%AD%A6%E4%B9%A0/"},{"name":"GROMACS","slug":"软件学习/GROMACS","permalink":"https://eastsheng.github.io/categories/%E8%BD%AF%E4%BB%B6%E5%AD%A6%E4%B9%A0/GROMACS/"}]},{"title":"C&C++笔记-03","date":"2023-01-03T10:11:28.000Z","path":"wiki/2023/01/03/codes/C&C++/C&C++笔记-03/","text":"[toc] 常用内置函数用法最大值、最小值、总和和平均值12345678910111213141516171819202122232425262728293031323334/*有固定数组，编写程序，输入起始下标i和终止下标j，求下标在[i,j)之间的元素的最大值、最小值、总和和平均值。平均值为double。数组元素为&#123;-1,15,-40,-180,99,-122,-124,27,192,128,-165,95,161,-138, -183,51,107,39,-184,113,-63,9,107,188,-11,-13,151,-52,7,6&#125;，元素个数为30个。输入:两个整数，0&lt;=i,j&lt;=30,两个整数用空格隔开。输出：最大、最小、总和、平均，用空格隔开，末尾无空格。区间中元素个数为0时（i&gt;=j），输出全0。*/#include&lt;iostream&gt;#include&lt;algorithm&gt;#include&lt;numeric&gt;using namespace std;int main()&#123; int nums[] &#123;-1,15,-40,-180,99,-122,-124,27,192,128,-165,95,161,-138, -183,51,107,39,-184,113,-63,9,107,188,-11,-13,151,-52,7,6&#125;; cout&lt;&lt;&quot;有固定数组，编写程序，输入起始下标i和终止下标j&quot;&lt;&lt;endl; int a,b; cin&gt;&gt;a&gt;&gt;b; int c = b - a; int sub_num[c]; if(a&gt;=0&amp;&amp;b&lt;=30)&#123; for(int i=a; i&lt;b; i++)&#123; sub_num[i-a] = nums[i]; &#125; &#125;else&#123; cout&lt;&lt;&quot;请输入正确区间！！！&quot;&lt;&lt;endl; &#125; // for(int j=0; j&lt;c; j++)&#123; // cout&lt;&lt;sub_num[j]&lt;&lt;&quot; &quot;; // &#125; // cout&lt;&lt;endl; int max_value = *max_element(sub_num,sub_num+c); int min_value = *min_element(sub_num,sub_num+c); int sum_value = accumulate(sub_num,sub_num+c,0); int ave_value = sum_value/c; cout&lt;&lt;max_value&lt;&lt;&quot; &quot;&lt;&lt;min_value&lt;&lt;&quot; &quot;&lt;&lt;sum_value&lt;&lt;&quot; &quot;&lt;&lt;ave_value&lt;&lt;endl; return 0;&#125; cin用法123456789101112131415/*编写程序，输入可能带空格的字符串，计算并输入其长度（即字符个数，含空格数）。字符串最大长度不超过100。使用字符数组实现，不使用字符串库函数。*/#include&lt;iostream&gt;using namespace std;int main()&#123; char str[100]; int n=0; cout&lt;&lt;&quot;输入可能带空格的字符串，计算并输入其长度（即字符个数，含空格数）&quot;&lt;&lt;endl; cin.get(str,100); while(str[n++])&#123; &#125; cout&lt;&lt;n-1&lt;&lt;endl; return 0;&#125; 大小写 cctype库 123456789101112#include&lt;iostream&gt;#include&lt;cctype&gt;using namespace std;int main(void)&#123; char a; cin&gt;&gt;a; if(islower(a))//如果a是小写字母 a=toupper(a); else//a不是小写字母自然就是大写的了，所以就不用再判断了 a=tolower(a); cout&lt;&lt;a;&#125; 自己写函数 123456789101112131415161718192021222324/*编写函数，将字符串中的所有字母转换为大写。在主函数中定义字符数组，输出字符串，调用函数转大写，在主函数中输出。字符串长度不超过200. 注意，必须用字符数组实现，不能使用字符串处理库函数，也不能使用string类。*/#include&lt;iostream&gt;using namespace std;string AZupper(char *p)&#123; int i=0; while (p[i]&gt;=&#x27;a&#x27; &amp;&amp; p[i]&lt;=&#x27;z&#x27;)&#123; // p[i] = toupper(p[i]); p[i] -= 32; i++; &#125; return p;&#125;int main()&#123; char a[200]; cin.get(a,200); cout&lt;&lt;AZupper(a)&lt;&lt;endl; return 0;&#125; 指针转换为数组123#include &lt;string.h&gt;memcpy(gr_iframe,gr,sizeof(gr_iframe)); //指针转换为数组Strcpy(gr_iframe,gr) //指针转换为字符数组 输出数据类型1cout&lt;&lt;typeid(gr[i]).name()&lt;&lt;endl; find_first_of find_first_of是C++标准库中的一个字符串查找函数，用于在目标字符串中查找第一个匹配给定字符集中任何一个字符的位置。它的函数原型为： 1size_t find_first_of(const charT* s, size_t pos, size_t n) const; 其中： 123s：指向要查找的字符集合的字符数组的指针。pos：从目标字符串的哪个位置开始查找，默认为0。n：字符数组s的长度。 该函数返回目标字符串中第一个匹配字符集合s中任何一个字符的位置。如果找不到任何匹配项，则返回std::string::npos。 以下是一个示例： 123456789101112131415161718#include &lt;iostream&gt;#include &lt;string&gt;int main()&#123; std::string str = &quot;Hello, World!&quot;; std::string chars = &quot;oW&quot;; size_t pos = str.find_first_of(chars); if (pos != std::string::npos) &#123; std::cout &lt;&lt; &quot;Found character &#x27;&quot; &lt;&lt; str[pos] &lt;&lt; &quot;&#x27; at position &quot; &lt;&lt; pos &lt;&lt; std::endl; &#125; else &#123; std::cout &lt;&lt; &quot;No character found.&quot; &lt;&lt; std::endl; &#125; return 0;&#125; 在上面的示例中，我们定义了一个字符串str和一个包含要查找的字符集的字符串chars。我们使用find_first_of函数在str中查找第一个匹配字符集s中任何一个字符的位置，并将结果存储在pos变量中。如果找到了匹配项，则输出匹配的字符和位置；否则输出一条消息表示没有找到匹配项。 自定义函数vector拼接函数并调用 c++怎么将两个二维的vector拼接，定义成一个函数，并可以调用? 要将两个二维的vector拼接并定义成一个函数，您可以编写一个函数来接收两个二维vector作为参数，并将它们拼接到一个新的vector中。以下是一个示例函数的代码： 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768#include &lt;iostream&gt;#include &lt;vector&gt;// 拼接两个二维vectorstd::vector&lt;std::vector&lt;int&gt;&gt; concatenateVectors(const std::vector&lt;std::vector&lt;int&gt;&gt;&amp; v1, const std::vector&lt;std::vector&lt;int&gt;&gt;&amp; v2, bool byRow = true)&#123; std::vector&lt;std::vector&lt;int&gt;&gt; result; if (byRow) &#123; // 拼接行 for (const auto&amp; row : v1) &#123; result.push_back(row); &#125; for (const auto&amp; row : v2) &#123; result.push_back(row); &#125; &#125; else &#123; // 拼接列 for (size_t i = 0; i &lt; v1.size(); ++i) &#123; std::vector&lt;int&gt; row = v1[i]; row.insert(row.end(), v2[i].begin(), v2[i].end()); result.push_back(row); &#125; &#125; return result;&#125;int main()&#123; std::vector&lt;std::vector&lt;int&gt;&gt; v1 &#123;&#123;1, 2&#125;, &#123;3, 4&#125;&#125;; std::vector&lt;std::vector&lt;int&gt;&gt; v2 &#123;&#123;5, 6&#125;, &#123;7, 8&#125;&#125;; // 拼接行 std::vector&lt;std::vector&lt;int&gt;&gt; result1 = concatenateVectors(v1, v2); // 拼接列 std::vector&lt;std::vector&lt;int&gt;&gt; result2 = concatenateVectors(v1, v2, false); // 输出结果 std::cout &lt;&lt; &quot;Concatenate by row:&quot; &lt;&lt; std::endl; for (const auto&amp; row : result1) &#123; for (const auto&amp; elem : row) &#123; std::cout &lt;&lt; elem &lt;&lt; &quot; &quot;; &#125; std::cout &lt;&lt; std::endl; &#125; std::cout &lt;&lt; &quot;Concatenate by column:&quot; &lt;&lt; std::endl; for (const auto&amp; row : result2) &#123; for (const auto&amp; elem : row) &#123; std::cout &lt;&lt; elem &lt;&lt; &quot; &quot;; &#125; std::cout &lt;&lt; std::endl; &#125; return 0;&#125; 在上面的代码中，我们定义了一个名为concatenateVectors的函数，接受两个二维vector作为参数，并返回拼接后的结果。该函数还接受一个可选的布尔参数，用于指定要按行还是列拼接。默认情况下，函数按行拼接。如果传递false作为第三个参数，则按列拼接。 在main函数中，我们创建了两个二维vectorv1和v2，然后使用concatenateVectors函数分别按行和列拼接这两个vector，并将结果存储在result1和result2中。最后，我们输出拼接后的结果。 删除掉二维vector中每个元素的第一个元素123456789101112131415161718192021222324252627282930313233343536373839#include &lt;iostream&gt;#include &lt;vector&gt;using namespace std;void delete_first_element(vector&lt;vector&lt;int&gt;&gt;&amp; vec);int main() &#123; vector&lt;vector&lt;int&gt;&gt; vec&#123;&#123;1, 2, 3&#125;, &#123;4, 5, 6&#125;, &#123;7, 8, 9&#125;&#125;; cout &lt;&lt; &quot;Before: &quot; &lt;&lt; endl; for (auto&amp; inner_vec : vec) &#123; for (auto elem : inner_vec) &#123; cout &lt;&lt; elem &lt;&lt; &quot; &quot;; &#125; cout &lt;&lt; endl; &#125; delete_first_element(vec); cout &lt;&lt; &quot;After: &quot; &lt;&lt; endl; for (auto&amp; inner_vec : vec) &#123; for (auto elem : inner_vec) &#123; cout &lt;&lt; elem &lt;&lt; &quot; &quot;; &#125; cout &lt;&lt; endl; &#125; return 0;&#125;void delete_first_element(vector&lt;vector&lt;int&gt;&gt;&amp; vec) &#123; for (auto&amp; inner_vec : vec) &#123; if (!inner_vec.empty()) &#123; inner_vec.erase(inner_vec.begin()); &#125; &#125;&#125;","tags":[{"name":"C&C++","slug":"C-C","permalink":"https://eastsheng.github.io/tags/C-C/"},{"name":"C&C++初级","slug":"C-C-初级","permalink":"https://eastsheng.github.io/tags/C-C-%E5%88%9D%E7%BA%A7/"}],"categories":[{"name":"程序学习","slug":"程序学习","permalink":"https://eastsheng.github.io/categories/%E7%A8%8B%E5%BA%8F%E5%AD%A6%E4%B9%A0/"},{"name":"C&C++","slug":"程序学习/C-C","permalink":"https://eastsheng.github.io/categories/%E7%A8%8B%E5%BA%8F%E5%AD%A6%E4%B9%A0/C-C/"}]},{"title":"论文笔记2023-春","date":"2022-12-31T16:00:00.000Z","path":"wiki/2023/01/01/notes/PaperReadNote2023_A/","text":"Paper Notes 20232023-1月@2月@3月English phrases (Journal of Molecular Liquids 363 (2022) 119873) These trends are exactly synchronous adj. 同步的；同时的 To investigate this point 为了研究这一点 In this scenario, 在这种情况下 we conjecture that 我们推测 It can explain why continuous hydrate growth is not easily observed in short-term molecular simulations This is similar to findings pertaining to the growth of tetrahydrofuran hydrate adj. 附属的；与……有关的 To some extent,在一定程度上；在某种程度上 To the best of our knowledge 据我们所知 Methane hydrates are prevalent beneath ocean sediments 甲烷水合物普遍存在于海洋沉积物之下 with a broad prospect in the studies of xxx,xxx,xxx.在xxx、xxx、xxx的研究中具有广阔的前景。 This study deepens how solid surfaces affect the numerous hydrate-formation pathways. 这项研究深化了固体表面如何影响众多水合物形成途径。 after which it fell，在那之后， at length 详细地 vitreous body [解剖] 玻璃体 To begin with 首先；本来 Gas hydrates have attracted considerable interest since the discovery that much of the natural gas (methane) on Earth is tied up as crystalline hydrates in deep-sea sediments and in the permafrost clogging equipment 阻塞设备 a potent greenhouse gas 强有力的温室气体 In this respect在这方面 sb postulated that 某人假设that account in（解释） an effective manner for polarization, account for（考虑） repulsion and dispersion interactions. extrapolating（外推） the system to infinite size in the direction of the temperature gradient. was imposed （施加）along the Z axis A procedure similar to that outlined above was followed to calculate the thermal conductivity 采用与上述相似的程序计算热导率 As an additional &#x3D;&#x3D;corroboration&#x3D;&#x3D; （n. 确证，证实；确证的事实） of the theoretical methodology employed in this work, the thermal conductivity of liquid water and of ice Ih were also calculated by the NEMD method and compared with experimental values. at a temperature of 300 K a rectangular parallelepiped（n. 平行六面体）simulation box it was not necessary to Test calculations carried out with a time step of 1 fs gave thermal conductivities nearly identical to（几乎完全相同） those obtained with the 2 fs time step, and the energy was well conserved in all simulations. It should be noted that it is difficult to obtain accurate measurements of the thermal conductivities of defect-free hydrates For all of these hydrates it is seen that the thermal conductivity can be expressed in terms of (依据) the product of（积） the density, specific heat, effective phonon velocity, and effective phonon mean free path. product of the first three of these terms 前三项的积 As mentioned above Most strikingly, identify the source of this discrepancy 确定这种差异的来源 To further exploit the physical insights the state-of-the-art 最先进的研究进展 on the thermodynamics and formation kinetics of methane hydrate is presented. The remainder of this chapter is organized as follows. 本章其余部分的组织如下。 &#x3D;&#x3D;Of particular concern is the fact that&#x3D;&#x3D; gas hydrates are very sensitive to changes of external conditions such as temperature and pressure resulting from natural environmental changes and human activities. This agrees with the fact that, Such a definition of creep strain &#x3D;&#x3D;is analogous to&#x3D;&#x3D; that of the engineering strain. &#x3D;&#x3D;To extract further&#x3D;&#x3D; structural information about GB regions However, for the polycrystals in the relaxed state, the coordination numbers of water particles at GB regions &#x3D;&#x3D;are comparable to&#x3D;&#x3D; those of grain interiors. water cages of methane hydrates &#x3D;&#x3D;are composed of&#x3D;&#x3D; several membered rings. are all roughly equal to zero To elucidate in-depth the mechanical creep mechanisms behind the creep phenomena of polycrystalline methane hydrates, With regard to polycrystalline methane hydrates with large mean grain sizes, When subjected to low static stress Interestingly, the $4^15^{10}6^2$ cages can serve as an intermediate bridge in the structural transformation between structure I and H gas hydrates (J. Chem. Phys., 2015, 143, 011102) stability and lability It has been demonstrated that Memory preservation may differ from sample to sample 记忆保存可能因样本而异 Given the experimental difficulties in attaining subtle details of molecular structures and motions during the decomposition and nucleation of gas hydrates; As demonstrated in Fig. 2b-2e; As illustrated in Fig. 6a, readily enter 很容易进入 outermost layer 最外层 fades away 逐渐消失 methane molecules stemming from the destroyed cages flee from the decomposition solution completely. other parts are still intact 其他部分仍然完好无损 Shortly afterward, 不久之后 based on the timing when hydrate cages had just decomposed 水合物的记忆效应 Generally, the memory effect is a phenomenon that gas hydrate reformation is faster in memory water, which refers to the water produced from the dissociation ofmethane hydrate, than in fresh water without a history of hydrate crystallization (Journal of Molecular Liquids 363 (2022) 119831) 也即，相比于本来就是水和甲烷的体系，甲烷水合物分解后生成的水和气体体系更易于重新生成甲烷水合物，即使只有很少的记忆水也能引发记忆效应； 一般认为，当温度远高于热力学相平衡边界时或者分解后保存的时间过长时，记忆效应才会消失； 水合物的玻璃体性质 一般晶体材料的热导率和温度是$T^{-1}$关系，而水合物一般随着温度升高，热导率小幅度升高，这与非晶态的类玻璃体相似。（J. Phys. Chem. B, Vol. 112, No. 33, 2008） 四体角序参数（four-body angular OP ） Hydrate : F4 &#x3D; 0.7 Solid ice : F4 &#x3D; -0.4 Liquid water: F4 &#x3D; -0.04 水合物数字岩心建模 水合物二次生成 水合物分解吸热和Joule-Thomson 效应（在气体通过节流阀的过程中，会产生压力突变，继而引起温度发生改变。这种现象被称为焦耳-汤姆逊效应） 由于水合物表面存在着大量的完全或半完全形成的笼型结构，因此有着较小的成核驱动力，导致水合物二次生成会自发避开先前不存在水合物的区域 屈服强度 屈服强度是金属材料发生屈服现象时的屈服极限，也就是抵抗微量塑性变形的应力。 于屈服强度的外力作用，将会使零件永久失效，无法恢复。 什么是屈服和屈服强度? 相关软件 inspeXio：图形处理软件 Avizo 2019.1 文基于Avizo 软件，通过generate surface 命令将上文所构建的水合物饱和度38.5%的胶结型水合物沉积物数字岩心中水合物胶结物二值化图像堆栈、砂颗粒和孔吼空间合并后的二值化图像堆栈构建为STL（Stereo Lithography）网格模型后，然后通过smoothsurfacre 命令对其表面进行平滑，得到了质量较好的STL 网格模型 OpenPIV 离散元数值模拟软件PFC3D 5.0 水合物稳定性 天然矿藏中，水合物的结构稳定压力通常是由周围的自由气层或孔隙水来维持。 具体工程应用上，热激法的实施方式主要有两种：（1）在预热井中直接注入热水或蒸汽，（2）井下电磁加热。 化学试剂（水合物抑制剂），如甲醇、盐水、乙醇、乙二醇、丙三醇等，可以改变水合物的相平衡条件，使水合物的稳定温度降低 相比于降压和热激法，抑制剂注入法起效较慢，但有着更低的前期能量投入。 二氧化碳水合物生成放热量高于甲烷水合物分解吸热量，保证了用二氧化碳分子置换甲烷水合物笼子中的甲烷分子的可行性，二氧化碳置换法可以同时实现开采甲烷气体、封存温室气体二氧化碳的目的，同时生成的二氧化碳水合物对于维持水合物沉积层的力学稳定性有着积极作用，防止由于水合物的相变导致地层失稳。 四氢呋喃tetrahydrofuran,ＴＨＦ,是一个杂环有机化合物，化学式为$C_4H_8O$，属于醚类，是呋喃的完全氢化产物，为无色透明液体，溶于水、乙醇、乙醚、丙酮、苯等，主要用作溶剂、化学合成中间体、分析试剂。 四氢呋喃在2B类致癌物清单中 绝大部分天然水合物赋存在细沙或泥沙中，孔隙尺寸在十几纳米到几百纳米 小颗粒基质中的水合物生长则呈现了水合物团簇包裹并胶结固体基质的现象，并存在锋利的水合物－液界面 水合物的降压分解率先启动于水合物-气接触面，而在水合物-砂颗粒接触面处分解较慢。这主要是由于水合物与砂颗粒之间间隙较小，且砂颗粒自身较为密实，通过该方式实现传质难度较大，因此水合物降压分解选择了一个传质阻力较低的路径，即水合物-气接触面 由于水中的气体分子溶解度较低，因此这会增加水合物分解的传质阻力，降低水合物分解速率","tags":[{"name":"Paper Notes","slug":"Paper-Notes","permalink":"https://eastsheng.github.io/tags/Paper-Notes/"}],"categories":[{"name":"学习笔记","slug":"学习笔记","permalink":"https://eastsheng.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"},{"name":"论文笔记","slug":"学习笔记/论文笔记","permalink":"https://eastsheng.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E8%AE%BA%E6%96%87%E7%AC%94%E8%AE%B0/"},{"name":"2023","slug":"学习笔记/论文笔记/2023","permalink":"https://eastsheng.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E8%AE%BA%E6%96%87%E7%AC%94%E8%AE%B0/2023/"}]},{"title":"解决本地可以用但是Hexo不能用的gitee图床","date":"2022-10-31T08:11:18.000Z","path":"wiki/2022/10/31/others/2022/hexo_gitee_pictures/","text":"例如，kaze主题 修改head.ejs文件，路径： 1./themes/kaze/layout/_partial/head.ejs 添加meta信息： 1&lt;meta name=&quot;referrer&quot; content=&quot;no-referrer&quot; /&gt;","tags":[{"name":"Hexo","slug":"Hexo","permalink":"https://eastsheng.github.io/tags/Hexo/"},{"name":"gitee图床","slug":"gitee图床","permalink":"https://eastsheng.github.io/tags/gitee%E5%9B%BE%E5%BA%8A/"}],"categories":[{"name":"Windows","slug":"Windows","permalink":"https://eastsheng.github.io/categories/Windows/"}]},{"title":"WORD中MathType一些问题","date":"2022-10-30T11:42:18.000Z","path":"wiki/2022/10/30/others/2022/MathType_number_gray/","text":"WORD中MathType不显示 https://jingyan.baidu.com/article/eb9f7b6d69d084869264e876.html WORD中MathType（1）插入序号是灰色的 激活MathType 打开MathType，点击帮助，解锁注册MathType。输入密匙 1234FirstName: llionLastname: mecssiOrganization: llionmecssiKey: MTWE691-011084-r0xyl 但是只能临时解决，一段时间后，又会回到原来的样子。","tags":[{"name":"Windows","slug":"Windows","permalink":"https://eastsheng.github.io/tags/Windows/"},{"name":"MathType","slug":"MathType","permalink":"https://eastsheng.github.io/tags/MathType/"}],"categories":[{"name":"Windows","slug":"Windows","permalink":"https://eastsheng.github.io/categories/Windows/"}]},{"title":"机器学习基础-1","date":"2022-09-22T04:18:28.000Z","path":"wiki/2022/09/22/notes/MachineLearning/MLPython-1/","text":"[toc] Machine Learning with Python机器学习前期基础监督&#x2F;无监督学习算法 从输入&#x2F; 输出对中进行学习的机器学习算法叫作监督学习算法（supervised learning algorithm）； 无监督学习算法（unsupervised learning algorithm）：在无监督学习中，只有输入数据是已知的，没有为算法提供输出数据。虽然这种算法有许多成功的应用，但理解和评估这些算法往往更加困难。 无论是监督学习任务还是无监督学习任务，将输入数据表征为计算机可以理解的形式都是十分重要的。 每当想要根据给定输入预测某个结果，并且还有输入&#x2F; 输出对的示例时，都应该使用监督学习。 数据 将数据想象成表格：每一行被称为一个样本（sample）或数据点；而每一列（用来描述这些实体的属性）则被称为特征（feature）。 工具 scikit-learn scikit-learn user_guide numpy; scipy; matplotlib; pandas Jupyter Notebook 机器学习步骤构建一个机器学习模型 一部分数据用于构建机器学习模型，叫作训练数据（training data）或训练集（training set） 其余的数据用来评估模型性能，叫作测试数据（test data）、测试集（test set）或留出集（hold-out set） 一般将75%的行数据及对应标签作为训练集，剩下25%的数据及其标签作为测试集。scikit-learn 中的train_test_split 函数 1234567from sklearn.datasets import load_irisiris_dataset = load_iris()# 训练集、测试集划分函数from sklearn.model_selection import train_test_split# train_test_split 函数利用伪随机数生成器将数据集打乱，确保测试集中包含所有类别的数据。X_train, X_test, y_train, y_test = train_test_split( iris_dataset[&quot;data&quot;],iris_dataset[&quot;target&quot;],random_state=0) 观测数据算法 分类算法：如，k近邻算法123# 引入K近邻分类器，并实例化，给出近邻数目from sklearn.neighbors import KNeighborsClassifierknn = KNeighborsClassifier(n_neighbors = 1) 训练1knn.fit(X_train,y_train) 预测@评估123456789101112y_pred = knn.predict(X_test)print(&quot;测试集预测：\\n&#123;&#125;&quot;.format(y_pred))print(&quot;测试集精度：\\n&#123;&#125;&quot;.format(np.mean(y_pred == y_test)))# 预测某一朵花的数据# sepal length (cm)&#x27;, &#x27;sepal width (cm)&#x27;, &#x27;petal length (cm)&#x27;, &#x27;petal width (cm)&#x27;X_new = np.array([5.6,2.9,1,0.5]).reshape(1,-1)y_pred_new = knn.predict(X_new)print(&quot;预测：&#123;&#125;&quot;.format(y_pred_new))print(&quot;预测花种类：&#123;&#125;&quot;.format(iris_dataset[&quot;target_names&quot;][y_pred_new])) 监督学习 监督机器学习问题主要有两种，分别叫作分类（classification）与回归（regression）。 如果在可能的结果之间具有连续性，那么它就是一个回归问题 graph LR A[监督学习]==>B(分类) A==>C(回归) B==>D(二分类/多分类:目标是预测类别标签) D==>E1(正类) D==>E2(反类) C==>F(回归任务的目标是预测一个连续值) style A fill:#ffff 过拟合&#x2F;欠拟合 如果你在拟合模型时过分关注训练集的细节，得到了一个在训练集上表现很好、但不能泛化到新数据上的模型，那么就存在过拟合（overfitting）。 选择过于简单的模型被称为欠拟合（underfitting）。 我们的模型越复杂，在训练数据上的预测结果就越好。但是，如果我们的模型过于复杂，我们开始过多关注训练集中每个单独的数据点，模型就不能很好地泛化到新数据上。 正则化方法：在训练数据不够多时，或者overtraining时，常常会导致过拟合（overfitting）。正则化方法即为在此时向原始模型引入额外信息，以便防止过拟合和提高模型泛化性能的一类方法的统称。在实际的深度学习场景中我们几乎总是会发现，最好的拟合模型（从最小化泛化误差的意义上）是一个适当正则化的大型模型。 监督学习算法KNN：KNeighbors&gt; KNeighbors 分类器有2 个重要参数：邻居个数与数据点之间距离的度量方法; &gt; 虽然k 近邻算法很容易理解，但由于预测速度慢且不能处理具有很多特征的数据集，所以 在实践中往往不会用到 以n_neighbors 为自变量，对比训练集精度和测试集精度12345678910111213141516171819202122232425from sklearn.datasets import load_breast_cancerfrom sklearn.model_selection import train_test_splitfrom sklearn.neighbors import KNeighborsClassifierimport matplotlib.pyplot as pltcancer = load_breast_cancer()X_train, X_test, y_train, y_test = train_test_split(cancer.data, cancer.target, stratify=cancer.target, random_state=66)training_accuracy = []test_accuracy = []# n_neighbors取值从1到10neighbors_settings = range(1, 11)for n_neighbors in neighbors_settings: # 构建模型 clf = KNeighborsClassifier(n_neighbors=n_neighbors) clf.fit(X_train, y_train) # 记录训练集精度 training_accuracy.append(clf.score(X_train, y_train)) # 记录泛化精度 test_accuracy.append(clf.score(X_test, y_test))plt.plot(neighbors_settings, training_accuracy, label=&quot;training accuracy&quot;)plt.plot(neighbors_settings, test_accuracy, label=&quot;test accuracy&quot;)plt.ylabel(&quot;Accuracy&quot;)plt.xlabel(&quot;n_neighbors&quot;)plt.legend() plt.show() 线性模型 线性模型利用输入特征的线性函数（linear function）进行预测 用于回归的线性模型:&gt; ![](https://gitee.com/eastsheng/VnoteFigures/raw/master/worknotes/notes/coding/python/machinelearning/mlpython-1.md/331633410220872.png) &gt; 用于回归的线性模型可以表示为这样的回归模型：对单一特征的预测结果是一条直线，两 个特征时是一个平面，或者在更高维度（即更多特征）时是一个超平面。 &gt; 有许多不同的线性回归模型。这些模型之间的区别在于如何从训练数据中学习参数w 和b，以及如何控制模型复杂度 线性回归(普通最小二乘法)&gt; 线性回归，或者普通最小二乘法（ordinary least squares，OLS），是回归问题最简单也最经 典的线性方法。 &gt; 线性回归没有参数，这是一个优点，但也因此无法控制模型的复杂度。 &gt; 均方误差（mean squared error）是预测值与真实值之差的平方和除以样本数 &gt; 线性回归寻找参数w 和b，使得对训练集的预测值与真实的回归目标值y之间的均方误差最小 &gt; 训练集和测试集之间的性能差异是过拟合的明显标志 线性回归使用例子： 1234567891011121314151617from sklearn.model_selection import train_test_splitfrom sklearn.linear_model import LinearRegressionimport matplotlib.pyplot as pltimport mglearnX, y = mglearn.datasets.make_wave(n_samples=60)X_train, X_test, y_train, y_test = train_test_split(X, y, random_state=42)lr = LinearRegression().fit(X_train, y_train)&quot;&quot;&quot;scikit-learn总是将从训练数据中得出的值保存在以下划线结尾的属性中。这是为了将其与用户设置的参数区分开。&quot;&quot;&quot;print(&quot;lr.coef_: &#123;&#125;&quot;.format(lr.coef_)) # 斜率print(&quot;lr.intercept_: &#123;&#125;&quot;.format(lr.intercept_)) # 截距print(&quot;Training set score: &#123;:.2f&#125;&quot;.format(lr.score(X_train, y_train)))print(&quot;Test set score: &#123;:.2f&#125;&quot;.format(lr.score(X_test, y_test))) 岭回归(ridge regression) 岭回归也是一种用于回归的线性模型，因此它的预测公式与普通最小二乘法相同 但在岭回归中，对系数（w）的选择不仅要在训练数据上得到好的预测结果，而且还要拟合附加约束。我们还希望系数尽量小。换句话说，w 的所有元素都应接近于0。这种约束是所谓正则化（regularization）的一个例子岭回归用到的这种被称为L2 正则化Ridge 是一种约束更强的模型，所以更不容易过拟合。 岭回归使用例子： 123from sklearn.linear_model import Ridgeridge = Ridge(alpha=1.0).fit(X_train, y_train)print(&quot;Training set score: &#123;:.2f&#125;&quot;.format(ridge.score(X_train, y_trai Ridge 模型在模型的简单性（系数都接近于0）与训练集性能之间做出权衡。简单性和训练集性能二者对于模型的重要程度可以由用户通过设置alpha 参数来指定默认alpha&#x3D;1.0增大alpha 会使得系数更加趋向于0，从而降低训练集性能，但可能会提高泛化性能。 如果数据点少，线性回归可能学不到任何内容。随着模型可用的数据越来越多，两个模型的性能都在提升，最终线性回归的性能追上了岭回归 如果有足够多的训练数据，正则化变得不那么重要，并且岭回归和线性回归将具有相同的性能. lasso 除了Ridge，还有一种正则化的线性回归是Lasso。与岭回归相同，使用lasso 也是约束系数使其接近于0，但用到的方法不同，叫作L1 正则化。 L1 正则化的结果是，使用lasso 时某些系数刚好为0。这说明某些特征被模型完全忽略。 Lasso使用例子： 12345from sklearn.linear_model import Lassolasso = Lasso().fit(X_train, y_train)print(&quot;Training set score: &#123;:.2f&#125;&quot;.format(lasso.score(X_train, y_train)))print(&quot;Test set score: &#123;:.2f&#125;&quot;.format(lasso.score(X_test, y_test)))print(&quot;Number of features used: &#123;&#125;&quot;.format(np.sum(lasso.coef_ != 0))) 在两个模型中一般首选岭回归。但如果特征很多，你认为只有其中几个是重要的，那么选择Lasso 可能更好。 如果你想要一个容易解释的模型，Lasso 可以给出更容易理解的模型，因为它只选择了一部分输入特征 用于分类的线性模型 对于用于回归的线性模型，输出ŷ 是特征的线性函数，是直线、平面或超平面（对于更高维的数据集）。对于用于分类的线性模型，决策边界是输入的线性函数。换句话说，（二元）线性分类器是利用直线、平面或超平面来分开两个类别的分类器。 学习线性模型有很多种算法。这些算法的区别在于以下两点： 系数和截距的特定组合对训练数据拟合好坏的度量方法；是否使用正则化，以及使用哪种正则化方法。 最常见的两种线性分类算法: Logistic 回归（logistic regression）:linear_model.LogisticRegression 中实现，虽然LogisticRegression的名字中含有回归（regression）， 但它是一种分类算法， 并不是回归算法， 不应与LinearRegression 混淆。线性支持向量机（linear support vector machine， 线性SVM） 用于多分类的线性模型 许多线性分类模型只适用于二分类问题，不能轻易推广到多类别问题（除了Logistic 回归）。将二分类算法推广到多分类算法的一种常见方法是“一对其余”（one-vs.-rest）方法。 优点、缺点和参数 线性模型的主要参数是正则化参数： 回归模型中叫作alphaalpha，在LinearSVC 和Logistic-Regression 中叫作C。alpha 值较大或C 值较小，说明模型比较简单通常在对数尺度上对C 和alpha 进行搜索 正则化选择： 如果你假定只有几个特征是真正重要的，那么你应该用L1 正则化，否则应默认使用L2 正则化 优点和缺点： 线性模型的训练速度非常快，预测速度也很快这种模型可以推广到非常大的数据集，对稀疏数据也很有效。如果你的数据包含数十万甚至上百万个样本，你可能需要研究如何使用LogisticRegression 和Ridge 模型的solver&#x3D;’sag’ 选项，在处理大型数据时，这一选项比默认值要更快。线性模型的另一个优点在于，利用我们之间见过的用于回归和分类的公式，理解如何进行预测是相对比较容易的。不幸的是，往往并不完全清楚系数为什么是这样的。如果特征数量大于样本数量，线性模型的表现通常都很好 朴素贝叶斯分类器 sklearn中一共三种朴素贝叶斯分类器：GaussianNB、BernoulliNB 和MultinomialNB GaussianNB 可应用于任意连续数据， 而BernoulliNB 假定输入数据为二分类数据，MultinomialNB 假定输入数据为计数数据（即每个特征代表某个对象的整数计数，比如一个单词在句子里出现的次数）。BernoulliNB 和MultinomialNB 主要用于文本数据分类。 优缺点 训练速度快；但是泛化能力差点儿 决策树 决策树是广泛用于分类和回归任务的模型，本质上，它从一层层的if&#x2F;else 问题中进行学习，并得出结论。 使用乳腺癌数据集进行决策树学习12345678910from sklearn.tree import DecisionTreeClassifierfrom sklearn.datasets import load_breast_cancerfrom sklearn.model_selection import train_test_splitcancer = load_breast_cancer()X_train, X_test, y_train, y_test = train_test_split(cancer.data, cancer.target, stratify=cancer.target, random_state=40)tree = DecisionTreeClassifier(random_state=0)tree.fit(X_train, y_train)print(&quot;Accuracy on training set: &#123;:.3f&#125;&quot;.format(tree.score(X_train, y_train)))print(&quot;Accuracy on test set: &#123;:.3f&#125;&quot;.format(tree.score(X_test, y_test))) 未剪枝的树容易过拟合，对新数据的泛化性能不佳。 123456789101112from sklearn.tree import DecisionTreeClassifierfrom sklearn.datasets import load_breast_cancerfrom sklearn.model_selection import train_test_splitcancer = load_breast_cancer()X_train, X_test, y_train, y_test = train_test_split(cancer.data, cancer.target, stratify=cancer.target, random_state=40)# tree = DecisionTreeClassifier(random_state=0)# tree.fit(X_train, y_train)tree = DecisionTreeClassifier(max_depth=4,random_state=0)tree.fit(X_train, y_train)print(&quot;Accuracy on training set: &#123;:.3f&#125;&quot;.format(tree.score(X_train, y_train)))print(&quot;Accuracy on test set: &#123;:.3f&#125;&quot;.format(tree.score(X_test, y_test))) 设置max_depth&#x3D;4，这意味着只可以连续问4 个问题;限制树的深度可以减少过拟合;会降低训练集的精度，但可以提高测试集的精度;防止过拟合有两种常见的策略：一种是及早停止树的生长，也叫预剪枝（pre-pruning）；另一种是先构造树，但随后删除或折叠信息量很少的结点，也叫后剪枝（post-pruning）或剪枝（pruning）。预剪枝的限制条件可能包括限制树的最大深度、限制叶结点的最大数目，或者规定一个结点中数据点的最小数目来防止继续划分。 scikit-learn 的决策树在DecisionTreeRegressor 类和DecisionTreeClassifier 类中实现。scikit-learn 只实现了预剪枝，没有实现后剪枝。 生成决策树png12345678910111213141516171819from sklearn.tree import DecisionTreeClassifierfrom sklearn.datasets import load_breast_cancerfrom sklearn.model_selection import train_test_splitfrom sklearn.tree import export_graphviz# import graphvizcancer = load_breast_cancer()X_train, X_test, y_train, y_test = train_test_split(cancer.data, cancer.target, stratify=cancer.target, random_state=42)# tree = DecisionTreeClassifier(random_state=0)# tree.fit(X_train, y_train)tree = DecisionTreeClassifier(max_depth=4,random_state=0)tree.fit(X_train, y_train)print(&quot;Accuracy on training set: &#123;:.3f&#125;&quot;.format(tree.score(X_train, y_train)))print(&quot;Accuracy on test set: &#123;:.3f&#125;&quot;.format(tree.score(X_test, y_test)))export_graphviz(tree, out_file=&quot;tree.dot&quot;, class_names=[&quot;malignant&quot;,&quot;benign&quot;],feature_names=cancer.feature_names, impurity=False, filled=True)# with open(&quot;tree.dot&quot;) as f:# dot_graph = f.read()# graphviz.Source(dot_graph) 安装graphviz 转换dot to png 1dot -Tpng tree.dot -o tree.png ~p53 决策树集成 决策树的主要缺点在于，即使做了预剪枝，它也经常会过拟合，泛化性能很差。因此，在大多数应用中，往往使用集成方法来替代单棵决策树。集成（ensemble）是合并多个机器学习模型来构建更强大模型的方法有两种常用集成模型：分别是随机森林（random forest）和梯度提升决策树（gradient boosted decision tree）。 12345from sklearn.ensemble import RandomForestClassifierforest = RandomForestClassifier(n_estimators=100, random_state=0) # n_estimators为随机森林树的数目from sklearn.ensemble import GradientBoostingClassifiergbrt = GradientBoostingClassifier(random_state=0, max_depth=1) # 可以通过max_depth学习深度调控过拟合gbrt = GradientBoostingClassifier(random_state=0, learning_rate=0.01) # learning_rate学习率，为纠正上一棵树的错误的强度 梯度提升决策树是监督学习中最强大也最常用的模型之一，主要缺点是需要仔细调参，而且训练时间可能会比较长 梯度提升树模型的主要参数包括树的数量n_estimators 和学习率learning_rate，后者用于控制每棵树对前一棵树的错误的纠正强度。这两个参数高度相关，因为learning_rate 越低，就需要更多的树来构建具有相似复杂度的模型 随机森林的n_estimators 值总是越大越好，但梯度提升不同，增大n_estimators 会导致模型更加复杂，进而可能导致过拟合。通常的做法是根据时间和内存的预算选择合适的n_estimators，然后对不同的learning_rate 进行遍历。 另一个重要参数是max_depth（或max_leaf_nodes），用于降低每棵树的复杂度。梯度提升模型的max_depth 通常都设置得很小，一般不超过5。 核支持向量机（kernelized support vector machine） 这里需要记住的是，向数据表示中添加非线性特征，可以让线性模型变得更强大 核技巧（kernel trick），它的原理是直接计算扩展特征表示中数据点之间的距离（更准确地说是内积），而不用实际对扩展进行计算。 一种是多项式核，在一定阶数内计算原始特征所有可能的多项式（比如feature1 ** 2 * feature2 ** 5）；另一种是径向基函数（radial basis function，RBF）核，也叫高斯核。高斯核有点难以解释，因为它对应无限维的特征空间。一种对高斯核的解释是它考虑所有阶数的所有可能的多项式，但阶数越高，特征的重要性越小。 神经网络（深度学习） 虽然深度学习在许多机器学习应用中都有巨大的潜力，但深度学习算法往往经过精确调整，只适用于特定的使用场景。 多层感知机（multilayer perceptron，MLP），它可以作为研究更复杂的深度学习方法的起点。MLP 也被称为（普通）前馈神经网络，有时也简称为神经网络。MLP 可以被视为广义的线性模型，执行多层处理后得到结论。$ŷ &#x3D; w[0] * x[0] + w[1] * x[1] + … + w[p] * x[p] + b$图中，左边的每个结点代表一个输入特征，连线代表学到的系数，右边的结点代表输出，是输入的加权求和。在MLP 中，多次重复这个计算加权求和的过程，首先计算代表中间过程的隐单元（hiddenunit），然后再计算这些隐单元的加权求和并得到最终结果这个模型需要学习更多的系数（也叫作权重）：在每个输入与每个隐单元（隐单元组成了隐层）之间有一个系数，在每个隐单元与输出之间也有一个系数。校正非线性（rectifying nonlinearity，也叫校正线性单元或relu）或正切双曲线（tangens hyperbolicus，tanh）有了这两种非线性函数，神经网络可以学习比线性模型复杂得多的函数。 这些由许多计算层组成的大型神经网络，正是术语“深度学习”的灵感来源。 包含100 个隐单元的神经网络在two_moons 数据集上学到的决策边界 1234567891011121314from sklearn.neural_network import MLPClassifierfrom sklearn.datasets import make_moonsimport matplotlib.pyplot as pltimport mglearnfrom sklearn.model_selection import train_test_splitX, y = make_moons(n_samples=100, noise=0.25, random_state=3)X_train, X_test, y_train, y_test = train_test_split(X, y, stratify=y,random_state=42)mlp = MLPClassifier(solver=&#x27;lbfgs&#x27;, hidden_layer_sizes=[100],random_state=0).fit(X_train, y_train)mglearn.plots.plot_2d_separator(mlp, X_train, fill=True, alpha=.3)mglearn.discrete_scatter(X_train[:, 0], X_train[:, 1], y_train)plt.xlabel(&quot;Feature 0&quot;)plt.ylabel(&quot;Feature 1&quot;)plt.show() 控制神经网络复杂度的方法有很多种：隐层的个数、每个隐层中的单元个数与正则化（alpha）等。 总结 最近邻 适用于小型数据集，是很好的基准模型，很容易解释。 线性模型 非常可靠的首选算法，适用于非常大的数据集，也适用于高维数据。 朴素贝叶斯 只适用于分类问题。比线性模型速度还快，适用于非常大的数据集和高维数据。精度通常要低于线性模型。 决策树 速度很快，不需要数据缩放，可以可视化，很容易解释。 随机森林 几乎总是比单棵决策树的表现要好，鲁棒性很好，非常强大。不需要数据缩放。不适用于高维稀疏数据。 梯度提升决策树 精度通常比随机森林略高。与随机森林相比，训练速度更慢，但预测速度更快，需要的内存也更少。比随机森林需要更多的参数调节。 支持向量机 对于特征含义相似的中等大小的数据集很强大。需要数据缩放，对参数敏感。 神经网络 可以构建非常复杂的模型，特别是对于大型数据集而言。对数据缩放敏感，对参数选取敏感。大型网络需要很长的训练时间。 面对新数据集，通常最好先从简单模型开始，比如线性模型、朴素贝叶斯或最近邻分类器，看能得到什么样的结果。对数据有了进一步了解之后，你可以考虑用于构建更复杂模型的算法，比如随机森林、梯度提升决策树、SVM 或神经网络。 无监督学习 无监督学习的一个主要挑战就是评估算法是否学到了有用的东西 无监督算法的另一个常见应用是作为监督算法的预处理步骤 无监督学习类型 无监督变换（降维）聚类算法","tags":[{"name":"机器学习","slug":"机器学习","permalink":"https://eastsheng.github.io/tags/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"}],"categories":[{"name":"学习笔记","slug":"学习笔记","permalink":"https://eastsheng.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"},{"name":"机器学习","slug":"学习笔记/机器学习","permalink":"https://eastsheng.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"}]},{"title":"VASP安装与编译","date":"2022-09-18T10:11:28.000Z","path":"wiki/2022/09/18/softwares/vasp/VASP安装与编译/","text":"[toc] VASP安装一、安装 Intel® oneAPI Base Toolkit 和 Intel® oneAPI HPC来替代 在安装之前需要安装一系列依赖包: 12sudo apt-get install libgtk-3-0 libxss1 libnss3 libgtk2.0 libpango-1.0-0 libasound2 sudo apt-get install xorg openbox intel® oneAPI Base Toolkit 安装: 12wget https://registrationcenter-download.intel.com/akdlm/irc_nas/18673/l_BaseKit_p_2022.2.0.262_offline.shsudo sh ./l_BaseKit_p_2022.2.0.262_offline.sh Intel® oneAPI HPC 安装 12wget https://registrationcenter-download.intel.com/akdlm/irc_nas/18679/l_HPCKit_p_2022.2.0.191_offline.shsudo sh ./l_HPCKit_p_2022.2.0.191_offline.sh 添加环境变量并查看是否安装好： 最好把source /opt/intel/oneapi/setvars.sh intel64写进~&#x2F;.bashrc中 12345source /opt/intel/oneapi/setvars.sh intel64icc -vifort -vmpiicc -vmpiifort -v 二、编译vasp 5.4.412345678tar -zxvf vasp.5.4.4.tar.gzcd vasp.5.4.4cp -r /opt/intel/oneapi/mkl/2022.1.0/interfaces/fftw3xf . # cp MKL中的fftw库到vasp文件夹中cd fftw3xf/make libintel64cd ..cp arch/makefile.include.linux_intel makefile.include # 修改makefile.include，在OFLAG后添加-xAVX，如：OFLAG = -xAVX -O2make all 添加环境变量 VASP安装参考 Intel®安装教程 三、水分子的一个运行例子 H2O VASP官网例子 POSCAR 1234567891011H2O _20.52918 ! scaling parameter 15 0 0 0 15 0 0 0 151 2selectcart 0.00 0.00 0.00 F F F 1.10 -1.43 0.00 T T F 1.10 1.43 0.00 T T F INCAR 1234567PREC = Normal ! standard precision ENMAX = 400 ! cutoff should be set manuallyISMEAR = 0 ; SIGMA = 0.1IBRION = 1 ! use DIIS algorithm to convergeNFREE = 2 ! 2 independent degrees of freedomNSW = 10 ! 10 ionic stepsEDIFFG = -0.02 ! forces smaller 0.02 A/eV KPOINTS 12345Gamma-point only 0Monkhorst Pack 1 1 1 0 0 0 POTCAR 官网自带的有，也可以从赝势库中自己手动生成： 1cat ~/softwares/VASP/PAW_PBE/O/POTCAR ~/softwares/VASP/PAW_PBE/H/POTCAR &gt;POTCAR 运行命令：mpirun -np 16 vasp_std 四、参考、可视化以及后处理程序： DFT计算入门新手必备，VASP赝势库、态密度、能带、键长、声子谱及软件安装 VASPTEST The_VASP_Manual VASP官网 p4vasp VESTA","tags":[{"name":"VASP","slug":"VASP","permalink":"https://eastsheng.github.io/tags/VASP/"},{"name":"VASP安装与编译","slug":"VASP安装与编译","permalink":"https://eastsheng.github.io/tags/VASP%E5%AE%89%E8%A3%85%E4%B8%8E%E7%BC%96%E8%AF%91/"}],"categories":[{"name":"软件学习","slug":"软件学习","permalink":"https://eastsheng.github.io/categories/%E8%BD%AF%E4%BB%B6%E5%AD%A6%E4%B9%A0/"},{"name":"VASP","slug":"软件学习/VASP","permalink":"https://eastsheng.github.io/categories/%E8%BD%AF%E4%BB%B6%E5%AD%A6%E4%B9%A0/VASP/"}]},{"title":"Comsol 笔记-01","date":"2022-09-02T10:11:28.000Z","path":"wiki/2022/09/02/softwares/comsol/Comsol基本/","text":"[toc] Comsol基本 模型下载 视频教程 用户模拟 导入COMSOL网格 .mphbin,.mphtxt网格格式 基于MRI和扫描数据的网格上创建COMSOL Multiphysics 下列软件支持导入COMSOL网格 Materialise的Mimics Simpleware FE模块 传热","tags":[{"name":"Comsol","slug":"Comsol","permalink":"https://eastsheng.github.io/tags/Comsol/"}],"categories":[{"name":"软件学习","slug":"软件学习","permalink":"https://eastsheng.github.io/categories/%E8%BD%AF%E4%BB%B6%E5%AD%A6%E4%B9%A0/"},{"name":"Comsol","slug":"软件学习/Comsol","permalink":"https://eastsheng.github.io/categories/%E8%BD%AF%E4%BB%B6%E5%AD%A6%E4%B9%A0/Comsol/"}]},{"title":"Fortran-04","date":"2022-07-24T10:11:28.000Z","path":"wiki/2022/07/24/codes/fortran/fortran_04/","text":"[toc] 数据类型 F90程序中的数据都有三个特征：类型、种别、属性. 一般形式：类型说明[(种别说明)][,属性说明] :: 变量名[=初值] 例：REAL(KIND=2), DIMENSION(1:10):: X,Y 种别说明与属性说明可以省略，类型说明:: 变量名 类型说明&gt; 三种数值型：整数型(`INTEGER`)、实数型(`REAL`)、复数型(`COMPLEX`) &gt; 两种非数值型：逻辑型、字符型 在F90中，每个变量名都应该在说明部分中说明其类型，不应该使用隐式说明，应该在程序说明部分开始就写出语句：IMIPLlCIT NONE，既声明不使用隐式说明。 种别说明 种别值确定了数据的大小范围和精度。有了种别说明后，程序更易于移植。（因为在不同的计算机系统上，同一种变量类型可以有不同的精度，因此当程序在另一种机子上运行时可能出现溢出或下溢。规定种别后可以避免这种情况的出现。） 种别由种别选择符说明，写在类型关键字后括号内，其关键字是KIND，后跟=号及种别值。其形式为：类型说明([KIND=]种别值)。 一个变量必有一个种别，如果变量的类型说明语句中没有种别说明符，说明采用系统规定的标准值。 种别函数 KIND(X)：与python中的type(x)相似； 属性说明 一个对象被说明具有某一属性时，就使该对象具有某种附加功能、特殊的使用方式与适用范围。 一个被说明对象可以没有附加的属性说明，此时它只是最基本的变量，与F77中的变量相同。 它也可以有多个属性说明，分别对被说明对象附加各件功能，规定它在各种场合下的使用方式。 每种属性说明都有专门的关键字，各属性关键字间用逗号分开，全部属性关键字写在说明语句种别说明符之后，双分隔号::之前，各属性关键字之间次序任意。属性不仅用于说明数据，还用于说明过程。 常见属性： 属性关键字 描述 适用范围 ALLOCATABLE 说明动态数组 数组 DIMENSION 说明数组 数组变量 PARAMETER 声明常量 常量 输入实数x，求下面的函数值–逻辑变量赋值123456789101112131415161718192021! 逻辑变量的赋值program main implicit none real :: x,y logical :: in_side print*,&quot; x^2 (1&lt;x&lt;2)&quot; print*,&quot;y = &#123;&quot; print*,&quot; 1-x (x&lt;=1, x&gt;=2)&quot; print *, &quot;请输入x值：&quot; read *,x print *,&quot;x=&quot;,x in_side=x&gt;1.0.and.x&lt;2.0 !这里赋值给in_side一个逻辑值，是或否 if(in_side) then y = x**2 else y = 1-x end if print *,&quot;y= &quot;,yend program main 字符型数据 字符型数据除了有类型、种别外，比其它类型还多了一个长度特性，即规定它有几个字符数 一般形式：CHARACTER[(LEN=整型字符长度表达式[,KIND=种别值])][,属性说明] :: 变量名表[=初始值] 在字符型说明语句中，长度说明必须有，不可省略，为正整数； 仅有关键字CHARACTER而没有括号时认为字符是一个字节长； 可以省去LEN&#x3D;及KTND&#x3D;，只写参数值，此时字符长度必须写在前面； 只有长度说明的语句可分为有括号和无括号两种，例如以下语句都是等价的：12345678CHARACTER(LEN=12,KIND=1) :: A,BCHARACTER(KIND=1,LEN=12) :: A,BCHARACTER(12,1) :: A,BCHARACTER*12 :: A,B``` - 长度也可以写成一个*号，表示长度暂不确定，待以后与程序中实际需要的长度相一致，如：```f90CHARACTER(LEN=*),PARAMETER :: C_NAME=‘GIRL’ 说明字符常量C_NAME，长度为4 PARAMETER表示常量。 CHARACTER后面说明的长度是其后所有实体名的公共长度，如果某一变量的长度与其它不同，可以在其变量名后标出自己的特有长度，例加： 1CHARACTER(LEN=12) :: A,B*5,C,D*7,E 字符串操作 形式基本和python相似，差别是形式不同，123A = &quot;ABCDEFG&quot;A[1:5] #pythonA(1:5) !fortran 字符串拼接//—并置符1&quot;AB&quot;//&quot;CDE&quot; ! &quot;ABCDE&quot; 字符比较 各种系统字符排序不一样，同一字符，在不同机上排序值可能不一样。小写英文字母排序在大写英文字母之后，它们的序号不同。虽然在书写FORTRAN语句时，大小写字母是等价的，但当进行字符操作和字符比较时必须看成是不同的。字符作比较实际上是比较它们的序号大小。 字符函数 F90允许把字符型的值转换成整型值(已知字符，取字符型的序号数值)， 也允许把数值型的值转换成字符型的值(已知序号，取它对应的字符)。 字符与数值相互转换的函数(F90的内部函数)：ICHAR，CHAR，IACHR，ACHAR 函数ICHAR的功能是把字符型转换成数值，它的引用方式是：ICHAR(字符实体) 函数值ICHAR返回字符实体第一个字符的序号值如果指明要按照ASCII码求它的序号，则本功能的函数名应改写为IACHAR 函数CHAR的功能是把一个序号转换成它的字符。它的引用方式是：CHAR(整型数值表达式)。 如果按照ASCII码求它的对应字符，则函数名为ACHAR。 求字符串长度LEN(字符实体) 函数值返回一个正整教，为该字符实体的长度（包括尾随空格、中间空格在内） 不计尾部空格的字符串长度函数：LEN_TRIM 求子串在父串位置的函数：INDEX(父串,子串) 如：INDEX(&quot;Einstein&quot;,&quot;s&quot;)的值4。如果第二个字符实体不是第一个字符实体的子串，返回函数值为0。 验证字符串的函数：VERIFY(字符串,字符集) 确认指定的字符集是否包含了给定字符串中所有的字符函数值返回一个正整数，指明字符串中与字符集相异的第一个字符是从左边第几个字符开始的如果没有相异的字符，则返回函数值为0 除去尾部空格函数：TRIM TRIM(&quot;ABCD 12 &quot;)//&quot;34&quot;的值是&quot;ABCD 1234&quot;。 比较字符大小的函数：LGE、LGT、LLE、LLT 派生类型定义 一般形式： 123456789TYPE[,访问属性说明::] 派生类型名 !TYPE是关键字，表示派生类型定义开始成员1类型说明……成员n类型说明END TYPE [派生类型名] 数组 数组的维数称为秩(rank)，F90中规定数组最多可以有7维 某一维中元素的个数称为该维的长度(extent) 数组中所有元素的个数称为数组的大小(size)，它等于各维的长度的乘积，数组的大小可以为0 例如：12REAL A(10,3,2) ! 秩为3，大小为10×3×2＝60，形状为10乘3乘2，或表示成(10，3，2)。SHAPE(A) ! 获得数组的形状结果为：(10，3，2) 下标不是从0开始，是从1开始的，例如A(0,0,0)时错误的，A(1,1,1)是正确的 数组声明1234567REAL A(10,2,3) ! 类型说明DIMENSION B(10,2,3) ! DIMENSI0N语句ALLOCATABLE C(:,:) ! ALLOCATABLE语句POINTER D(:,:,:) ! POINTER语句REAL, DIMENSION(2,5) :: E ! 类型说明中的DIMENSION属性REAL, ALLOCATABLE :: F(:,:,:) ! 类型说明中的ALLOCATABLE属性REAL, POINTER :: G(:,:) ! 类型说明中的POINTER属性 无论何种情况，数组的秩总是要指定的； 数组的大小和形状是否需要声明视数组的形式而定； 当COMMON语句指定了数组的秩和大小后，只能定义数组的类型而不能再次重复给定维界. 数组索引、切片和赋值12345A ! 代表数组A中所有元素A(1) ! 代表数组A中第一个元素A(1:10:2) ! 三元下标, A(下界:上界:步长), 代表数组A从第1开始到第10，每隔2的元素，也即是第1 3 5 7 9A(2) = 5.0 ! 给A(2)元素赋值B(1:5,2:3,3:5) ! 三维数组切片 对于—个多维数组的数组片段，它的每一维都可以用三元下标来声明 三元下标只能算一个下标 向量索引(下标) 向量下标可以以任何顺序来指定数组元素 123456789101112program main real A(10),B(5,5) ! 定义一个一维数组A，和二维数组B integer I(4),J(3) ! 定义向量I、J的大小 I = (/5,3,8,2/) ! 定义向量I，表示第5、3、8、2位置的元素下标 J = (/3,1,5/) ! 定义向量J，表示第3、1、5位置的元素下标 A(I) = 3.0 ! 给一维素组中（向量I）下标为5,3,8,2的元素赋值为3.0 B(2,J)=5.0 ! 给二维素组中第二行中（向量J）下标为3,1,5的元素赋值为5.0 print*,I print*,A print*,J print*,Bend program main 数组赋值 F90中数组赋值语句的形式为：V=e，V代表数组名或数组片段，e为数组表达式，它们必须有相同的形状（即维数相同，每维长度相同但上下界可不同）。 当V大小为0或为长度为0的字符型时，则没有值赋给V。 当e为标量时，则把e处理成与V相同的形状，V的每个元素均等于标量e的值。 数组表达式e中允许使用+、-、*、/、**等内部算术操作符。 例如，给A(2,2)中元素全部赋值为0：A = 0 数组构造器 其一般形式为：(/取值列表/),取值列表可以是标量，隐DO循环或任意秩的数组。 1234A1 = (/1,2,3,4,5,6/) !! 标量表示, 斜杠与括号间不能有空格A2 = (/B(I,1:5),B(I:J,7:9)/) ! 数组表示A3=(/(I,I=1,4)/) ! 隐DO循环A4=(/4,C(1:5),(I,I=1,4),7/) ! 混合表示 斜杠与括号间不能有空格 可以用方括号代替括号和斜线：12A1 = (/1,2,3,4,5,6/) A1 = [1,2,3,4,5,6] 冒号三元下标(代替隐DO循环)来指定值的范围和步长 12A1 = (/1:6:2/) !这种三元格式好像不行，老出错，找不到啥原因A1 = (/(I,I=1,6,2)/) RESHAPE语句 与python相似: 一般形式为：结果=RESHAPE(源,形状[,补充][,顺序]) 变成两行三列1RESHAPE((/3,4,5,6,7,8/),(/2,3/))","tags":[{"name":"Fortran","slug":"Fortran","permalink":"https://eastsheng.github.io/tags/Fortran/"},{"name":"Fortran Tutorial","slug":"Fortran-Tutorial","permalink":"https://eastsheng.github.io/tags/Fortran-Tutorial/"}],"categories":[{"name":"程序学习","slug":"程序学习","permalink":"https://eastsheng.github.io/categories/%E7%A8%8B%E5%BA%8F%E5%AD%A6%E4%B9%A0/"},{"name":"Fortran","slug":"程序学习/Fortran","permalink":"https://eastsheng.github.io/categories/%E7%A8%8B%E5%BA%8F%E5%AD%A6%E4%B9%A0/Fortran/"}]},{"title":"Fortran-03","date":"2022-07-23T10:11:28.000Z","path":"wiki/2022/07/23/codes/fortran/fortran_03/","text":"[toc] 停止语句PAUSE 一般形式是：PAUSE [暂停值]，暂停值为字符串常量或5位数以下的整型数，当程序运行至断点处将输出暂停值。 PAUSE语句(在F90中不推荐使用，在F95中被废除)暂时中止程序的运行，将系统挂起，使程序操作员可以执行其它操作系统命令。 STOP STOP语句的一般形式为: STOP [停止值]，与PAUSE语句类似，程序停止运行时将输出停止值。 STOP语句是停止运行，一个程序单位中可以有多个STOP语句，执行到任一个STOP语句处时，程序即完全中止运行。在子程序中如果有STOP语句，也是使整个程序停止运行而不是使控制返回主程序。 隐DO循环控制重复读写的次数 一般形式为：(I/O列表,循环变量名=初值,终值,增值)。12READ *,(VALUE(I),I=1,20) !读入VALUE(1),VALUE(2),…,VALUE(20)的值。WRITE(*,*)(A,B,N=1,5) !在当前设备用默认格式重复输出A、B的值5次。 隐DO循环只能作为输入输出表的一部分出现，不能用于其它场合。 隐DO表可以嵌套，如：1PRINT *, ((A(I,J),I=1,3),J=1,3) 无循环变量的DO构造1 DO块中必须有EXIT语句，使它停止循环，否则循环将无休无止地一直进行下去，形成死循环。 EXIT语句（EXIT [DO构造名]）的作用是停止循环，使控制退出循环结构，因此又称出口语句。通常将EXIT语句与IF语句结合使用，即在DO构造内使用：IF(逻辑表达式) EXIT 一个猜数游戏 用随机数产生器产生1－10之间的一个整数，你猜它，如果猜得太大或太小都会提示，猜对了结束。123456789101112131415program mainCALL RANDOM_SEED ! 用来获取或设置新的种子；注意，这个函数在整个程序里，通常只调用一次！call random_number(R)Number=int(10*R+1)do write(*,&#x27;(&quot;Your Guess:&quot;)&#x27;); read *, MyGuess if(MyGuess.eq.Number) exit if(MyGuess.gt.Number) then print *, &#x27;Too high. Try again.&#x27; else print *, &#x27;Too low. Try again.&#x27; end ifend doprint *,&#x27;You are lucky. It is&#x27;,Numberend program main Fortran90 以后，语法规范引入了两个标准的函数用来产生随机数(0 ~1 之间)： random_seed和 random_number(如上代码， 通常这两个函数需配合使用 ) random_seed call random_seed( size , get , put ),一共三个参数（一般一次只能选择一个参数使用，而不能三个一起使用）size是输出参数，会返回种子的大小。在获取或设置新的种子时，输入输出的种子数组，必须与size的大小一样。get是输出参数，用来返回当前的种子。必须是integer类型的数组（数组大小取决于size），通常很少使用它。put是输入参数，用来设置新的种子。只要random_seed不加入任何参数，则自动用时间设置种子。所以这个操作可以简化为call random_seed()或call random_seed random_number 用来产生随机数的，当我们需要产生时，调用它就可以了。整个程序可以不限次数地调用它。call random_number(R)这里的R必须是real类型，可以是单变量，也可以是数组。调用后，R的值变为当前的（伪）随机数。 求两个整数的最大公约数1234567891011121314151617181920212223242526! !碾转相除法：如27和6，先用27除以6，余数为3。再用6除以3，余数为零，即3为最大公约数。! program main! read *, m,n! if(m.lt.n) then! k=m; m=n; n=k! end if! k=mod(m,n)! do while (k/=0)! m=n; n=k; k=mod(m,n)! end do! print *, &#x27;最大公约数＝&#x27;,n! end program mainprogram main read *, m,n do while (m/=n) do while (m&gt;n) m=m-n end do do while (n&gt;m) n=n-m end do end do print *, &#x27;最大公约数＝&#x27;,mend program main do while的一般形式为：[构造名] DO WHILE (逻辑表达式) 求正弦函数的近似值123456789101112131415161718!正弦函数用泰勒级数展开：sinx=x-x^3/3!+x^5/5!-x^7/7!+...。计算有限精度范围内的值。program main real , parameter:: pi=3.141592, err=1.e-6 integer, parameter:: max_terms=10 read *, x; x=x*pi/180 k=1; term=x; sin_=term do while((abs(term)&gt;err) .and. (k&lt;=max_terms)) term=-term*x*x/(2*k*(2*k+1)) k=k+1 sin_=sin_+term print *,k,sin_ end do print *,sin(x)end program main DO 构造的一般形式12345[构造名:] DO [标号][循环控制]块终止语句 用不带循环控制变量的DO构造求下列式 $1^2+2^2+3^2+…+m^2$ 12345678910111213141516171819! 1^2+2^2+3^2+...+m^2program main integer :: m m = 1 sum = 0 do if(m&lt;1000) then sum = sum+m**2 m = m + 1 print *, m else EXIT end if end do! write(*,*) sumend program main","tags":[{"name":"Fortran","slug":"Fortran","permalink":"https://eastsheng.github.io/tags/Fortran/"},{"name":"Fortran Tutorial","slug":"Fortran-Tutorial","permalink":"https://eastsheng.github.io/tags/Fortran-Tutorial/"}],"categories":[{"name":"程序学习","slug":"程序学习","permalink":"https://eastsheng.github.io/categories/%E7%A8%8B%E5%BA%8F%E5%AD%A6%E4%B9%A0/"},{"name":"Fortran","slug":"程序学习/Fortran","permalink":"https://eastsheng.github.io/categories/%E7%A8%8B%E5%BA%8F%E5%AD%A6%E4%B9%A0/Fortran/"}]},{"title":"Fortran-02","date":"2022-07-17T10:11:28.000Z","path":"wiki/2022/07/17/codes/fortran/fortran_02/","text":"[toc] IF ELSE THEN 语句12345678910PROGRAM MAIN REAL :: x; READ *, x IF(x&gt;0.0 .and. x&lt;1.0) THEN PRINT *, &quot; 在区间(0, 1)中&quot; ELSE IF(x&lt;0 .and. x&gt;-1) THEN PRINT *, &quot;在区间(-1,0)&quot; ELSE PRINT *, &quot;不在区间(0, 1)中&quot; END IFEND PROGRAM MAIN tiny函数 tiny(x)表示查询x的最小正值,x所能表示的最小的数，近似于0。 CASE语句：统计学生考试成绩123456789101112131415161718192021222324program mainimplicit none !`implicit none`即设计任何和隐含说明语句无效，所有变量都要显式地人工声明，不能未声明就直接使用，有效地避免了可能的大量错误。integer :: score,n0=0,n1=0,n2=0,n3=0,n4=0do read *, score if(score&lt;0 .or. score&gt;100) then print *,&#x27;满分=&#x27;,n0,&#x27; 优=&#x27;,n1,&#x27; 良=&#x27;,n2,&#x27; 及格=&#x27;,n3,&#x27; 不及格=&#x27;,n4 exit else select case(score) !入口语句, select case(表达式) case(100) !CASE语句是一条单独的语句 print *, &#x27;满分&#x27;; n0=n0+1 case(85:99) !case值必须与表达式的类型相同 print *, &#x27;优 &#x27;; n1=n1+1 case(70:84) !给定CASE构造中的case值范围不能有重叠 print *, &#x27;良 &#x27;; n2=n2+1 !CASE块可以是空的，也可以包含其它块，其嵌套形式与块IF相同 case(60:69) print *, &#x27;及格&#x27;; n3=n3+1 case default !可选,最多只能有一句;当case表达式的值在case值范围以外时，执行CASE DEFAULT语句后面的块 print *, &#x27;不及格&#x27;; n4=n4+1 end select !出口语句 end ifend doend program main 分为整型、字符型、逻辑型三种 读入a,b，若a&gt;b，则置X&#x3D;1.23，否则置X&#x3D;32.1，打印X值；1234567891011program main real :: a,b,X read(*,*) a,b if(a&gt;b) then X = 1.23 write(*,*) X else X = 32.1 print *,X end ifend program main 读入a,b,c,d，若a+b&gt;c+d，则X&#x3D;1.1，若a+b&#x3D;c，则X&#x3D;0.0，若a+b&lt;c+d，则X&#x3D;-1.1，输出X值；123456789101112131415161718!读入a,b,c,d，若a+b&gt;c+d，则X=1.1，若a+b=c，则X=0.0，若a+b&lt;c+d，则X=-1.1，输出X值；program main real :: a,b,c,d,X read *, a,b,c,d if(a+b&gt;c+d) then X = 1.1 write(*,*) X else if((a+b).eq.c) then X = 0.0 write(*,*) X else if((a+b).lt.(c+d)) then X = -1.1 print *, X else print *,&quot;输入错误!!!&quot; end ifend program main 读入S与S1，如|S-S1|≤10-7，则置S为S1。123456789101112! 读入S与S1，如|S-S1|≤10-7，则置S为S1。program main real :: S,S1 READ(*,*) S,S1 IF(ABS(S-S1).LE.(10-7)) THEN S = S1 PRINT *,&quot;S,S1 = &quot;,S,S1 ELSE PRINT *,&quot;ERROR!!!&quot; END IFend program main 用IF构造嵌套方法编程12345678910111213141516171819202122232425262728! 用IF构造嵌套方法编程：读入X，分三种情况求得Z值，当X&lt;0时，Z=-100；! 当X=0时，又分三种情况（y&lt;0，则Z=sinX；y=0，则Z=0；y&gt;0，则Z=cosX）；! 当X&gt;0时，Z=100，打印Z值。PROGRAM MAIN REAL :: X,Y,Z READ(*,*) X,Y IF(X&lt;0) THEN Z = -100 PRINT *,Z PRINT *,Z ELSE IF(X.EQ.0) THEN IF(Y.LT.0) THEN Z = SIN(X) PRINT *,Z ELSE IF(Y.EQ.0) THEN Z = 0 PRINT *,Z ELSE IF(Y.GT.0) THEN Z = COS(X) PRINT *,Z END IF ELSE IF(X.GT.0) THEN Z = 100 PRINT *,Z END IFEND PROGRAM MAIN 读入一个整型变量N的值，用CASE构造编程1234567891011121314151617181920212223! 读入一个整型变量N的值，用CASE构造编程，! 若N＝1、2、3、5，则Y＝X；N＝4、8，则Y＝X^2；N＝6、7，则Y＝X^3，! 其它情况则Y=0，打印Y值PROGRAM MAIN INTEGER :: N,X,Y READ(*,*) N SELECT CASE(N) CASE(1,2,3,5) Y = X PRINT *, Y CASE(4,8) Y = X**2 PRINT *, Y CASE(6:7) Y = X**3 PRINT *, Y CASE DEFAULT Y = 0 PRINT *, Y END SELECTEND PROGRAM MAIN 设变量color_light是字符型变量，表示灯光色彩123456789101112131415161718192021222324! 设变量color_light是字符型变量，表示灯光色彩，! 编一CASE构造，当该变量值是红色(RED)则打印STOP字样。! 当变量值是黄色(YELLOW)，打印WAIT字样，当值是绿色(GREEN)打印CROSS字样。PROGRAM MAIN IMPLICIT none CHARACTER*1 color_light PRINT *,&quot;请输入：RED、YELLOW、GREEN任意一个：&quot; READ(*,*) color_light KEY_INPUT: SELECT CASE(color_light) CASE(&#x27;RED&#x27;) PRINT *,&quot;STOP&quot; CASE(&#x27;YELLOW&#x27;) PRINT *, &quot;WAIT&quot; CASE(&#x27;GREEN&#x27;) PRINT *, &quot;CROSS&quot; CASE DEFAULT PRINT *, &quot;ERROR!!!!&quot; END SELECT KEY_INPUTEND PROGRAM MAIN 这个代码并不能实现该结果，待解决 循环读入学生的学号和成绩30次并打印12345678910program main integer :: N, Num real :: Grade print *, &quot;请输入学号、成绩:&quot; do 10 N = 1, 30, 1 read(*,*) Num, Grade print*, Num,Grade 10 CONTINUEend program main DO构造一般形式：DO [[标号][，]] 循环变量＝初值式，终值式[，增量式] 中括号里可省略;DO语句的一般形式中，当循环变量的增量(步长值)为1时增量式可不写;循环变量初值、终值和步长可以分别是常数、变量或表达式;循环变量的初值、终值和步长可以为正或负。初值、终值可以为零。但步长不应为0，否则循环变量的值永远不会超过终值，从而陷入死循环;应尽量使循环变量类型与初值、终值和步长的类型一致, 若不一致，则按赋值的规则处理，即需先将初值、终值和步长的类型转化成循环变量的类型，然后进行处理；由于实型数在运算和存储时有一些误差，因而循环次数的理论值与实际值之间会有一些差别。这种情况在程序设计中常有发生，而且比较隐蔽不易发现。所以应该避免使用实型的循环变量，用整型循环变量计算出的循环次数是绝对准确的。特殊的循环终端语句是：END DO(常用于无语句标号时)和CONTINUE(常用于有语句标号时)","tags":[{"name":"Fortran","slug":"Fortran","permalink":"https://eastsheng.github.io/tags/Fortran/"},{"name":"Fortran Tutorial","slug":"Fortran-Tutorial","permalink":"https://eastsheng.github.io/tags/Fortran-Tutorial/"}],"categories":[{"name":"程序学习","slug":"程序学习","permalink":"https://eastsheng.github.io/categories/%E7%A8%8B%E5%BA%8F%E5%AD%A6%E4%B9%A0/"},{"name":"Fortran","slug":"程序学习/Fortran","permalink":"https://eastsheng.github.io/categories/%E7%A8%8B%E5%BA%8F%E5%AD%A6%E4%B9%A0/Fortran/"}]},{"title":"Fortran-01","date":"2022-07-16T10:11:28.000Z","path":"wiki/2022/07/16/codes/fortran/fortran_01/","text":"[toc] Sublime Text配置Fortran高亮 下载插件fortran.tmbundle 解压到C:\\Users\\xxx\\AppData\\Roaming\\Sublime Text\\Packages,通过Sublime Text面板中Preferences&gt;Browse Packages可以打开 一个Fortran程序基本格式12345678!program main ! 程序开始，其后跟程序名。这一行可省略。real :: c, d, av3, av4 ! 定义实数型变量。整数型，则用 integer。!read *, c, d ! 输入语句1read(*,*) c, d ! 输入语句2:星号意指默认的输入输出硬件(键盘和屏幕)及格式 av3 = (c + d)/2; av4 = (c*d)**0.5 ! 运算 + - * / **print *, av3, av4 ! 输出语句1write(*,*) av3, av4 ! 输出语句2end! 程序结束 输入圆锥底面半径r和高h，求体积和表面积123456789program main real :: r, h, pi, v, s ! 定义半径、高、体积变量pi = 3.1415926write(*,*) &quot;输入圆锥半径r和高h！&quot;read(*,*) r, h ! 输入半径和高v = (pi*r**2*h)/3 ! 计算圆锥体积s = pi*r**2+pi*r*(sqrt(r**2+h**2)) ! 计算圆锥体积write(*,*) &quot;圆锥体积为v:&quot;,v ; write(*,*) &quot;圆锥表面积为s:&quot;,s ! F90中用“；”将两行并为一行。end program main 分别求半径R&#x3D;1，3，12.5时的圆周长。12345678910111213program mainreal :: r(3) data r /1, 3, 12.5/do i=1,3 print *, &#x27;半径＝&#x27;, r(i), &#x27;圆周长＝&#x27;, C(r(i))end doend program mainfunction c(radius) pi=acos(-1.0) c=2*pi*radius returnend 一些内置函数1234567891011121314151617181920212223242526272829303132333435363738program main! 变量类型integer :: i,j ! (整型说明语句)real :: x,y ! (实型说明语句)double precision :: m,n ! (双精度说明语句)complex :: o,p ! (复型说明语句)logical :: t,f ! (逻辑型说明语句)character :: a,b ! (字符型说明语句)! 内置函数i = sqrt(4.0) ! 开方!括号内必须是 REAL or COMPLEXprint *, &quot;4.0开方=(整型)&quot;,ij = sin(2.0) ! 三角函数!括号内必须是 REAL or COMPLEXj1 = cos(2.0); j2 = asin(1.0); j3 = acos(1.0)j4 = tan(2.0); j5 = atan(2.0)write(*,*) &quot;2.0的正弦函数值=(整型)&quot;,j,j1,j2,j3,j4,j5x = exp(6.0)!括号内必须是 REAL or COMPLEXwrite(*,*) &quot;6.0的e指数(实型)=&quot;,xy = log(3.0)!括号内必须是 REAL or COMPLEXy1 = log10(3.0)y2 = alog(3.0)y3 = alog10(3.0)write(*,*) &quot;3.0的log值(实型)=&quot;,y,y1,y2,y3m = abs(-3.333); m1 = int(real(-3))write(*,*) m,m1n = mod(5,2) !求余n1 = sign(5,2) !求符号n2 = max(2,5,6,8,9,44)n3 = max0(2,5,6,8,9,44)n4 = min(2,5,6,8,9,44)n5 = min0(2,5,6,8,9,44)write(*,*) n,n1,n2,n3,n4,n5end program main 函数名分为“通用名”和“专用名”例如求余函数的“通用名”为MOD，“专用名”有三个(MOD，AMOD，DMOD)。 根据自变量的类型就自动确定了函数值的类型，如MOD(8,3)的值为整型，而MOD(8.0,3.0)的值为实型。 当调用子程序时如果用内在函数作为自变量(实参)，必须使用该内在函数的专用名。 运算误差 为减小误差，在写表达式时应尽量使每一次运算结果都在有效位数范围之内; 尽量不要使两个相差很大的数值直接相加或相减。 12345678910111213141516171819202122program mainreal*8 aa=11111.1 *1111.11 ; print *, aa=11111.1d0*1111.11d0; print *, aa=0.001+1246825.0-1246820.0; print *, aa=1246825.0 -1246820.0 +0.001 ; print *, aa=1246825.0d0-1246820.0d0+0.001d0; print *, aa=1246825 -1246820 +0.001d0; print *, aa=1246825.0 -1246820.0 +0.001d0; print *, aend program main! output! 12345654.000000000! 12345654.320999999! 5.0000000000000000! 5.0009999275207520! 5.0010000000000003! 5.0010000000000003! 5.0010000000000003 对于给定扇形的半径$r$及圆心角$\\theta$，求面积等 对于给定扇形的半径$r$及圆心角$\\theta$，弦长$b&#x3D;2rsin(\\frac \\theta 2)$，拱高$h&#x3D;2rsin^2(\\frac \\theta 4)$，弧度$\\alpha&#x3D;\\frac {2\\pi\\theta} {360}$，面积$S&#x3D;{\\frac 1 2}\\alpha r^2-\\alpha \\sqrt{r^2-{\\theta}^2}$。编一程序，对任意给定的$r$及$\\theta$，输出$h$、$b$及$S$值。 12345678910111213141516171819202122232425262728293031323334program mainreal :: r, theta, b, h, alpha, Swrite(*,*) &quot;请分别输入扇形半径、圆心角: &quot;read(*,*) r, thetab = huchang(r,theta)h = gonggao(r,theta)alpha = hudu(theta)S = mianji(r,alpha)write(*,*) b,h,alpha,Send program mainfunction huchang(r,theta) b = 2*r*sin(theta/2)end function huchangfunction gonggao(r,theta) h = 2*r*(sin(theta/4)**2)end function gonggaofunction hudu(theta) real :: pi pi = 3.1415926 alpha = 2*pi*theta/360.0end function hudufunction mianji(r,alpha) S = 0.5*alpha*(r**2)-alpha*sqrt(r**2-alpha**2)end function mianji 判断一个数N(N＞3)是否素数1234567891011121314program main read *, n i=2 1 continue if(mod(n,i).eq.0) then print *, &#x27;不是素数，可被&#x27;,i,&#x27;整除&#x27;! end if! if(mod(n,i).ne.0) then else i=i+1 if(i.le.int(sqrt(n*1.))) goto 1 print *, &#x27;是素数&#x27; end ifend program main 关系运算符 逻辑 逻辑量：Fortran的逻辑常量只有两个：.TRUE. (表示“真”，即满足逻辑条件)； .FALSE. (表示“假”，即不满足逻辑条件)。 逻辑运算符 逻辑表达式的运算 统计学生考试合格人数12345678910111213! F90的固定格式 －－－－－统计学生考试合格人数 program main INTEGER :: n, s, k s = 0; k = 0 1 PRINT*,&#x27;键入分数 （负数时退出）：&#x27; READ*, n IF(n &lt; 0) GOTO 666 s = s + 1 IF(n &gt;= 60) k = k + 1 GOTO 1 666 PRINT*, k,&#x27; 个学生合格。 总人数＝&#x27;, sEND program main","tags":[{"name":"Fortran","slug":"Fortran","permalink":"https://eastsheng.github.io/tags/Fortran/"},{"name":"Fortran Tutorial","slug":"Fortran-Tutorial","permalink":"https://eastsheng.github.io/tags/Fortran-Tutorial/"}],"categories":[{"name":"程序学习","slug":"程序学习","permalink":"https://eastsheng.github.io/categories/%E7%A8%8B%E5%BA%8F%E5%AD%A6%E4%B9%A0/"},{"name":"Fortran","slug":"程序学习/Fortran","permalink":"https://eastsheng.github.io/categories/%E7%A8%8B%E5%BA%8F%E5%AD%A6%E4%B9%A0/Fortran/"}]},{"title":"Python奇淫巧计-1","date":"2022-06-16T02:48:28.000Z","path":"wiki/2022/06/16/codes/python/python_skills_1/","text":"[toc] 图像处理旋转图片1234567891011121314151617181920212223import cv2def Rotation(image,degree): src= image rows, cols, channel = src.shape # 绕中心旋转 # 参数：旋转中心,旋转度数,scale M = cv2.getRotationMatrix2D((cols/2, rows/2), degree, 1.09) # 参数: 原始图像,旋转参数, 元素图像高度 rotated = cv2.warpAffine(src, M, (cols, rows),borderValue=(255, 255, 255)) # 显示旋转后的图像 # cv2.imshow(&quot;demo1&quot;, rotated) cv2.waitKey() cv2.destroyAllWindows() return rotatedfor i in range(180): image = cv2.imread(&#x27;./fig.png&#x27;) img = Rotation(image, -i) # cv2.imshow(&#x27;ww1&#x27;, img) print(i) cv2.waitKey() cv2.imwrite(&quot;./img/rotateImg_&quot;+str(i)+&quot;.png&quot;,img) python函数模块化，并安装在本地调用 首先，把编写好的函数写在一个指定文件(example：xxx.py)里，并放到一个文件夹(example：xxx)里。 接着，在这个文件夹里写一个setup.py文件，文件内容例如： 123456789101112$ from distutils.core import setup$ setup($ name = &#x27;thermal_conductivity&#x27;,$ version = &#x27;1.0.0&#x27;,$ py_modules = [&#x27;thermal_conductivity&#x27;],$ author = &#x27;eastsheng&#x27;,$ author_email = &#x27;eastsheng@hotmail.com&#x27;,$ url = &#x27;https://github.com/eastsheng&#x27;,$ description = &#x27;Calculate thermal conductivity according to NEMD dump.&#x27;) 然后，在此文件夹里打开cmd，输入： 1$ python setup.py sdist 最后，安装此模块到本地，输入： 1$ pip install . python包上传至PYPI 安装 setuptools 和 wheel 库，这两个库是 Python 的包打包工具，可以用来生成安装包和源码包，twine用来上传PyPI： 12pip install setuptools wheelpip install twine 编写 setup.py 文件，这个文件描述了项目的元数据和打包方式。这个文件通常位于项目的根目录下，下面是一个示例： 1234567891011121314151617181920&quot;&quot;&quot;run thispython setup.py sdistpip install .&quot;&quot;&quot;# from distutils.core import setupfrom setuptools import setup, find_packagessetup(name = &#x27;ReadLog&#x27;,version = &#x27;1.1.0&#x27;,py_modules = [&#x27;ReadLog&#x27;],author = &#x27;CHENDONGSHENG&#x27;,author_email = &#x27;eastsheng@hotmail.com&#x27;,packages=find_packages(&#x27;src&#x27;),package_dir=&#123;&#x27;&#x27;: &#x27;src&#x27;&#125;,install_requires=open(&#x27;requirements.txt&#x27;).readlines(),url = &#x27;https://github.com/eastsheng/ReadLog&#x27;,description = &#x27;Read themo info from lammps output file or log file&#x27;) 在项目的根目录下执行以下命令生成源码包和安装包： 12python setup.py sdisttwine upload dist/* 打包Python程序为exe打包后可以在Windows上运行，而不需要安装程序里需要的各种包。 （1）. 安装第三方包pyinstaller （2）. 在cmd命令行输入: 1pip install pyinstaller （3）. 如果嫌慢，或者失败，可以用国内镜像网址下载安装: 1pip install pyinstaller -i https://pypi.douban.com/simple 或者设置Windows国内镜像，具体参考这里: 在 windows “文件资源管理器” 地址栏 输入 %APPDATA% 回车；或者直接找到路径C:\\Users\\yourcomputer\\AppData\\Roaming 创建名为pip的文件夹 在里面新建名为 pip.ini 的配置文件 在 pip.ini 文件中输入以下内容，然后保存 1234[global]index-url=http://mirrors.aliyun.com/pypi/simple/[install]trusted-host=mirrors.aliyun.com 然后可以试试快不快 （4）. cmd执行： 1pyinstaller -F filename.py （5）. 还可以给程序加个图标： 12pyinstaller -i &lt;图标名.ico&gt; -F filename.py （6）. 其他需要用到的命令 12345pyinstaller -h 为查看help命令pyinstaller --clean 为清理打包过程中的临时文件pyinstaller -D,--onedir 为默认值，生成dist文件夹pyinstaller -F，--onefile 为在dist文件夹中只生成独立的打包文件pyinstaller -i &lt;图标名.ico&gt; -F filename.py为指定打包程序使用的图标文件 turtle画太极画太极；打包后的exe文件 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960#画个太极阴阳鱼import turtleturtle.setup(0.5,0.6,0,0)turtle.speed(10)# #大圆# turtle.penup()# turtle.goto(0,-160)# turtle.pendown()# turtle.circle(180)#画阴鱼turtle.begin_fill()turtle.fillcolor(&#x27;black&#x27;)turtle.left(180)turtle.penup()turtle.goto(0,200)turtle.pendown()turtle.circle(90,180)turtle.circle(-90,180)turtle.left(180)turtle.circle(180,180)turtle.end_fill()#画阴鱼turtle.circle(180,180)#白眼turtle.begin_fill()turtle.fillcolor(&#x27;white&#x27;)turtle.penup()turtle.goto(0,80)turtle.pendown()turtle.circle(40)turtle.end_fill()#黑眼turtle.begin_fill()turtle.fillcolor(&#x27;black&#x27;)turtle.penup()turtle.goto(0,-120)turtle.pendown()turtle.circle(40)turtle.end_fill()#太极turtle.penup()turtle.goto(-275,0)turtle.pendown()turtle.write(&quot;太&quot;,font=(&quot;华文行楷&quot;,30,&quot;normal&quot;))turtle.penup()turtle.goto(-275,-50)turtle.pendown()turtle.write(&quot;极&quot;,font=(&quot;华文行楷&quot;,30,&quot;normal&quot;))turtle.penup()turtle.goto(200,-120)turtle.pendown()turtle.write(&quot;---2020/3/17&quot;,font=(&quot;方正&quot;,12,&quot;normal&quot;))turtle.penup()turtle.goto(250,-150)turtle.pendown()turtle.write(&quot;sheng&quot;,font=(&quot;华文行楷&quot;,12,&quot;normal&quot;))turtle.hideturtle()turtle.done() if name &#x3D;&#x3D; ‘main‘:1if __name__ == &#x27;__main__&#x27;: 为什么有的执行代码前都要写一个if __name__是Python中一个隐含的变量它代表了模块的名字 只有被Python解释器直接执行的模块的名字才是__main__ 也即是，除非直接执行该代码，否则是不会执行if __name__ == &#39;__main__&#39;:下面的代码的。 if __name__ == &#39;__main__&#39;:下的变量是全局变量 文件、路径后缀等操作os.path.split() 分离文件路径与文件名12345import osfullpath = &#x27;E:/xxx/xxx.py&#x27;(path, f) = os.path.split(fullpath)# print(path, f)# E:/xxx xxx.py os.path.splitext() 分离文件名与后缀12345import osfilename = &#x27;xxx.py&#x27;(f, suffix) = os.path.splitext(filename)# print(f, suffix)# xxx .py 字典操作定义字典12345HeavyOil_dict =&#123; &quot;Sat&quot;:[1,83], &quot;Aro&quot;:[84,117], &quot;Res&quot;:[118,170], &quot;Asp&quot;:[171,235]&#125; 字典键索引值1HeavyOil_dict[&quot;Sat&quot;] 字典不能索引 字典不能索引，可以直接改为list后索引1HeavyOil_Label = list(HeavyOil_dict.keys()) List操作去除list的括号与引号12lc = &quot;\\t&quot;.join(str(i) for i in l) 列表解析式12345678910111213141516171819#普通a=[]for i in range(1,11): a.append(i)print(a)#1.列表解析式b=[i for i in range(1,11)]print(b)#结果[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]#其中第一个i表示要放入b列表中的数据，进一步理解c=[i**2 for i in range(1,11)]print(c)#结果[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]#2.字典类型的解析式d=&#123;i:i**2 for i in range(1,11)&#125;print(d)#结果&#123;1: 1, 2: 4, 3: 9, 4: 16, 5: 25, 6: 36, 7: 49, 8: 64, 9: 81, 10: 100&#125; count某个元素在列表中出现的次数123some_list = [&#x27;a&#x27;, &#x27;b&#x27;, &#x27;c&#x27;, &#x27;b&#x27;, &#x27;d&#x27;, &#x27;m&#x27;, &#x27;n&#x27;, &#x27;n&#x27;]m = some_list.count(&quot;b&quot;)print(m) Useful Python Librarys 用于制作简单 GUI 程序的 Python 库。换一种简单的方式写 GUI（图形用户界面）程序 123456789101112from guietta import _, Gui, Quitgui = Gui( [ &quot;Enter numbers:&quot;, &quot;__a__&quot;, &quot;+&quot;, &quot;__b__&quot;, [&quot;Calculate&quot;] ], [ &quot;Result: --&gt;&quot;, &quot;result&quot;, _, _, _ ], [ _, _, _, _, Quit ])with gui.Calculate: gui.result = float(gui.a) + float(gui.b)gui.run() 参考 https://hellogithub.com/periodical/category/Python%20%E9%A1%B9%E7%9B%AE/?page=3 导出与安装requirements.txt 导出环境中所有依赖库 1pip freeze &gt; requirements.txt 指定项目文件夹中依赖库 12pip install pipreqspipreqs xxx ## xxx代表项目路径 在其他环境安装requirements.txt中依赖库 1pip install -r requirements.txt 运行Python时传入参数 args_kwargs用法：https://docs.pythontab.com/interpy/args_kwargs/Usage_args/ 具体实现 如下run.py：12345import sysx = sys.argv[1] # 传入参数1y = sys.argv[2] # 传入参数2print(&quot;第一个参数为：&quot;,x)print(&quot;第二个参数为：&quot;,y) 具体运行方法：1python run.py 1 2 output12第一个参数为： 1第二个参数为： 2 若要可以直接运行脚本 如在Linux中运行，可在脚本中添加#!/usr/bin/python123456#!/usr/bin/pythonimport sysx = sys.argv[1] # 传入参数1y = sys.argv[2] # 传入参数2print(&quot;第一个参数为：&quot;,x)print(&quot;第二个参数为：&quot;,y) 若要可执行，还需给脚本设置权限1chmod +x ./run.py # 视情况添加sudo Python调用其他语言调用C&#x2F;C++1. CTypes 参考：https://zhuanlan.zhihu.com/p/71243212 参考：https://physicspython.wordpress.com/2020/11/11/using-c-functions-in-python/ 生成test.so动态链接库文件:1g++ -o test.so -shared -fPIC test.cpp Python调用C++ 1234import ctypesCL = ctypes.cdll.LoadLibrarylib = CL(&quot;./test.so&quot;)lib.func() 2. SWIG3. Python&#x2F;C API4. Cython调用Fortran使用numpy中的f2py hello_fortran.f90 123456subroutine hello (a) implicit none integer a write(*,*)&#x27;Hello from Fortran90!!!&#x27;, a returnend subroutine hello 使用f2py编译fortran 1f2py -m hello_fortran -c hello_fortran.f90 python中调用 12import hello_fortran as hfhf.hello(45) 减少内存占用__slots__例子： 创建许多对象（成千上万个），它会消耗掉很多内存1234567class MyClass(object): __slots__ = [&#x27;name&#x27;, &#x27;identifier&#x27;] def __init__(self, name, identifier): self.name = name self.identifier = identifier self.set_up() # ... pypy安装Linux命令行安装pypy和pypy312sudo apt-get install pypy pypy-dev #pypy2sudo apt-get install pypy3 #pypy3 Linux手动安装pypy3 官网下载最新的pypy版本，直接解压tar -xf pypy3.8-v7.3.7-linux64.tar.bz2 创建软链：sudo ln -s /root/pypy3-v6.0.0-linux64/bin/pypy3 /usr/local/bin 创建软链 pypy安装成功，输入pypy3测试 pypy3 xxx.py 运行python文件 然后开始安装pip命令 下载 wget https://bootstrap.pypa.io/get-pip.py 然后执行pypy3 get-pip.py 测试pip是否安装成功pypy -m pip install numpy 还可安装自己的库：1pypy3 setup.py install 卸载pypy 完全卸载pypy（软件及相关配置）1sudo apt-get remove --purge pypy 完全卸载pypy及其依赖软件（慎用！这里会删除pypy及依赖pypy的软件包，一般上面第一条命令已经够用）12sudo apt-get remove --auto-remove pypysudo apt-get purge --auto-remove pypy 清除pypy及其依赖软件的安装包1sudo apt-get autoclean pypy BUG 部分第三方库不兼容 从此处查看 参考 [1] https://blog.csdn.net/weixin_43980524/article/details/85195409 自动给数字前面补0的方法1234n = &quot;123&quot;s = n.zfill(5)# output00123 一款 AI 修复神器Lama Cleaner 安装好后，就可以启动一个 web 服务了。1234pip install lama-cleaner# Models will be downloaded at first time usedlama-cleaner --model=lama --device=cpu --port=8080# Lama Cleaner is now running at http://localhost:8080 查找路径下目录或文件glob1234567891011121314151617&quot;&quot;&quot;定义一个函数，搜索e f盘下的所有文件和目录，并返回一个列表(这里使用import glob)&quot;&quot;&quot;import glob def search(): f = glob.glob(r&#x27;E:\\E-book\\*&#x27;) #返回一个列表 print(f)def searchi(): f = glob.glob(r&#x27;F:\\*.bin&#x27;) #返回一个路径或文件 for i in f: print(i)if __name__ == &quot;__main__&quot;: search() searchi()","tags":[{"name":"Python","slug":"Python","permalink":"https://eastsheng.github.io/tags/Python/"},{"name":"Tutorials","slug":"Tutorials","permalink":"https://eastsheng.github.io/tags/Tutorials/"}],"categories":[{"name":"程序学习","slug":"程序学习","permalink":"https://eastsheng.github.io/categories/%E7%A8%8B%E5%BA%8F%E5%AD%A6%E4%B9%A0/"},{"name":"Python","slug":"程序学习/Python","permalink":"https://eastsheng.github.io/categories/%E7%A8%8B%E5%BA%8F%E5%AD%A6%E4%B9%A0/Python/"}]},{"title":"Python写APP","date":"2022-06-16T02:48:28.000Z","path":"wiki/2022/06/16/codes/python/app/app_coding/","text":"[toc] PyWebIO https://github.com/pywebio/PyWebIO https://pywebio.readthedocs.io/zh_CN/latest/ pyqtgraph绘图库 123pip install pyqtgraph #安装import pyqtgraph as pg # 引入python -m pyqtgraph.examples #例子 多线程，https://www.pythonguis.com/tutorials/multithreading-pyqt-applications-qthreadpool/ Electron https://www.electronjs.org/ https://www.w3cschool.cn/electronmanual/ https://www.w3cschool.cn/electronmanual/## PyWebIO PyQt5 总结PyQt5基础 https://zmister.com/archives/category/guidevelop/pyqt5_basic/ Qt设计师 ui转py：1pyuic5 -x -o MDDP.py MDDP.ui 打包： 1234567891011pip install pyinstaller #installpyinstaller -F -w -i ./imgs/fig.ico MDDP.py# -F (-onefile)代表产生单个可执行文件；# -D (--onedir)产生一个目录（包含多个文件）作为可执行程序# -a (--ascii)不包含 Unicode 字符集支持# -d (--debug)产生 debug 版本的可执行文件# -w (-windowed，--noconsolc) 指定程序运行时不显示命令行窗口（仅对 Windows 有效）# -c (--nowindowed，--console)指定使用命令行窗口运行程序（仅对 Windows 有效）# -o (DIR，--out=DIR)指定 spec 文件的生成目录。如果没有指定，则默认使用当前目录来生成 spec 文件# -p (DIR，--path=DIR)设置 Python 导入模块的路径（和设置 PYTHONPATH 环境变量的作用相似）。也可使用路径分隔符（Windows 使用分号，Linux 使用冒号）来分隔多个路径# -n (NAME, --name=NAME)指定项目（产生的 spec）名字。如果省略该选项，那么第一个脚本的主文件名将作为 spec 的名字 打开文件&#x2F;夹 参考：https://blog.csdn.net/AI414010/article/details/107559281 例子： 12345678910111213141516171819202122232425262728293031323334353637383940from PyQt5 import QtWidgetsfrom PyQt5.QtWidgets import QFileDialogclass MyWindow(QtWidgets.QWidget): def __init__(self): super(MyWindow,self).__init__() self.myButton = QtWidgets.QPushButton(self) self.myButton.setObjectName(&quot;myButton&quot;) self.myButton.setText(&quot;Test&quot;) self.myButton.clicked.connect(self.msg) def msg(self): # directory1 = QFileDialog.getExistingDirectory(self, #当窗口非继承QtWidgets.QDialog时，self需替换成 None # &quot;选取文件夹&quot;, # &quot;./&quot;) #起始路径 # print(directory1) fileName1, filetype = QFileDialog.getOpenFileName(self, #当窗口非继承QtWidgets.QDialog时，self需替换成 None &quot;选取文件&quot;, &quot;./&quot;, &quot;All Files (*);;Text Files (*.txt)&quot;) #设置文件扩展名过滤,注意用双分号间隔 print(fileName1,filetype) # files, ok1 = QFileDialog.getOpenFileNames(self, #当窗口非继承QtWidgets.QDialog时，self需替换成 None # &quot;多文件选择&quot;, # &quot;./&quot;, # &quot;All Files (*);;Text Files (*.txt)&quot;) # print(files,ok1) fileName2, ok2 = QFileDialog.getSaveFileName(self, #当窗口非继承QtWidgets.QDialog时，self需替换成 None &quot;文件保存&quot;, &quot;./&quot;, &quot;All Files (*);;Text Files (*.txt)&quot;)if __name__==&quot;__main__&quot;: import sys app=QtWidgets.QApplication(sys.argv) myshow=MyWindow() myshow.show() sys.exit(app.exec_()) 设置QlineEdit不可编辑1self.density_ui.outputFolder.setEnabled(False)","tags":[{"name":"Python","slug":"Python","permalink":"https://eastsheng.github.io/tags/Python/"},{"name":"Tutorials","slug":"Tutorials","permalink":"https://eastsheng.github.io/tags/Tutorials/"}],"categories":[{"name":"程序学习","slug":"程序学习","permalink":"https://eastsheng.github.io/categories/%E7%A8%8B%E5%BA%8F%E5%AD%A6%E4%B9%A0/"},{"name":"Python","slug":"程序学习/Python","permalink":"https://eastsheng.github.io/categories/%E7%A8%8B%E5%BA%8F%E5%AD%A6%E4%B9%A0/Python/"},{"name":"APP","slug":"程序学习/Python/APP","permalink":"https://eastsheng.github.io/categories/%E7%A8%8B%E5%BA%8F%E5%AD%A6%E4%B9%A0/Python/APP/"}]},{"title":"Ubuntu手动搭建Web服务器","date":"2022-06-08T15:56:48.000Z","path":"wiki/2022/06/08/linux/WebServer/","text":"[toc] 使用Ubuntu手动搭建Web服务器安装Apache21sudo apt-get install apache2 然后即可打开刘浏览器访问127.0.0.1或Ubuntu ip地址 安装MySQL123sudo apt-get install mysql-serversudo apt-get install mysql-clientsudo apt-get install libmysqlclient-dev 检查是否安装成功：1sudo netstat -tap | grep mysql 启动Mysql失败1ERROR 2002 (HY000): Can‘t connect to local MySQL server through socket ‘/tmp/mysql.sock 找不到mysql.sock文件位置 执行下面命令:1sudo cat /etc/mysql/debian.cnf 即可找到：1234567891011# Automatically generated for Debian scripts. DO NOT TOUCH![client]host = localhostuser = debian-sys-maintpassword = QtryCctbOk7ZV2nlsocket = /var/run/mysqld/mysqld.sock[mysql_upgrade]host = localhostuser = debian-sys-maintpassword = QtryCctbOk7ZV2nlsocket = /var/run/mysqld/mysqld.sock 并在my.cnf中修改1vim /etc/my.cnf 安装PHP123sudo apt-get install software-properties-commonsudo add-apt-repository ppa:ondrej/php &amp;&amp; sudo apt-get updatesudo apt-get -y install php7.2 常用拓展 1sudo apt-get -y install php7.2-fpm php7.2-mysql php7.2-curl php7.2-json php7.2-mbstring php7.2-xml php7.2-intl php7.2-odbc php7.2-cgi 展示PHP网页1234cd /var/www/htmlls #列出当前目录下只有一个index.html文件rm index.html #删掉index.htmlecho Hello World! &gt; index.php ref :https://www.cnblogs.com/shenjuxian/p/13739100.html 配置网页1：https://www.cnblogs.com/supe/p/8010612.html 配置网页2： 使用PHPstudy搭建Ubuntu安装PHPstudy 安装命令1wget -O install.sh https://download.xp.cn/install.sh &amp;&amp; sudo bash install.sh 安装成功 实验室 12345678910111213141516171819==============运行状态=========================docker daemon runningcentos_env container runningwebpanel runningphpstudy running=================安装完成==================请用浏览器访问面板:外网:http://xxx.xx.xxx.xxx:9080/E112FE内网:http://xxx.xx.xx.xx:9080/E112FE系统初始账号:admin系统初始密码:xxxxxxxxxx官网:https://www.xp.cn如果使用的是云服务器，请至安全组开放9080端口如果使用ftp，请开放21以及30000-30050端口=========================================== 笔记本 12345678910111213141516171819==============运行状态=========================docker daemon runningcentos_env container runningwebpanel runningphpstudy running=================安装完成==================请用浏览器访问面板:外网:http://xxx.xx.xxx.xxx:9080/E112FE内网:http://xxx.xx.xx.xx:9080/E112FE系统初始账号:admin系统初始密码:xxxxxxxxxx官网:https://www.xp.cn如果使用的是云服务器，请至安全组开放9080端口如果使用ftp，请开放21以及30000-30050端口=========================================== 使用PHPstudy 安装完成后可以在ssh工具中使用 xp 命令，来查看，面板状态，重启，关闭，修改面板密码，查看面板密码等。 另外如果你是专业人员，可以在ssh工具中输入 phpstudy 也会显示phpstudy常用 的命令 Ref 1 Ref 2 Ref 3 访问所配置的域名 需要在所使用电脑，例如windows(C:\\Windows\\System32\\drivers\\etc\\hosts)中添加12#ip 域名xxx.xx.xxx.xx www.xxx.com 内网穿透花生壳 安装花生壳 Ubuntu版安装命令： 12wget &quot;https://down.oray.com/hsk/linux/phddns_5.2.0_amd64.deb&quot; -O phddns_5.2.0_amd64.debsudo dpkg -i phddns_5.2.0_amd64.deb 安装成功 1234567+--------------------------------------------------+| Oray PeanutHull Linux 5.2.0 |+--------------------------------------------------+| SN: xxxxxxxxxxxx Default password: admin |+--------------------------------------------------+| Remote Management Address http://b.oray.com |+--------------------------------------------------+ 功能 1phddns start（启动）| status（状态）| stop（停止）|restart（重启）| reset（重置）|enable（开机自启动）|disable（关闭开机自启动）|version（版本）** 浏览器访问http://b.oray.com ，输入花生壳Linux 5.0在安装时产生SN码与默认登录密码admin登录。 参考：11630.html 107834282 cpolar 文档","tags":[{"name":"Linux学习","slug":"Linux学习","permalink":"https://eastsheng.github.io/tags/Linux%E5%AD%A6%E4%B9%A0/"},{"name":"Ubuntu手动搭建Web服务器","slug":"Ubuntu手动搭建Web服务器","permalink":"https://eastsheng.github.io/tags/Ubuntu%E6%89%8B%E5%8A%A8%E6%90%AD%E5%BB%BAWeb%E6%9C%8D%E5%8A%A1%E5%99%A8/"}],"categories":[{"name":"Linux学习","slug":"Linux学习","permalink":"https://eastsheng.github.io/categories/Linux%E5%AD%A6%E4%B9%A0/"}]},{"title":"论文笔记2022-秋","date":"2022-05-31T16:00:00.000Z","path":"wiki/2022/06/01/notes/PaperReadNote202206/","text":"[toc] Paper Notes 20222022-12English phrases Lecithin [生化] 卵磷脂；蛋黄素 Free radical [物化] 自由基；[物化] 游离基 Polymerization 聚合；[高分子] 聚合作用 Intriguingly, adv. 有趣地；有魅力地 steric hindrance 位阻 prevent the blockage of oil and gas pipelines 防止油气管道堵塞 prolong v. 拉长，拖长（感觉或活动）；&lt;罕&gt;延长 posed a great threat 构成了巨大的威胁 environmental hazards 环境公害 the injection of chemical additives is supposed to be the most promising and effective method to solve this problem acutely adv. 剧烈地，尖锐地 glycol ether compounds 乙二醇醚类化合物 joint inhibitory effect 联合抑制效应 Periodic boundary conditions were imposed in all three directions of the simulation box. rebound effect 反弹效应 further in-depth simulation analysis is carried out to reveal the internal mechanism sustained growth 持续增长 In terms of the number of cages Fig. 4(a) was amplified in the time interval of0e50 ns the environmental condition is conducive to the formation and stable survival of these cages. is conducive to 有利于 partial extinction n. 灭绝，消亡；（债务的）偿清；消光 skeleton n. 骨骼，骨架； takes shape the first stable 512 cage takes shape at 22 ns, accelerate the follow-up formation of new methane hydrate clathrates 加快后续形成新的甲烷水合物包合物 thus paving the way for the rapid formation of large cages later. 从而为后来快速形成大型网箱铺平了道路。 serves as the nucleus for subsequent hydrate growth 作为后续水合物生长的核心 it can be concluded that 可以断定的是…… For clarity 为清楚起见 in the vicinity of PVP-A 在PVP-A附近 dwindle v. （逐渐）减少，变小；使缩小，使减少 stochastic motion 随机运动 instantaneous decrease adj. 瞬间发生的，瞬间完成的 Neither high nor low temperature is conducive to continuous growth of hydrates 高温和低温都不利于水合物的持续生长 neither too high nor too low MPD concentrations are favorable for the growth of sH hydrate MPD浓度过高或过低均不利于sH水合物的生长 ice-like non-stoichiometric crystalline compounds adj. 化学计量的；化学计算的 Different from sI and sII hydrates 不同于sI和sII水合物 To achieve this target, Of all the guests explored 在所有的客人中 isomer n. [化学] 同分异构物；[核] 同质异能素 an understanding of the growth mechanism of sH hydrate is of great importance during the entire simulation 判定水合物分解的时间 由于分子动力学模拟初始分布条件等不同，可能水合物分解的时间也不同，因此可采用角序参数达到0.8所需时间作为参考时间： 水分子力场 水分子力场分为精细化力场，原子力场和粗粒化力场三种。 水分子的精细化力场指的是力场体系中的位点数多于水分子中的原子数，即大于3，这样可以更加细致的描述水分子间的相互作用，比如存在质荷电荷分离的情况。还有一个原因就是水分子存在氢键，为了更好的描述水分子的氢键，往往引入虚拟的点电荷。 原子力场指的是对水分子的描述为原子级别，如果三个位点的话则为全原子力场，若将三个位点看作一个点则为联合原子力场。 粗粒化力场则是将数个水分子看作一个点，是更为简化的模型，常用于粗粒化模拟中。 对水分子的抽象化越高，则计算速度越快，但对于细节的描述就越少，因此二者之间的平衡需要模拟者自己衡量。 天然气水合物稳定性 空的水笼子，可以看作为一种特殊的冰，一般不稳定，客体分子的作用之一可以分子之间范德华作用力稳定水笼子； sI结构天然气水合物更稳定，因此自然界以sI型水合物为主； 甲烷的在水中的溶解度不高； 甲烷水合物的形成需要三个条件，即低温、高压和充足的甲烷气源，天然气管道天然的满足这三个条件，因此甲烷水合物在天然气管道中极易形成。 储能 天然气水合物约为传统化石能源的2倍 1m^3的天然气水合物可以分解为标准压力室温下164m^3的天然气和0.8m³的液态水，储能密度非常高，可以用于储能和输运。 水合物抑制剂探索 乙醇、氯化钠，在高压条件下氯化钠的抑制效果优于乙醇； 草酸对天然气水合物分解有中度抑制作用，而丁二酸和天冬氨酸对天然气水合物分解有促进作用； 甲醇的存在对水合物的分解速率有促进的影响 氨基酸对甲烷水合物形成均有抑制作用 水合物助剂 热力学助剂：热力学助剂主要是通过改变水合物的相图来影响水合物的稳定性，可以让水合物在温度更高或压强更低的条件下存在，或者在温度更低或者压强更高的情况下能够分解； 动力学助剂： 防聚剂： 范德华与Lennard Jones 范德华力是一种分子间弱作用力，包括色散力、诱导力、取向力 色散力（dispersion force 也称“伦敦力”）所有分子或原子间都存在。是分子的瞬时偶极间的作用力，即由于电子的运动，瞬间电子的位置对原子核是不对称的，也就是说正电荷重心和负电荷重心发生瞬时的不重合，从而产生瞬时偶极。 诱导力（induction force）在极性分子和非极性分子之间以及极性分子和极性分子之间都存在诱导力。由于极性分子偶极所产生的电场对非极性分子发生影响，使非极性分子电子云变形(即电子云被吸向极性分子偶极的正电的一极)，结果使非极性分子的电子云与原子核发生相对位移，本来非极性分子中的正、负电荷重心是重合的，相对位移后就不再重合，使非极性分子产生了偶极。这种电荷重心的相对位移叫做“变形”，因变形而产生的偶极，叫做诱导偶极，以区别于极性分子中原有的固有偶极。诱导偶极和固有偶极就相互吸引，这种由于诱导偶极而产生的作用力，叫做诱导力。在极性分子和极性分子之间，除了取向力外，由于极性分子的相互影响，每个分子也会发生变形，产生诱导偶极。其结果使分子的偶极距增大，既具有取向力又具有诱导力。在阳离子和阴离子之间也会出现诱导力。 取向力（orientation force 也称dipole-dipole force）取向力发生在极性分子与极性分子之间。由于极性分子的电性分布不均匀，一端带正电，一端带负电，形成偶极。因此，当两个极性分子相互接近时，由于它们偶极的同极相斥，异极相吸，两个分子必将发生相对转动。这种偶极子的互相转动，就使偶极子的相反的极相对，叫做“取向”。这时由于相反的极相距较近，同极相距较远，结果引力大于斥力，两个分子靠近，当接近到一定距离之后，斥力与引力达到相对平衡。这种由于极性分子的取向而产生的分子间的作用力，叫做取向力。 极性分子与极性分子之间，取向力、诱导力、色散力都存在；极性分子与非极性分子之间，则存在诱导力和色散力；非极性分子与非极性分子之间，则只存在色散力。这三种类型的力的比例大小，决定于相互作用分子的极性和变形性。极性越大，取向力的作用越重要；变形性越大，色散力就越重要；诱导力则与这两种因素都有关。但对大多数分子来说，色散力是主要的。实验证明，对大多数分子来说，色散力是主要的；只有偶极矩很大的分子(如水)，取向力才是主要的；而诱导力通常是很小的。极化率α反映分子中的电子云是否容易变形。虽然范德华力只有0.4—4.0kJ&#x2F;mol，但是在大量大分子间的相互作用则会变得十分稳固。比如C—H 在苯中范德华力有7 kJ&#x2F;mol，而在溶菌酶和糖结合底物范德华力却有60kJ&#x2F;mol，范德华力具有加和性。 范德华力定义的模糊是有历史原因的，因为它本身不是一个从底层理论推导出的力，而是从实验中发现归纳出的现象。 限定了只有中性分子（或基团）间的相互作用才能叫范德华力（离子-离子、离子-中性分子被排除在外） 按照IUPAC定义，氢键是否是范德华力要看它是否是中性分子间的作用。如果是在气相水分子间的氢键的情况，此时它是一种偶极 - 偶极相互作用，符合范德华力的定义 。 范德华力最早被认为是由London等人研究稀有气体相互作用能时发现的（亦即现在所说的伦敦色散力），源自偶极间静电作用的二阶微扰（second-order perturbation theory applied to the electrostatic interaction between two dipoles） 当原子间距离近时则会有强烈排斥作用，当然这不包含在伦敦力中，属于Pauli交换互斥力，两种力加和得到的就是我们所熟知的Lennard-Jones potential 随着科学的发展，后来人们对分子间作用力认识的不断加深，现在看来London力只算是范德华力的一种，亦即色散力。 其中前一项为L-J势，是用来模拟两个电中性的分子或原子间相互作用势能的一个比较简单的数学模型。L-J势从物理意义上讲，12次幂项可认为是对应于两体在近距离时以互相排斥为主的作用（交换互斥作用），6次幂项对应两体在远距离以互相吸引为主的作用（色散吸引），而此六次方项也的确可以使用以电子-原子核的电偶极矩摄动展开得到。后一项为静电作用项，原子电荷信息可以使用量子化学计算在RESP拟合得到，或者使用更粗略但快速的AM1-BCC电荷。 2022-11English phrases Akin to the common crystal formation processes Akin adj. 相似的，类似的；有血缘关系的 embryo n. 胚，胚胎；萌芽期，初期；萌芽状态的事物，发展初期的事物 adj. 胚胎的；初期的 incipient adj. 初期的；初始的；起初的；发端的 stochastically adv. 偶估地；推测地；随机地 In this scenario 在这种情况下 simultaneous existence 共存 was proportional to 与。。。。成正比 was inversely proportional to 与。。。。成反比 different uptake rates 不同的吸收率 More fundamentally, 更重要的是, Even though significant knowledge has been gained over thepast several years, the present understanding of the clathrate hydrate formation mechanism still represents just the tip of the iceberg 目前对笼状水合物形成机制的了解还只是冰山一角 It is worthwhile noting that From this point of view As such, 同样地；本身；就其本身而论 In terms of occupancy of cages, 在笼子的占用率方面， a stochastic event 一个随机事件 surpass this challenge 超越这个挑战 plugging of the oil and gas flowlines 油气管道的堵塞 mitigate hydrate interparticle interactions 减少水合物颗粒间相互作用 天然气水合物开采方法： 降压法、热激法、注入化学剂法 参考：TOUGH+HYDRATE水合物模型参数敏感性分析 天然气水合物特点：- 参考：doi:10.31035&#x2F;cg2022017- Natural gas hydrates (NGHs) are crystalline compounds- stable at low temperature and high pressure conditions （T&lt;10℃，P&gt;7MPa ）- 由5种基本的笼子构成三种水合物有结构- 天然气水合物广泛分布于多年冻土、陆坡和海区，还可能存在于油气生产过程中，被认为是一种潜在的能源资源; &gt; Clathrate hydrates of gas, known as gas hydrates, typically form when water and gas come into contact under low temperatures and high pressures. They are widely found in the Earth’s natural environments like oceanic sediments and permafrost, as well as man-made environments like inside oil and gas production flowlines.（Cryst. Growth Des. 2021, 21, 960−973）- 它们与压缩气体的能量密度大致相同- 天然气水合物的总有机碳含量几乎是所有其他已证实的化石燃料的两倍- gas hydrate formation might block offshore oilgas pipelines- As a major component of NGHs and a greenhouse gas, methane released from NGHs decomposition from submarine might exacerbate the greenhouse effect- 在开采过程中，水合物的二次生成可能会堵塞油井- 水合物结构的形成主要依赖于气体分子的尺寸和形状 &gt; Different clathrate hydrate crystal structures can be formed, mainly depending on the size and the shape of guest molecules that are enclosed in the cages. （Cryst. Growth Des. 2021, 21, 960−973）分子动力学在水合物的应用潜力 科学问题、促进科技 水合物开发、 水合物最初在海底沉积物中是在哪里形成的? 矿物影响（粘土、石英、碳酸钙）；矿物孔隙、孔隙尺寸、矿物成分的影响； 天然气水合物在孔隙空间中展现出两种类型： pore-filing occurrencegrain-displacing occurrence 为了防止开采中水合物的二次生成 use hydrate inhibitors in drilling fluid to prevent hydrate formation.The second is to add modified nanoparticles into drilling fluid, which can both prevent the invasion of drilling fluid into Natural Gas Hydrorates deposits and prevent hydrate formation 2022-10English phrases As another auxiliary tool 作为另一个辅助工具 it is time-consuming and demanding to 这既耗时又费力 amphiphilic adj. 两亲的，两亲性质的；两性分子团的 substantial studies 大量的研究 is still controversial 仍然是有争议的 seldom not often 不常；很少；难得 graft n. 枝接纤维 halve v. （使）减半；把……分成两半，对半分；均摊；（高尔夫）与对手以相同杆数打完（一穴或一场比赛）；半嵌接，槽舌接，合缺接（两块木料） feasible 可行的 infeasible 不可行的 retain v. 保持，保留 For the sake of clarity in describing the ﬁeld mapping process 为了清晰地描述字段映射过程 泊肃叶流动（Poiseuille flow） 泊肃叶和哈根的经验定律是G.G.斯托克斯于1845年建立的关于粘性流体运动基本理论的重要实验证明。现在流体力学中常把粘性流体在圆管道中的流动称为泊肃叶流动。 格子玻尔兹曼LBM模拟数字岩心建模概念 基于二维扫描电镜图像或三维CT 扫描图像，运用计算机图像处理技术，通过一定的算法完成数字岩心重构； 物理实验法： 是指利用实验仪器( 如高倍光学显微镜或X射线CT 扫描仪等) 对岩心样品拍摄或扫描以获取大量的岩心二维图片，然后通过建模程序或软件把二维图片叠加重构成三维数字岩心，主要包括序列切片成像法、激光扫描共聚焦显微镜法和X 射线CT 扫描法；数值重建法是以少量的二维薄片图像为基础，利用二维图片中包含的信息，通过随机模拟法或沉积岩的过程模拟法来重建三维数字岩心的方法。混合法 建模 三维数字重构数字岩心以及后续数值实验（仿真计算），需要如下几个步骤： 数据获取、图像导入——降噪滤波、图像处理——体&#x2F;面网格划分——模型导出、仿真计算Simpleware软件已能完美解决，它致力于为CAD、CAE以及3D打印领域提供世界领先的三维图像处理、分析以及建模和服务。 SDBS活性剂优点 Alkylbenzene sulfonates are inexpensive anionic surfactants j.petrol.2021.109856 The adsorption of surfactant molecules at the interface resulted in an increase in the hydrophilic surface area of the oil droplet.acs.energyfuels.8b03258 It is believed that the appropriate surfactant can change the hydrophilic properties of the crude oil&#x2F;water interface, causing a change of viscosity of the crude oil. acs.energyfuels.8b03258 chemical EOR has been widely used in oilfields with demonstrated high efficiency of oil displacement and low operational costs. improve sweep efficiency and oil displacement. Recent studies have reported various types of nanoparticles (NPs) for improving oil recovery either alone or in combination with surfactants. 2022-09English phrases in various burgeoning fields 在各种新兴领域 foam n. 泡沫，气泡；泡沫橡胶，海绵橡胶；泡沫剂，泡沫产品；唾液，汗沫 v. 起泡沫，有泡沫 endow 赋予 To compound the confusion, 更让人困惑的是， A number of experimental techniques have been invented to measure the absolute rate of phase change, such as evaporation and condensation rates, but there remain many technical problems imperative adj. 极重要的，必要的；命令的，强制的；祈使的 the distance between two adjacent crests 两个相邻波峰之间的距离 With the proposed analysis 根据提出的分析 For the first time 首次；第一次 On addressing the challenges, 在应对挑战时， It is well accepted that 人们普遍认为 For the sake of simplicity 为了简单起见 In recent times, 在当代 It is concluded that…… 结论是- mitigate its greenhouse effect 减轻温室效应 In the area of medicine 在医学领域 from a molecular point of view. divalent ions 二价离子 blending n. 混合；调配；混和物 adj. 混合的 v. 混合；协调（blend 的 ing 形式 nanochannel毛细力计算 Fuel 261 (2020) 116443 pore’s capillary pressure (Pc): $P_c &#x3D;\\frac {2\\sigma} w$, where interfacial tension $\\sigma$ &#x3D; 59.83 mN&#x2F;m, pore Width $w$&#x3D; 10.8614 nm, so, the $P_c$ &#x3D; 2*59.83&#x2F;10.8614 &#x3D; 11.017 MPa units are converted as follows: interface tension : mN&#x2F;m,width : nmthere, $\\frac {mN&#x2F;m} {nm} &#x3D;\\frac {mN} {m^2} 10^9 &#x3D;\\frac {MN} {m^2} 10^9*10^{-9} &#x3D;\\frac {MN} {m^2} &#x3D;MPa$MPa to kcal&#x2F;mol-Angstrom,1 kcal&#x2F;mol-Angstrom &#x3D; 6.9477×10−11 J&#x2F;m or N 123456789101112# MPa to kcal/mol-Angstromdef unitconvert(MPa): kmA2N = 6.9477e-11 area = 21*120 # Angstrom^2 area = area*1e-20 # m^2 MN = MPa*area N = MN*1e6 kmA = N/kmA2N print(kmA,&quot;kcal/mol-Angstrom&quot;) return MPa = 40unitconvert(MPa) 水合物Hydrates 根据水分子的排列Hydrates一般有三种结构 sI cubic structuresI cubic structuresH hexagonal structure 占据水笼子空腔的气体分子不能太大也不能太小，才能产生稳定的水合物 建模：甲烷水合物建模 Capillary number 毛细管数（Capillary number，Ca），亦称界面张力数，是一个无量纲量，最初由Taylor于1934年提出。毛细管数定义为流体粘性力和界面张力的比值。在流体力学中，常用毛细管数和两相粘度比来表征预测两相流体中分散相液滴的形变和破裂发生的程度和可能性。 Nanofluids flooding优点 Their small size allows them to be transported into formation pores not accessible by larger materials without being trapped. Their high surface energy and reactivity can change fluid and rock properties to improve oil displacement. Also, they can be modified to incorporate several functionalities. NPs with magnetic properties can benefit from application of an external electric or magnetic field for mobility control. TraPPE-UA力场怎么用？ 使用Moltemplate可以实现。 Monoatomic water模型怎么用？ 在凝聚态水的模拟中，有一种联合原子的mW模型可供选择。在这种模型中，一个水分子被简化成一个位点，水分子间的相互作用通过Stillinger－Weber势进行描述，势函数可表示为分子构型如图1(e)。Stillinger－Weber势包括一个两体作用和一个三体作用：两体作用类似于Lennard－Jones势，用于表现水分子的van der Waals作用；而三体作用与三个水分子位点的角度有关，可以表现水分子排列的方向性，从而模拟出氢键的四面体序。在LAMMPS中，多体势需要借助力场文件进行读入，因此，使用mW水模型前要编写一个mW.sw力场文件，文件内容如下。 1234# The parameters are in &quot;metal&quot; units: epsilon=eV; sigma=Angstroms; others=unitless## epsilon sigma a lambda gamma cos(theta) A B p q tolmW mW mW 0.2692 2.3925 1.8 23.15 1.2 -0.333313247568 7.049556277 0.6022245584 4.0 0.0 0.0 需要注意的是，在LAMMPS中调用.sw力场需指定单位制为metal单位制；并且由于该力场为多体势，pair_coeff命令不能再按照两体作用的方式指定原子类型，而是统一使用* *，然后按原子类型编号顺序依次对使用该力场的原子类型进行映射。mW模型由于只有短程作用，因此具有很高的计算效率，且由于该模型忽略了H原子的运动，使得模拟的积分步长也可大幅放宽。 使用Moltemplate可以实现。 页岩、页岩油、页岩气成分 页岩 有机质（主要是干酪根）、无机矿物（如石英、方解石、白云石、粘土等）有机质一般小于20 wt%, 而石英占到65% 页岩油 aliphatic hydrocarbons, aromatic hydrocarbons, resins, and asphaltenes主要是 aliphatic hydrocarbons, 短链 页岩油模拟中的一些细节或知识 纳米孔中页岩油气分子模拟流动的时候，在计算页岩油气温度的时候，不包括页岩油气流动的速度引起的温度。 参考：Molecular dynamics simulations of oil transport through inorganic nanopores in shale 页岩油中烷烃的密度峰值震荡宽度一般为0.4~0.5nm, 更像是烷烃的宽度而不是链长或者直径 参考：参考文献 一般链越短油水界面越宽。 计算下分子转向：$S(\\theta)&#x3D;\\frac 1 2*(3cos^2\\theta-1)$, 其中, $\\theta$为分子方向与z方向的角度。 分子转向为-1时说明其与界面是平行的，为1时代表其垂直于界面，为0时表明其是转向不明确。界面处分子转向平行于界面会导致界面厚度降低，而分子链越长分子转向就越平行于界面，所以一般链越短油水界面越宽。因此，小分子链的存在会导致界面宽度增加。 分子动力学怎么研究相变 Molecular dynamics of fluid phase change 当体系发生相变时, 相变材料的 Cp 也会发生突变. 因此, 分子动力学模拟的 Cp 发生变化可用来判断相变材料相变行为的发生. 怎么构建COF-1和COF-5 实验合成：SCIENCE18 Nov 2005Vol 310, Issue 5751pp. 1166-1170DOI: 10.1126&#x2F;science.1120411 一些COF结构 COF-1和COF-5的区别 A:COF-1, AB staking; B:COF-5, AA stacking 2022-08English phrases for climate change and carbon neutrality goals, carbon capture, utilization, and storage (CCUS) technology has worldwide received increasing attention. CO2-EOR is more efficient and environmentally friendly permanently adv. 永久地；（问题或困难）不断发生地，一直存在地 Based on MD-obtained results, we unveiled the pore-size effects on the replacement efficiency. unveil v. （首次）公开，揭示； piston 活塞 sterically 空间 sterical adj. 立体的，空间的，立体化学的steric adj. 位的（副词 sterically, 异体字 sterical）；（原子的）空间（排列）的 ster n. 灭菌，绝育；消毒器，杀菌器 ligand n. [化学]配体 LigParGen server are not amenable to many important solvents amenable adj. 有责任的：顺从的，服从的；有义务的；经得起检验的 zeolite 沸石 a host of unique physical properties a host of…… 许多，一大群；众多，大量 laminar nanopores 层状多孔 aforementioned adj. 上述的；前面提及的 the lack of general consensus 缺乏普遍共识 shrouds the understanding of various mechanisms shroud v. 覆盖，隐藏；隐瞒，保密；用布裹（尸体）n. 裹尸布，寿衣 we seek to understand these mechanisms in detail which further solidifies our claim that 这进一步巩固了我们的断言 a concomitant increase 相应增加 concomitan tadj. 相伴的；共存的；附随的 n. 伴随物 As discussed above 氢键 氢键是分子体系中重要的非共价结构力(本质上主要是静电)。 当一个氢原子有效地在重原子(氢键供体)和另一个重原子(氢键受体)之间共享时，它们就形成了氢键。 供体原子和受体原子都具有典型的电负性。 判断原子是否能形成氢键的一般经验法则是“氢键是FON”，即氢键与F、O和N原子结合可以被捐赠，F、O和N原子可以是受体(尽管也有例外)。 氢键的确定使用简单的几何标准:供体与受体的重原子距离，以及可选的供体-氢-受体角。 请注意，在自然界中，氢键的强度由距离和角度决定(与分子轨道的最佳重叠有关)。 然而，在大多数成对的附加力场中(如Amber, Charmm)，氢键相互作用只产生于非键项，因此它们的强度不依赖于角度。 一二三次采油 采油初期只能依靠各种自然能量，例如岩石膨胀、边水驱动、重力以及天然气膨胀等能量，所以通常被称为一次采油，此时采收率仅为5%~10%； 通过注水或注气补充地层能量来增加油层压力的采油方法称为二次采油，该阶段的原油采出程度可以达到 30%~40%； 通过注入流体或热量改变原油黏度，或改变原油与地层中其他介质之间的界面张力，替代油层中不连续和难以开采的原油的物理和化学方法称为三次采油。 2022-07English phrases laminar 层流 moist air 湿空气 capillary pressure 毛细管（血）压 only a fraction of the void space is occupied by the gas phase. 只有一小部分的空隙空间被气相所占据。 Oil extraction mechanism 采油机理 extraction n. 取出，提炼；血统 miscible adj. [化学] 易混合的；可溶混的；能混溶的 tight oil 页岩油; 致密油 In fact, the complicated interface of tight oil reservoirs results in a significant number of hydrocarbons confined in intricate microscale or nanoscale pores intricate adj. 错综复杂的；难理解的，难学会的 nevertheless, Nonetheless, adv. 然而，不过 adv. 然而，尽管如此 dead-end micro- and nanoscale channels are ubiquitous in nature 在自然界中，微型和纳米级通道是无处不在的 ubiquitous adj. 普遍存在的，无所不在的 dead-end pores 油藏盲端?死胡同孔？ a large amount of residual oil is still trapped in dead-end poresthe deadend nanoslit controversy arising from the experimental result and field test data it is disappointing in …令人失望的是…… condensation n. 冷凝 Based on this introduction 基于以上介绍 On the basis of the oil reservoir conditions 根据油层条件 In Section 4, the concluding remarks were summarized. rectangular grooves 矩形凹槽 To mimic the dynamic process of CO2 injection mimic v. 模仿，模拟; n. 善于模仿的人；会模拟的动物（或植物）; adj. 模拟的，演习的. As expected, 不出所料；正如预期的 adsorption affinity 吸附力 affinity n. 喜好，喜爱；类同，密切关系；亲近感，亲和；适应性，匹配度；（与血缘关系相对的）姻亲关系；亲和力，亲和性 as presented in Fig. 3(b). the main peaks 主峰 as shown in the inset image of Fig. 3(b) obvious fault appeared in the transition zone. fault n. 错误；责任，过错；缺点，故障；断层；发球失误 v. 挑剔，指责；发球失误；产生断层； However, contrary to expectations, 然而，与预期相反， CTAB was firmly adsorbed on the surface not only bring more mutual solubility to the CO2 and the oil phase, but also make a significant improvement in the extraction efficiency. mutual solubility 互溶性 It is noteworthy that 值得注意的是 a clockwise vortex 一个顺时针漩涡 The function eventually presented an oscillating shape,这个函数最终呈现出一个振荡的形状， It can be revealed that …… As a ubiquitous phenomenon in the process of CO2 flooding, ubiquitous adj. 普遍存在的，无所不在的 In the process of CO2 flooding, Steric hindrance [化学] 位阻，位阻现象 It was also pointed that a concave-type meniscus 凹型曲线 concave, adj. 凹的，凹面的meniscus, n. [解剖] 半月板；弯月面；新月形物a convex-type meniscusconvex, adj. 凸面的，凸出的；凸多边形的, n. 凸面，凸出部分 The study could help understand the fluidsolid interactions at the molecular level and be beneficial to more sustainable exploitation of oil. the potentials of mean force (PMFs) ref. 1: doi: 10.1016&#x2F;j.apsusc.2019.07.190 ref. 2: doi: https://doi.org/10.1021/jp709845u 界面形成能 (interface formation energy) 界面形成能，跟相互作用能有些不一样；常用于计算添加活性剂的油水界面 粗糙度怎么计算？ 原子受力与注入压力之间的关系![](https://raw.githubusercontent.com/eastsheng/PicGoImg/main/worknotes/2022/papernote202206.md/322381920239185.png &#x3D;855x) 研究驱油过程中，注入气体压力与气体分子所受力之间的关系。 $CO_2$驱油 $CO_2$-EOR对环境是有益的，可以安全的隔离$CO_2$; $CO_2$：可溶于原油改善原油移动性，强扩散 传统的 $CO_2$-EOR大多关注于 $CO_2$&#x2F;原油的混合态的形成和动用的改善。 $CO_2$混相驱采收率可达90% ~ 100% doi: 10.1016&#x2F;j.apsusc.2019.07.190 强化采油 提高石油采收率技术（Enhanced Oil Recovery，简称EOR）是指向油藏中注入驱油剂或调剖剂，改善油藏及油藏流体的物理化学特性、提高宏观波及效率和微观驱油效率的采油方法，统称为提高石油采收率技术，或称“强化采油技术”。 提高原油采收率也被称为三级采油（与一级采油和二级采油相反）。 据美国能源部称，EOR有三种主要技术：热注入，气体注入和化学品注入。 有时四级采收（quaternary recovery）术语被用于指更先进的，推测性的EOR技术。 使用EOR，可以提取30%至60%或更多的油藏里原本的石油，而使用一级的和二级的采收率为20%至40%。 驱油方法 化学驱（Chemical flooding）气驱（Gas flooding）热力采油（Thermal recovery）微生物采油（Microbial Enhanced Oil Recovery，简称MEOR） 多孔介质内纳米流体驱替实验与微观机理 达西定律（Darcy’s law） 描述饱和土中水的渗流速度与水力坡降之间的线性关系的规律，又称线性渗流定律；是流体渗流的基本定律； 适用于单相和多相渗流； 适用于松散砂柱、胶结砂岩及其它多孔介质中流体渗流； 1852-1855年，达西进行了水通过饱和砂的实验研究，发现了渗流量$Q$与上下游水头差$(h2- h1)$和垂直于水流方向的截面积$A$成正比，而与渗流长度$L$成反比： $Q&#x3D;\\frac {KA(h_2-h_1)} L$- 式中$Q$为单位时间渗流量（$cm^3&#x2F;s$）， $A$为水流方向的截面积， $h$为总水头损失， $L$为渗流路径长度， $I&#x3D;h&#x2F;L$为水力坡度， $K$为渗透系数，只与多孔介质结构有关，而与流体性质无关，称其为多孔介质的渗透率。单位：$D$（达西）、$mD, 1D&#x3D;1000mD$ （毫达西） $Q&#x3D;\\frac {KA \\bigtriangleup p} {\\mu L}$ $\\bigtriangleup p$：多孔介质两端压力差（$MPa$），$\\mu$：流体粘度（$mPa.s(cP)$） 水头（能量单位）：任意断面处单位重量水的能量，等于比能(单位质量水的能量)除以重力加速度。含位置水头、压力水头和速度水头。单位为$m$ 2022-06Nice phrases in-situ thermal processes suffer from different issues such as an environmental footprint, expensive production, and heat loss to neighboring reservoir layers bubbling point：泡点 就是从液相中分离出第一批气泡的温度的临界点。 在温度一定的情况下，液相中分离出的第一批气泡的压力，或是在压力一定的情况下，液相中分离出的第一批气泡的温度。液体混合物处于某压力下开始沸腾的温度，称为在这压力下的泡点。 Bubble-Point Curve Phase diagram Bubble Point Curve: 分离纯液体(油)相与两相(天然气和石油)区域的曲线。这意味着在给定的温度下，当压力下降并低于泡点曲线时，气体将从液相释放到两相区域。 Dew Point Curve: 纯气相与两相区分离的曲线。它是压力和温度的连接点，在那里第一个液滴从气相中形成。 Critical Point: 气泡点曲线与露点曲线相交的相位包络线上的点。在给定压力和温度下，气体的性质与液体的性质是相同的。临界点处的压力和温度分别称为临界压力和临界温度。 Cricondentherm (临界凝结温度): 液体和蒸汽可以共存的最高温度。这意味着当温度大于Cricondentherm时，无论压力如何，混合物都是气体。 Cricondenbar(临界凝析压力): 液体和蒸汽可以共存的最高压力。 Clearly, the natural gas phase envelope can be very different depending on its source.","tags":[{"name":"Paper Notes","slug":"Paper-Notes","permalink":"https://eastsheng.github.io/tags/Paper-Notes/"}],"categories":[{"name":"学习笔记","slug":"学习笔记","permalink":"https://eastsheng.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"},{"name":"论文笔记","slug":"学习笔记/论文笔记","permalink":"https://eastsheng.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E8%AE%BA%E6%96%87%E7%AC%94%E8%AE%B0/"},{"name":"2022","slug":"学习笔记/论文笔记/2022","permalink":"https://eastsheng.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E8%AE%BA%E6%96%87%E7%AC%94%E8%AE%B0/2022/"}]},{"title":"C&C++笔记-02","date":"2022-04-03T10:11:28.000Z","path":"wiki/2022/04/03/codes/C&C++/C&C++笔记-02/","text":"[toc] 函数 C 源程序必须有且只有一个主函数main(); 程序一定是从主函数开始，最后在主函数中结束整个程序的运行; 一个源文件由一个或多个函数组成; 除去主函数之外，所有函数都是平行且互相独立的，即在一个函数内只能调用其他函数，不能再定义一个函数; 一个函数可以调用其他函数或其本身，但任何函数均不可调用主函数. 声明一个函数： 1234int function(int,char); //int:声明一个整数型函数，其返回值是一个整数//函数有两个形参，整数值变量在前，字符值变量在后//函数声明时，只需要说明形参的类型和个数，不必写变量名 调用函数： 123456function(10,&#x27;A&#x27;);//程序调用函数时，代入函数参数表的参数值称为实际参数/*等效于：int i_p=10； //整数10 赋给被调函数的第1 个形参char ch_a=&#x27;A&#x27;； //字母A 赋给被调函数的第2 个形参*/ for example: 1234567891011121314151617181920212223242526#include&lt;iostream&gt;using namespace std;int readnum();//声明一个整数型函数，无参数void sqrnum(int);//声明一个无返回值的函数，形参是一个整数变量int main(void)&#123; int t; while (t = readnum())//调用函数 sqrnum(t);//调用函数 return(0);&#125;int readnum()//定义函数&#123; int t; cout &lt;&lt; &quot;input a num:\\n&quot;; cin &gt;&gt; t; return(t);//return 返回变量的类型必须与函数类型相符&#125;//如果函数无需返回，则函数定义时应说明为“void”，意指空类型void sqrnum(int num)//定义函数 &#123; cout &lt;&lt; &quot;sqr(&quot; &lt;&lt; num &lt;&lt; &quot;)=&quot; &lt;&lt; num * num &lt;&lt; &quot;\\n&quot;;&#125; 变量类型强制转换123//(类型说明符)(表达式);(float)a //把a 转换为实型变量(int)(x+y) //把x+y的结果转换为整型 它不改变在数据说明时对该变量定义的类型!(临时性转换) 指针 1）指针是变量，存储着它所指向的变量的地址； 2）既然指针变量需要存储空间，那么它必定需要声明。 例如： 123456int i_a,i_b;//整数变量int *i_p;//整数型指针i_p=&amp;i_a;//把i_a的地址赋值给指针i_p *i_p=10;//把10赋值给i_ai_p=&amp;i_b;//把i_b的地址赋值给指针i_p *i_p=2;//把20赋值给i_b 指针是一个地址变量，可以存储某个变量的内存地址，通过获取该变量的地址，让指针指向该变量，从而可以访问（读写）该变量的值。 让指针取得一个数组的地址： 12int array[N],*i_p;i_p=array; //array即是数组的地址，与上述的&amp;i_b相似 指针变量加上或减去一个整数i的意义是把指针指向的当前位置（指向某数组元素）向前或向后跨过i个位置。 123456i_p+=i;i_p-=i;i_p++;++i_p;i_p--;--i_p; 指针变量的加减运算只能对数组指针变量进行，对指向其他类型变量的指针变量做加减运算是毫无意义的。 并且，由于数组中元素类型不同（int&#x2F;char&#x2F;float），指针每加1，表示向后移动1个元素位置，表示指针变量指向下一个数据元素的首地址，而不是简单的指针变量+1； 例如： 注意： 不要使用没有赋值的指针。 指针也是变量，它的值（存储内容）是其指向的对象（或数据变量、常量和函数）的地址。 指针可以指向内存中的万物，但我们未必能操作万物 指针类型：","tags":[{"name":"C&C++","slug":"C-C","permalink":"https://eastsheng.github.io/tags/C-C/"},{"name":"C&C++初级","slug":"C-C-初级","permalink":"https://eastsheng.github.io/tags/C-C-%E5%88%9D%E7%BA%A7/"}],"categories":[{"name":"程序学习","slug":"程序学习","permalink":"https://eastsheng.github.io/categories/%E7%A8%8B%E5%BA%8F%E5%AD%A6%E4%B9%A0/"},{"name":"C&C++","slug":"程序学习/C-C","permalink":"https://eastsheng.github.io/categories/%E7%A8%8B%E5%BA%8F%E5%AD%A6%E4%B9%A0/C-C/"}]},{"title":"日常笔记2022","date":"2022-04-02T10:11:28.000Z","path":"wiki/2022/04/02/notes/DailyNotes2022/","text":"[toc] Office路径 Office默认安装在C盘；安装前把C盘Office的安装路径指向D盘，然后再安装Office就可以了12mklink /J &quot;C:\\Program Files\\Microsoft Office&quot; &quot;D:\\Program Files\\Microsoft Office&quot;mklink /J &quot;C:\\Program Files\\Microsoft Office 15&quot; &quot;D:\\Program Files\\Microsoft Office 15&quot;","tags":[{"name":"Daily Notes","slug":"Daily-Notes","permalink":"https://eastsheng.github.io/tags/Daily-Notes/"}],"categories":[{"name":"学习笔记","slug":"学习笔记","permalink":"https://eastsheng.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"},{"name":"杂记","slug":"学习笔记/杂记","permalink":"https://eastsheng.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E6%9D%82%E8%AE%B0/"}]},{"title":"C&C++笔记-01","date":"2022-04-02T10:11:28.000Z","path":"wiki/2022/04/02/codes/C&C++/C&C++笔记-01/","text":"[toc] 推荐书籍Visual Studio 2021运行C++，返回值被忽略:“scanf” 方法1：把scanf改成scanf_s,如果又报其他错误的话，使用方法2； 方法2：右键项目文件 —— 属性 —— 配置属性 ——C/C++——常规——SDL检查改为否即可 参考https://blog.csdn.net/mxy3538/article/details/113181661 清除缓冲区1fflush(stdin);//清除缓冲区，不然会把前面的当成输入 fflush(stdin)用于清空缓区，fflush（stdout）强制输出当前缓冲区中的内容。 但是自从VS2015之后，fflush(stdin)就不能用了（使用时不会报错，但是没有清空缓冲区的效果）。 printf 函数调用的一般形式 printf 函数是一个标准库函数，它的函数原型在头文件“stdio.h”中，调用的一般形式如下:12printf(&quot;格式控制&quot;，输出表列);printf(&quot;%d&quot;,x) 格式说明： 格 式 符 数据类型说明符 d 以带符号的十进制形式输出整数（正数不输出符号） o 以八进制无符号形式输出整数（不输出前缀0） x 以十六进制无符号形式输出整数（不输出前缀0x） u 以十进制形式输出无符号整数 c 输出单个字符 s 输出字符串 p 指针 f 以小数形式输出单、双精度数，隐含输出6 位小数 e 以标准指数形式输出单、双精度数，数字部分小数位数为6 位 g 选用%f 或%e 格式中输出宽度较短的一种格式，不输出无意义的 0 cin 和cout 格式 cin 和cout 语句最大的好处是程序可以自动区分变量类型 cin 函数和cout 函数的头部函数是：iostream12345#include&lt;iostream&gt;using namespace std; //命名空间cin&gt;&gt;变量名;cout&lt;&lt;变量名1&lt;&lt;变量名2&lt;&lt;&quot;字符&quot;&lt;&lt;endl； //endl为换行符 cout 执行输出操作后，数据并非立刻传到输出设备，而是先进入一个缓冲区，等时机适当时（如设备空闲）再由缓冲区传入，而printf 函数是直接打印到屏幕上 C 语言的输出&#x2F;输入语句（printf、scanf）不要和C++的输出&#x2F;输入语句（cout、cin）混合使用 运算符汇总 1）运算符“%”是求余（或称模运算）。 2）位操作运算符是按二进制位进行运算的。 ① 位与“&amp;”。② 位或“|”。③ 位非“～”。④ 位异或“^”。⑤ 左移“&lt;&lt;”。⑥ 右移“&gt;&gt;”。 3）赋值运算符用于赋值运算。 ① 简单赋值“&#x3D;”。② 复合算术赋值（+&#x3D;，-&#x3D;，*&#x3D;，&#x2F;&#x3D;，%&#x3D;）。③ 复合位运算赋值（&amp;&#x3D;，|&#x3D;，^&#x3D;，&gt;&gt;&#x3D;，&lt;&lt;&#x3D;）。 4）条件运算符：这是一个三目运算符，用于条件求值（？：）。 5）逗号运算符：用于把若干表达式组合成一个表达式（，）。 6）指针运算符：用于取内容（*）和取地址（&amp;）两种运算。 7）求字节数运算符：用于计算数据类型所占的字节数（sizeof）。 8）特殊运算符： ① 括号“（）”。② 数组下标“[]”。③ 结构成员（→和.）。 switch语句 并行分支判断语句switch()的一般形式为：12345678910111213141516switch(表达式K)&#123; case 常量表达式k1://常量表达式ki 是常数或ASCII 码 语句段1; break; case 常量表达式k2: 语句段2; break; . . . case 常量表达式kn: 语句段n; break; default : 语句段n+1;//default 语句可以缺省，即匹配失败后，程序直接退出switch 语句。&#125; C 语言控制语句 C 语言常量与宏 C 程序设计中一个重要的原则是，所有在程序中使用的常量都应用宏define在头部文件说明， 这样，一旦常量的值需要改变，则仅仅是头部定义处需要修改，而与程序中引用该常量的语句无关 例如：1234567891011121314151617#define AMOUNT 10 //宏定义人数 //数组的长度一定要大于或等于要存放的变量数目#define MINIMUM 20 //宏定义年龄下限#include&lt;stdio.h&gt;#include&lt;iostream&gt;using namespace std;int main()&#123; int x = 0; int age[AMOUNT] = &#123; 19,18,19,20,21,18,20,20,19,20&#125;; for (int i = 0; i &lt; AMOUNT; i++) &#123; if (age[i] &gt;= MINIMUM) x++; &#125; cout &lt;&lt; &quot;x=&quot; &lt;&lt; x &lt;&lt; endl; return(0);&#125; 字符串操作","tags":[{"name":"C&C++","slug":"C-C","permalink":"https://eastsheng.github.io/tags/C-C/"},{"name":"C&C++初级","slug":"C-C-初级","permalink":"https://eastsheng.github.io/tags/C-C-%E5%88%9D%E7%BA%A7/"}],"categories":[{"name":"程序学习","slug":"程序学习","permalink":"https://eastsheng.github.io/categories/%E7%A8%8B%E5%BA%8F%E5%AD%A6%E4%B9%A0/"},{"name":"C&C++","slug":"程序学习/C-C","permalink":"https://eastsheng.github.io/categories/%E7%A8%8B%E5%BA%8F%E5%AD%A6%E4%B9%A0/C-C/"}]},{"title":"FLUENT 笔记-01","date":"2022-04-02T10:11:28.000Z","path":"wiki/2022/04/02/softwares/fluent/Fluent_笔记/","text":"[toc] FLUENT 入门 学习Fluent 几何建模（Design Modeler、SolidWorks、） 前处理：绘制网格（Gamit、ICEM、ANSYS MESH） 仿真计算：仿真计算（Fluent） 后处理：处理结果（Fluent、Tecplot、CFDpost） 几何建模 add material是添加材料,建立的模型合并到已建立的模型上组成一体, add frozen是冻结体作为单独的几何体存在 网格 结构化网格 非结构化网格 边界条件设置 Fluent边界条件湍流参数设置详解 ANSYS Fluent 边界条件（二）之outflow自由出口 热-流-固耦合关键","tags":[{"name":"FLUENT","slug":"FLUENT","permalink":"https://eastsheng.github.io/tags/FLUENT/"}],"categories":[{"name":"软件学习","slug":"软件学习","permalink":"https://eastsheng.github.io/categories/%E8%BD%AF%E4%BB%B6%E5%AD%A6%E4%B9%A0/"},{"name":"FLUENT","slug":"软件学习/FLUENT","permalink":"https://eastsheng.github.io/categories/%E8%BD%AF%E4%BB%B6%E5%AD%A6%E4%B9%A0/FLUENT/"}]},{"title":"LAMMPS 小技巧","date":"2022-03-19T16:58:28.000Z","path":"wiki/2022/03/20/softwares/lammps/someSkills/","text":"PyLAT用法 PyLAT 1python /home/chends/softwares/PyLAT/PyLAT.py -g -d --mol Saturate --mol Aromatic --mol Resin --mol Asphaltene --mol water --nummol 66 --nummol 16 --nummol 20 --nummol 3 --nummol 3000 -p ./ -v 2 log_interface.lammps 1_system_out_498.data traj_out_1.lammpstrj -f output.json Units 力单位转换 123451 kJ/mol-Angstrom = 1.66053892103219×10^−11 J/m1 kcal/mol-Angstrom = 1.66053892103219/0.239006 ×10^−11 J/m = 6.947687×10^−11 N1 kcal/mol-Angstrom = 6.947687×10^−11 N1 N = 1.4393279374848x10^10 kcal/mol-Angstrom LAMMPS PYTHON安装12make mpi mode=shlibmake install-python 添加环境变量1234sudo vim ~/.bashrcexport PYTHONPATH=$PYTHONPATH:/home/.../lammps-3Mar20/pythonexport LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/home/.../lammps-3Mar20/srcsource ~/.bashrc 测试12from lammps import lammpslmp=lammps() 参考 https://zhuanlan.zhihu.com/p/344803376","tags":[{"name":"Lammps","slug":"Lammps","permalink":"https://eastsheng.github.io/tags/Lammps/"},{"name":"LAMMPS 小技巧","slug":"LAMMPS-小技巧","permalink":"https://eastsheng.github.io/tags/LAMMPS-%E5%B0%8F%E6%8A%80%E5%B7%A7/"}],"categories":[{"name":"软件学习","slug":"软件学习","permalink":"https://eastsheng.github.io/categories/%E8%BD%AF%E4%BB%B6%E5%AD%A6%E4%B9%A0/"},{"name":"Lammps","slug":"软件学习/Lammps","permalink":"https://eastsheng.github.io/categories/%E8%BD%AF%E4%BB%B6%E5%AD%A6%E4%B9%A0/Lammps/"}]},{"title":"Python Anaconda","date":"2022-03-14T02:02:28.000Z","path":"wiki/2022/03/14/codes/python/Anaconda/","text":"[toc] CondaLinux Anconda安装 Anaconda官网下载或使用wget下显 1234mkdir /Anaconda;cd /Anaconda;wget https://repo.continuum.io/archive/Anaconda3-5.3.1-Linux-x86_64.shbash Anaconda3-5.3.1-Linux-x86_64.sh #安装 记得在安装的时候可以修改安装路径： 自动添加环境变量yes 是否安装VScode? no 检查安装是否成功 1conda --version Linux Anconda 卸载 直接删除文件夹名 1rm -rf anaconda3 清理环境变量 1sudo vim ~/.bashrc#打开后删除anaconda的环境变量 或者使用命令 1234cd /usr/local/cuda/binsudo ./uninstall_cuda_x.x.pl #或sudo ./cuda-uninstaller Anconda 常用命令123456789101112conda activate #启动conda deactivate #关闭#创建python=3.7版本的环境，取名叫py37conda create -n py37 python=3.7 #删除python3.7环境conda remove -n py37 --all#激活py37环境conda activate py37#退出环境conda deactivate#查看已经安装的python环境conda info --envs 取消&#x2F;开启，默认启动base环境12conda config --set auto_activate_base false #取消conda config --set auto_activate_base true #开启","tags":[{"name":"Python","slug":"Python","permalink":"https://eastsheng.github.io/tags/Python/"},{"name":"Anaconda","slug":"Anaconda","permalink":"https://eastsheng.github.io/tags/Anaconda/"}],"categories":[{"name":"程序学习","slug":"程序学习","permalink":"https://eastsheng.github.io/categories/%E7%A8%8B%E5%BA%8F%E5%AD%A6%E4%B9%A0/"},{"name":"Python","slug":"程序学习/Python","permalink":"https://eastsheng.github.io/categories/%E7%A8%8B%E5%BA%8F%E5%AD%A6%E4%B9%A0/Python/"}]},{"title":"C&C++初级","date":"2022-03-09T10:11:28.000Z","path":"wiki/2022/03/09/codes/C&C++/C&C++笔记-00/","text":"[toc] 推荐书籍C 《C程序设计语言（第二版.新版）》 《明解C语言》柴田望洋编著 《C程序设计》（第三版）谭浩强 C++ 《C++语言程序设计教程习题解答与实验指导》杨进才 《Accelerated C++中文版》Andrew Koenig ,中国电力出版社 《C++Primer (3RD)中文版》 ,中国电力《Essential C++中文版》 ,华中科技 《Effective C++中文版》 ,华中科技 《More Effective C++中文版》 ,中国电力5. 《Exceptional C++中文版》 ,中国电力 《More Exceptional C++中文版》 ,华中科技 推荐网站 C语言中文网 菜鸟教程 中国大学慕课 VSCode配置C&amp;C++环境 http://c.biancheng.net/view/8077.html https://zhuanlan.zhihu.com/p/87864677 C语言库函数速查手册","tags":[{"name":"C&C++","slug":"C-C","permalink":"https://eastsheng.github.io/tags/C-C/"},{"name":"C&C++初级","slug":"C-C-初级","permalink":"https://eastsheng.github.io/tags/C-C-%E5%88%9D%E7%BA%A7/"}],"categories":[{"name":"程序学习","slug":"程序学习","permalink":"https://eastsheng.github.io/categories/%E7%A8%8B%E5%BA%8F%E5%AD%A6%E4%B9%A0/"},{"name":"C&C++","slug":"程序学习/C-C","permalink":"https://eastsheng.github.io/categories/%E7%A8%8B%E5%BA%8F%E5%AD%A6%E4%B9%A0/C-C/"}]},{"title":"Git—Command","date":"2022-03-08T15:56:48.000Z","path":"wiki/2022/03/08/git/Git_command/","text":"[toc] Git Command提交123456git add filepath #添加某个文件到暂存区git add . #添加所有文件到暂存区git checkout -- filename #撤销工作区改动git reset HEAD filename #清空暂存区git commit -m &quot;评论内容&quot; #提交git push origin main #push 分支12345git branch 分支名 #创建分支git checkout 分支名 #切换分支git checkout -b 分支名 #创建@切换分支git branch -d 分支名 #删除分支 合并123git merge 分支名/节点哈希值git rebase 分支名/节点哈希值git cherry-pick 节点哈希值 远程123456git clone 仓库地址 #克隆下载git pull 远程分支名 #拉取下载 其实pull的本质就是fetch+mergegit pull --rebase 远程分支名 #另外pull命令也可以通过rebase进行合并git fetch 远程仓库地址/分支名 #它会将远程新增加的节点以及引用(分支/HEAD)的状态下载到本地git push 远程分支名 #将本地提交推送至远程git clone -b gh-pages --single-branch https://github.com/eastsheng/MyWikiSite.git wwwroot #clone单个分支到wwwroot中，-b后为分支名 参考：https://mp.weixin.qq.com/s/YBpQ3RBuPCqRSTa4-lks8g git pull, Timed out: Failed to connect to github.com port 443 after 21077 ms: Timed out12git config --global --unset http.proxygit config --global --unset https.proxy","tags":[{"name":"Git—Command","slug":"Git—Command","permalink":"https://eastsheng.github.io/tags/Git%E2%80%94Command/"}],"categories":[{"name":"Git","slug":"Git","permalink":"https://eastsheng.github.io/categories/Git/"}]},{"title":"Linux—Command","date":"2022-03-08T15:56:48.000Z","path":"wiki/2022/03/08/linux/Linux_command/","text":"[toc] 空间 查看空间大小：df -h； 查看该目录下文件大小：du -sh * 查看该目录大小：du -hs 目录名 查看内存使用情况：free -m 删除残余的配置文件: 12sudo apt-get remove &lt;package-name&gt; #删除软件包sudo apt-get purge &lt;package-name&gt; #删除软件包以及配置文件 找出所删除软件包的残余配置文件 1234dpkg --list | grep &quot;^rc&quot; #找出所删除软件包的残余配置文件dpkg --list | grep &quot;^rc&quot; | cut -d &quot; &quot; -f 3 #提取这些软件包的名称sudo dpkg --purge &lt;package-name&gt; #只删除某个软件包的配置文件dpkg --list | grep &quot;^rc&quot; | cut -d &quot; &quot; -f 3 | xargs sudo dpkg --purge #删除所有软件包 删除没有用的deb软件安装包 123sudo du -sh /var/cache/apt/archives #查看/var/chace/apt/archives目录下deb安装包的总大小sudo apt-get clean #删除这些deb包sudo apt-get autoclean 清理日志文件 123sudo apt-get install ncdu #安装ncdu工具sudo ncdu /var/log #查看日志文件sudo dd if=/dev/null of=/var/log/shadowsocks.log #清空这个日志文件的内容 删除’&#x2F;dev&#x2F;loop0…’文件: 1sudo apt purge snapd ubuntu清理缓存 123sudo apt-get autoclean #清理旧版本软件缓存sudo apt-get clean #清理所有软件缓存sudo apt-get autoremove #删除系统不再使用孤立软件 内存 查看当前的内存使用情况 12345free### output total used free shared buff/cache availableMem: 12567412 129624 12013836 72 423952 12137032Swap: 4194304 0 4194304 连续监视内存使用情况 1watch -d free # 使用 Ctrl + c 退出 动态显示进程执行情况 12toptop c 查看当前有哪些进程 1ps -AFL 查看当前进程树 1pstree 中止一个进程 12345kill 进程号(就是ps -A中的第一列的数字)killall 进程名# 或者强制中止一个进程kill -9 进程号killall -9 进程名 文件&#x2F;文件夹权限123456789sudo chmod 600 ××× （只有所有者有读和写的权限）sudo chmod 644 ××× （所有者有读和写的权限，组用户只有读的权限）sudo chmod 700 ××× （只有所有者有读和写以及执行的权限）sudo chmod 666 ××× （每个人都有读和写的权限）sudo chmod 777 ××× （每个人都有读和写以及执行的权限） 文件&#x2F;文件夹 创建单个文件：touch file1.txt 创建多个文件：touch file1.txt file2.txt file3.txt 创建文件夹：mkdir filename； 还可以同时创建两个文件夹：mkdir file1 file2； 创建一个包含路径的文件夹：mkdir -p /home/file/file1 删除文件；rm -f filename 删除空文件夹：rmdir foldername； 删除有文件的文件夹：rm -rf foldername； 同时删除两个有文件的文件夹：rm -rf folder1 folder2； 返回上一级目录：cd ..； 显示当前工作路径：pwd； 查看当前目录中的文件&#x2F;文件夹ls； 复制一个目录到另一个目录下:cp -r dir1 dir2 显示隐藏文件夹： 12ctrl h #快捷键ls -a #命令 对比两个文件之间的差异 1diff file1 file2 查看文件类型 1file filename 把所有文件的后辍由rm改为rmvb 1rename &#x27;s/.rm$/.rmvb/&#x27; * 把所有文件名中的大写改为小写 1rename &#x27;tr/A-Z/a-z/&#x27; * 更多参考：[1] https://www.cnblogs.com/yjd_hycf_space/p/7730690.html 解压&#x2F;压缩 解压&#x2F;压缩filename.tar.gz： 123tar -zxvf filename.tar.gz # 解压tar -zcvf xxx.tar.gz aaa bbb # 压缩 aaa bbb目录为xxx.tar.gz tar -jcvf xxx.tar.bz2 aaa bbb # 压缩 aaa bbb目录为xxx.tar.bz2 解压&quot;.zip&quot;：unzip filename.zip; root 开启root：su 退出root：exit 或者快捷键退出：ctrl+D 而另一种方法:logout则出现错误:bash: logout: not login shell: use &quot;exit&quot; 修改root密码：sudo passwd root 开启ssh:12sudo apt-get install openssh-serverservice ssh start 环境变量 查看已设环境变量: 1echo $PATH 设置临时环境变量: 1PATH=/usr/local/.../bin:$PATH;export PATH 设置永久环境变量: root后在/etc/profile文件或者~/.brashrc文件添加环境变量； 例如： 1export PATH=&quot;/usr/local/mpich-3.3.2/bin:$PATH&quot; 设置永久环境变量具体操作： 1234567vim /etc/profileexport PATH=&quot;/usr/local/mpich-3.3.2/bin:$PATH&quot;Esc #（键盘）:wq #或（快捷键）shift+ZZ 保存并退出；:q #不保存退出:q! #强制退出source /etc/profile#(使生效) conda启动与关闭 启动：conda activate 关闭：conda deactivate 关闭自动开启base:conda config --set auto_activate_base false Linux查看cpu信息 Linux查看cpu总数，在top后的界面按1， 或者： 1cat /proc/cpuinfo | grep processor 查看进程绝对路径 1top c 在linux启动和终止matlab12matlab -nodesktop -nosplash -r matlabfile(parameters)exit Linux关闭开启防火墙 Centos7 1234systemctl status firewalld.service #查看状态systemctl stop firewalld.service #停止防火墙，但重启后会自动开启systemctl disable firewalld.service #关闭防火墙systemctl start firewalld.service #打开防火墙 Ubuntu 1234567sudo apt-get install ufw #安装防火墙sudo ufw enable #打开防火墙sudo ufw disable #关闭防火墙sudo ufw reload #重启防火墙sudo ufw status #查看本机端口使用情况sudo ufw allow 9000 #打开指定端口sudo ufw delete allow 9000 #关闭指定端口 终端连接另一台主机12345ssh root@另一台主机ip#例如：ssh root@111.111.11.11#然后按提示输入该主机root密码即可exit #退出 卸载cuda1234cd /usr/local/cuda/binsudo ./uninstall_cuda_x.x.pl #或sudo ./cuda-uninstaller VIM命令 https://yelog.org/2017/03/06/Vim-command/ 安装与卸载命令 deb类型 123sudo dpkg -i xxx-1.2.deb #安装sudo dpkg -e xxx #卸载sudo dpkg –l &#x27;*xxx*&#x27; #查询 rpm类型 12sudo rpm -ivh xxx-1.2.rpm #安装sudo rpm -e xxx #卸载 tar.gz类型一般安装方式 12345tar -zxvf xxx.tar.gz #解压cd xxx./configuremakemake install Ubuntu更新谷歌浏览器123wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.debsudo dpkg -i google-chrome*sudo apt-get install -f 配置你的 csh&#x2F;tcsh https://blog.csdn.net/Augusdi/article/details/42679271?utm_medium=distribute.pc_relevant.none-task-blog-2~default~baidujs_baidulandingword~default-0.no_search_link&amp;spm=1001.2101.3001.4242 Ubuntu自带的资源管理器：1gnome-system-monitor 调出Ubuntu信息界面 调出Ubuntu信息界面1neofetch 查看文件时间1ll -h git clone分支123# git clone -branch branch name --single-branch repo_url /foldernamegit clone -b gh-pages --single-branch https://github.com/eastsheng/MyWikiSite.git wwwroot 显示日历12cal # 显示当月日历cal 11 2022 # 显示2007年2月的日历 Ubuntu安装无线网卡驱动 查看Ubuntu网卡型号 123lspci# orlspci -nnk | grep -i net 内核版本查看命令 1uname -sr 下载驱动：英特尔®无线适配器的 Linux* 支持 解压、复制： 123tar -zxvf 下载的驱动的名字.tgzcd 下载的驱动的名字sudo cp iwlwifi-*.ucode /lib/firmware 重启 重启不行的话，删除firmware中后缀为pnvm的文件再重启 参考：https://blog.csdn.net/baidu_41816106/article/details/121648139 Ubuntu上不了网：ifconfig查看只有lo,没有ens33问题解决参考方法： 123sudo rm -rf /var/lib/NetworkManager/NetworkManager.state sudo dhclient ens33sudo ifconfig ens33 screen后台运行工具后台提交lammps任务命令 直接提交，界面不能关闭，关闭后就结束了： 1mpirun -np 4 lmp_mpi -i in.lammpsinputfile 使用screen工具后台运行： 状态介绍： Attached：表示当前screen正在作为主终端使用，为活跃状态。 Detached：表示当前screen正在后台使用，为非激发状态。 基础命令（区分大小写）： 查看已提交任务列表 1screen -ls 查看帮助 1screen -help 提交一个后台运行的lammps任务 12345screen -S Hello # 新建名为Hello的窗口mpirun -np 4 lmp_mpi -i in.lammpsinputfile # 再窗口内提交LAMMPS任务ctrl -a d # 输入后可关闭窗口，任务后台运行screen -r [pid/name] #可重新回到运行窗口,pid/name：为虚拟终端PID或Name 其中：32307为PID，tool为Name 删除任务： 12kill -9 [name] # 删除任务screen -wipe [name] # 清理任务 参考文章： [1] Linux终端命令神器–Screen命令详解。助力Linux使用和管理","tags":[{"name":"Linux学习","slug":"Linux学习","permalink":"https://eastsheng.github.io/tags/Linux%E5%AD%A6%E4%B9%A0/"},{"name":"Linux—Command","slug":"Linux—Command","permalink":"https://eastsheng.github.io/tags/Linux%E2%80%94Command/"}],"categories":[{"name":"Linux学习","slug":"Linux学习","permalink":"https://eastsheng.github.io/categories/Linux%E5%AD%A6%E4%B9%A0/"}]},{"title":"Linux—error","date":"2022-03-08T15:56:48.000Z","path":"wiki/2022/03/08/linux/Linux_error/","text":"[toc] 1. CUDA driver version is insufficient for CUDA runtime version NVIDIA GPU的驱动程序版本查看命令：nvidia-smi CUDA runtime version（运行时版本）是在python中安装的cudatoolkit和cudnn程序包的版本 查看命令：pip list 查看cuda当前版本 12cat /usr/local/cuda/version.txt nvcc -V 2. 虚拟机不显示ip地址的解决方法 在root下：dhclient -v;或者ubuntu下：sudo dhclient -v 然后即可查看ip:ifconfig 远程vpn虚拟机ping不通，很有可能是因为虚拟机没有联网。 3. “Sorry, Ubuntu 20.04 has experienced an internal error” 解决方法： 1sudo rm -r /var/crash/* 4. failed to start ssh.service unit not found sudo service ssh restart打不开Centos7的ssh 是因为service ssh restart是Centos6的命令。Centos7的命令应该是: 1systemctl restart sshd 参考 [1] https://blog.csdn.net/wo541075754/article/details/79092281 5. GULP./mkgulp编译错误：1gfortran: error: unrecognized command line option ‘-ffpe-summary=invalid,zero 主要是gcc编译器太老了，更新一下就好； Cenos7更新方法： 123456gcc --version #查看当前版本sudo yum install centos-release-sclsudo yum install devtoolset-7-gcc*scl enable devtoolset-7 bashwhich gccgcc --version #查看更新后版本 再次编译./mkgulp 参考：[1] https://www.cnblogs.com/Hi-blog/p/How-To-Update-Gcc-On-CentOS7.html 6. Ubuntu 播放不了视频 显示错误：1The playback of this movie requires a ITU H.264 decoder plugin which is not installed. ubuntu 解决方法：12sudo apt install libdvdnav4 libdvd-pkg gstreamer1.0-plugins-bad gstreamer1.0-plugins-ugly libdvd-pkgsudo apt install ubuntu-restricted-extras 参考：https://websiteforstudents.com/how-to-enable-ubuntu-18-04-lts-beta-to-play-videos-files/ 7. ‘python\\r’: No such file or directory&#96; 在Ubuntu上运行python脚本出现错误：/usr/bin/env: ‘python\\r’: No such file or directory 直接运行: 1vi +&#x27;:wq ++ff=unix&#x27; pythonfile https://stackoverflow.com/questions/19425857/env-python-r-no-such-file-or-directory xxx 不在 sudoers 文件中。此事将被报告 切换至root用户 12su #orsu - root 给root用户添加可写权限 1chmod 640 /etc/sudoers 修改sudoers 12345vim /etc/sudoersroot ALL=(ALL) ALL #再此行后添加xxx ALL=(ALL) ALL #此行esc #退出:wq #保存 查看验证是否成功 123cat /etc/sudoersexit sudo cat /etc/sudoers 参考 https://blog.csdn.net/csdnzouqi/article/details/95499348 在vmware虚拟机下ubuntu linux系统重启后不能联网的问题12345678cat /var/lib/NetworkManager/NetworkManager.state # 查看网络状态文件# NetworkingEnabled=false# WirelessEnabled=true# WWANEnabled=true# 先停止网络管理服务，删除网络状态文件，再重新启动网络服务即可解决这个问题service NetworkManager stopsudo rm /var/lib/NetworkManager/NetworkManager.stateservice NetworkManager start 在vmware虚拟机下ubuntu linux系统重启后不能联网的问题","tags":[{"name":"Linux学习","slug":"Linux学习","permalink":"https://eastsheng.github.io/tags/Linux%E5%AD%A6%E4%B9%A0/"},{"name":"Linux error","slug":"Linux-error","permalink":"https://eastsheng.github.io/tags/Linux-error/"}],"categories":[{"name":"Linux学习","slug":"Linux学习","permalink":"https://eastsheng.github.io/categories/Linux%E5%AD%A6%E4%B9%A0/"}]},{"title":"Windows10—Linux—子系统","date":"2022-03-08T15:56:48.000Z","path":"wiki/2022/03/08/linux/Linux_子系统/","text":"[toc] Windows10子系统–Linux步骤 1 - 启用适用于 Linux 的 Windows 子系统 需要先启用“适用于 Linux 的 Windows 子系统”可选功能，然后才能在 Windows 上安装 Linux 分发。 以管理员身份打开 PowerShell（“开始”菜单 &gt;“PowerShell”&gt; 单击右键 &gt;“以管理员身份运行”），然后输入以下命令： 1dism.exe /online /enable-feature /featurename:Microsoft-Windows-Subsystem-Linux /all /norestart 步骤 2 - 检查运行 WSL 2 的要求 若要检查 Windows 版本及内部版本号，选择 Windows 徽标键 + R，然后键入“winver”，选择“确定”。 更新到“设置”菜单中的最新 Windows 版本。 步骤 3 - 启用虚拟机功能 安装 WSL 2 之前，必须启用“虚拟机平台”可选功能。 计算机需要虚拟化功能才能使用此功能。 以管理员身份打开 PowerShell 并运行： 1dism.exe /online /enable-feature /featurename:VirtualMachinePlatform /all /norestart 步骤 4 - 下载 Linux 内核更新包 下载最新包： 适用于 x64 计算机的 WSL2 Linux 内核更新包 运行上一步中下载的更新包。 （双击以运行 - 系统将提示你提供提升的权限，选择“是”以批准此安装。） 步骤 5 - 将 WSL 2 设置为默认版本1wsl --set-default-version 2 步骤 6 - 安装所选的 Linux 分发 打开 Microsoft Store，并选择你偏好的 Linux 分发版。 单击以下链接会打开每个分发版的 Microsoft Store 页面：Ubuntu 20.04 LTS 在分发版的页面中，选择“获取”。 首次启动新安装的 Linux 分发版时，将打开一个控制台窗口，系统会要求你等待一分钟或两分钟，以便文件解压缩并存储到电脑上。 未来的所有启动时间应不到一秒。 创建用户帐户和密码。 使用 WSL 安装 Linux 发行版的过程完成后，使用“开始”菜单打开该发行版（默认情况下为 Ubuntu）。 系统将要求你为 Linux 发行版创建“用户名”和“密码”。 此用户名和密码特定于安装的每个单独的 Linux 分发版，与 Windows 用户名无关。 创建用户名和密码后，该帐户将是分发版的默认用户，并将在启动时自动登录。 此帐户将被视为 Linux 管理员，能够运行 sudo (Super User Do) 管理命令。 在 WSL 上运行的每个 Linux 发行版都有其自己的 Linux 用户帐户和密码。 每当添加分发版、重新安装或重置时，都必须配置一个 Linux 用户帐户。 打开子系统的主目录1explorer.exe . 把子系统(WSL)搬到非系统盘 下载并解压LxRunOffline-v3.5.0-msvc.zip 查看安装的子系统1LxRunOffline.exe list 子系统迁移1LxRunOffline.exe move -n Ubuntu-20.04 -d D:\\Ubuntu 子系统访问电脑目录1cd /mnt 启动、停止WSL1234# 停止LxssManager服务net stop LxssManager# 启动LxssManager服务net start LxssManager WSL2可视化界面WLS2+Ubuntu+Windows远程桌面连接 轻松开启 WSL2 图形界面功能 https://zhuanlan.zhihu.com/p/382480486 WSL2 Ubuntu图形界面使用指南 https://blog.csdn.net/liyunxin_c_language/article/details/114107994 https://blog.csdn.net/u014792301/article/details/106888202 https://hub.docker.com/editions/community/docker-ce-desktop-windows/ https://zhuanlan.zhihu.com/p/150555651 WSL2问题与解决方案若远程连接不上 检查ip是否正确； 若不是ip问题，在命令行输入以下命令：12345sudo apt-get updatesudo apt-get install xrdpsudo apt-get install vnc4serversudo apt-get install xubuntu-desktopsudo service xrdp restart #主要是是这一命令 参考的对象类型不支持尝试的操作。 打开WSL Terminal后出现： 12参考的对象类型不支持尝试的操作。[已退出进程，代码为 4294967295] 解决方法： 临时解决：管理员身份打开Windows PowerShell，输入 1netsh winsock reset 永久解决： 下载NoLsp.exe,需要梯子 管理员身份打开Windows PowerShell，输入 1.\\NoLsp.exe C:\\windows\\system32\\wsl.exe 永久解决！！！ WLS2连接不上网络12345sudo rm /etc/resolv.confsudo bash -c &#x27;echo &quot;nameserver 8.8.8.8&quot; &gt; /etc/resolv.conf&#x27;sudo bash -c &#x27;echo &quot;[network]&quot; &gt; /etc/wsl.conf&#x27;sudo bash -c &#x27;echo &quot;generateResolvConf = false&quot; &gt;&gt; /etc/wsl.conf&#x27; 参考：119279749 参考链接 win10安装子系统 子系统位置迁移 设置 WSL 开发环境的最佳做法 WSL——windows上的linux子系统 https://cloud.tencent.com/developer/article/1687414?from=article.detail.1594940 win10启动ubuntu报错 参考的对象类型不支持尝试的操作 关于使用WSL2出现“参考的对象类型不支持尝试的操作”的解决方法。 其他扩展 如何用笔记本ssh连接局域网内其他电脑上的wsl2 ubuntu 如何在局域网的其他主机上中访问本机的WSL2","tags":[{"name":"Linux学习","slug":"Linux学习","permalink":"https://eastsheng.github.io/tags/Linux%E5%AD%A6%E4%B9%A0/"},{"name":"Windows10 Linux 子系统","slug":"Windows10-Linux-子系统","permalink":"https://eastsheng.github.io/tags/Windows10-Linux-%E5%AD%90%E7%B3%BB%E7%BB%9F/"}],"categories":[{"name":"Linux学习","slug":"Linux学习","permalink":"https://eastsheng.github.io/categories/Linux%E5%AD%A6%E4%B9%A0/"}]},{"title":"WIN10蓝屏，终止代码:VIDEO_MEMORY_MANAGEMENT_INTERNAL","date":"2022-02-19T11:42:18.000Z","path":"wiki/2022/02/19/others/2022/windows_VIDEO_MEMORY_MANAGEMENT_INTERNAL/","text":"WIN10蓝屏 终止代码:VIDEO_MEMORY_MANAGEMENT_INTERNAL 只要在谷歌浏览器打开视频，WIN10就蓝屏； 所以应该是谷歌的问题。 解决办法： 谷歌设置&gt;高级&gt;系统&gt;关闭使用硬件加速模式","tags":[{"name":"Windows","slug":"Windows","permalink":"https://eastsheng.github.io/tags/Windows/"},{"name":"Windows 蓝屏","slug":"Windows-蓝屏","permalink":"https://eastsheng.github.io/tags/Windows-%E8%93%9D%E5%B1%8F/"},{"name":"VIDEO_MEMORY_MANAGEMENT_INTERNAL","slug":"VIDEO-MEMORY-MANAGEMENT-INTERNAL","permalink":"https://eastsheng.github.io/tags/VIDEO-MEMORY-MANAGEMENT-INTERNAL/"}],"categories":[{"name":"Windows","slug":"Windows","permalink":"https://eastsheng.github.io/categories/Windows/"}]},{"title":"论文笔记2022-春","date":"2021-12-31T16:00:00.000Z","path":"wiki/2022/01/01/notes/PaperReadNote202201/","text":"[toc] Paper Notes 20222022-0505-19 Carboxyl n. 羧基 In most conditions在大多数情况下 deprotonated adj. 去质子化的 05-19 substrate wettability alteration 基底润湿性改变 calcite 方解石 salinity n. 盐度；盐分；盐性 but the underlying mechanism remains unclear especially for carbonate reservoirs a nano-pore comprised of neutral calcite surfaces A comprised of B at elevated salt concentrations 盐浓度升高时 aqueous electrolyte 含水电解质 intervening volume element 中间体积元 neutral non-polar n-decane (C10H22) was used as the representative non-polar oil phase. Decane is a typical component of petroleum and has been presented frequently in the literature as a kerosene(煤油) surrogate or as the main component of diesel (柴油) surrogates(替代). All the ions were initially randomly inserted into the aqueous region to avoid biased adsorption. 05-06 capillary pressure 毛细管（血）压 its flow behavior are profoundly affected by the potential field from quartz walls and adsorption layers if the nanopore width w becomes less than 50 Å 05-04 bimodal 双峰的 Compared to the saturated heptane molecules, the π electrons of the aromatic ring and heteroatoms (such as N, O, S atoms) causes a nonuniform molecular charge distribution and uneven molecular electrostatic potential [57], which directly leads to an increase in molecular polarity[58] The molecular polarity indexes of the crude oil fractions used in this study, as reported by Lian et al. [57], are 2.28446, 6.98565, 6.12492, and 9.54517 kcal&#x2F;mol for heptane, toluene, resin, and asphaltene, respectively. 分子极性指标怎么计算？ Notably, the heteroatoms in oil molecules form hydrogen bonds with water molecules [60], which trap water molecules at the oil-water interface, inhibiting them from contacting the iron surface. a compact adhesion layer is gradually formed 逐渐形成致密的粘着层 complexation n. 络合；络合作用（complex 的名词） 络合作用分为外层络合作用和内层络合作用; 这一过程涉及到特定金属-配体相互作用下多原子结构(即配合物)的形成; 在吸附过程中，金属离子与生物炭表面官能团的络合作用是重要的吸附机理; facilitating the aggregation and adhesion between asphaltene molecules and the iron surface. 促进沥青质分子与铁表面的聚集和粘附。 it may be inferred that 可以推断 In the view of thermodynamics, the resin and asphaltene are the solvent and solute, respectively., 从热力学的角度来看， peptizing agents 胶溶剂 To represent the stability of asphaltene in heavy oil, the colloidal instability coefficient (CII) [69] was introduced, as follows: 当稠油CII为&gt; 0.95时，会发生沥青质沉淀和粘附;否则，沥青质沉淀和粘附的风险是最小的 It is worth noting that In a previous study the distance of dimers of asphaltene molecules is 3.55–3.70 Å. Therefore, the intermolecular distances of asphaltene aggregates are considered to be within 3.55–3.70 Å [70]. 05-03 To make up for the shortcomings of hydraulic calculation methods for crude oil cold transportation to make up for the shortcomings of xx 为了弥补xx的不足 elaborate on 阐述了；详细说明 endow them with ‘anti-sticking’ ability. 赋予他们“防粘”的能力。 electric double layer (EDL)双电层 https://zhuanlan.zhihu.com/p/27155545 任何两个不同的物相接触都会在两相间产生电势，这是因电荷分离引起的。两相各有过剩的电荷，电量相等，正负号相反，相互吸引，形成双电层。 aforementioned Through comprehensive consideration of the aforementioned influencing factors,通过综合考虑上述影响因素 The aforementioned studies show that……上述研究表明…… Against this backdrop在这样的背景下 ；在此种情况下 Prior to experiments,在实验之前, syringe（n. （皮下）注射器；吸管；（园艺或烹饪中的）喷射器 v. 用注射器清洗（耳朵）；用喷射器（在植物上）喷洒（液体） On the premise of ensuring accurate calculation，在保证计算准确的前提下 From this由此 work of adhesion 黏附功[1] It is also worth noting that。。。同样值得注意的是。。。 adhere v. 黏附，附着；遵守，遵循（规定或协议）；拥护，持有（观点或信仰） in the absence of asphaltene molecules 在没有沥青质分子的情况下 Due to the presence of 400 heptane, 400 toluene, and 105 resin molecules in each oil droplet the solubility of asphaltenes in the oil phase remains unchanged, as, asphaltenes are soluble in aromatic rich solvents such as toluene and resin and insoluble in aliphatic solvents such as heptane 沥青质溶于芳香烃和胶质，不溶于饱和烃？ reversible work[物] 可逆功 2022-0404-28 understanding adhesion behavior in heavy oil&#x2F;water&#x2F;pipeline wall systems has greatly gained in importance. 不同沥青质浓度的研究 severely impedes heavy oil flow assurance 严重影响稠油流动保障 trillion 万亿，兆 billion 十亿 million 百万 04-24 油层物理：https://video.cup.edu.cn/jingpin/ycwl/kcxx/ch10/se3/01.html 04-23 溶液表面吸附 一瓶溶液中，其表面上一层溶液的浓度与内部总是不同的，通常把物质在界面上富集的现象叫做吸附（adsorption） 1876年Gibbs用热力学方法导出了表面张力，溶液内部浓度和表面浓度三者的关系式——Gibbs公式。 (表面过剩（surface excess）) 实验证明：当两种不完全混溶的两相在接触时，交界处并非有一界线分明的几何面将两相分开，而是存在一界线不很清楚的薄薄一层。此层只有几个分子厚，其成分和性质皆不均匀，与两体相的性质也不同——表面相$σ$ 参考：https://www.chem.pku.edu.cn/huangjb/docs/20200210115242977483.pdf 04-22 误差函数erf erf的定义：函数erf(x)在数学中为误差函数（也称之为高斯误差函数，error function or Gauss error function），是一个非基本函数（即不是初等函数），其在概率论、统计学以及偏微分方程和半导体物理中都有广泛的应用。 参考1 04-20 气体润湿性 某种液体能否润湿固体，总是相对于另一相气体或液体而言的: 如果其中一相能够润湿固体，那么 另一相则不能润湿该固体。 例如：用导管将某种气体通入 处于液体中的岩屑周围，若液体相对于该气体对岩 屑选择性润湿，则气泡会因为浮力作用上升至液面 直至消失; 若气体相对于液体对岩屑选择性润湿，则 大部分气泡会克服浮力作用而在岩屑表面铺展开， 如肉眼常见的液体在固体表面铺展的润湿现象。 气体对固体的润湿性，认为这种气体的润湿性与液体恰好相反：固体液体润湿性越好，气体润湿性就越差；反之，固体液体润湿性越差，气体润湿性就越好。 不同润湿 在石油工业研究领域，通常认为在气&#x2F;液&#x2F;岩石体体系中液体为强润湿相，气体被视为非润湿相，因此 将油气储层岩石表面的润湿性划分为水润湿、油润湿 和中性润湿。 大量的理论和实验现象证实，这种气体所具有的润湿性或气体对固体的选择性润湿能力并不能被忽视。 气&#x2F;液&#x2F;固”体系中，液体相对于 气体并不总是能够完全润湿固体表面，气体对固体的 润湿能力在不同的体系中存在较大的差异。 https://www.docin.com/p-663340109.html 04-17 Gibbs dividing surface http://rkt.chem.ox.ac.uk/lectures/liqsolns/liquid_surfaces.html https://www.chem.pku.edu.cn/huangjb/docs/20200210115242977483.pdf http://www.chm.bris.ac.uk/eastoe/Surf_Chem_Chinese/2%20adsorption.pdf 04-14 水解度(Hydrolysis degree) 是指盐类的水解达到平衡时，已水解的盐的分子数与溶解在溶液中的盐的分子总数之比叫盐的水解度，经常用$h$表示。 水解 水解是一种化工单元过程，是利用水将物质分解形成新的物质的过程。通常是指盐类的水解平衡。 盐类的水解就是指盐中的弱碱阳离子或者酸根离子与水电离产生的氢离子或者氢氧根离子结合，生成弱电解质的过程。 水解反应就是盐在溶液中和水作用而改变溶液酸度的反应，需要在一定温度条件下进行。 聚合度（DP、X n）(Degree of Polymerization) ： 衡量聚合物分子大小的指标。 以重复单元数为基准，即聚合物大分子链上所含重复单元数目的平均值，以n表示； 以结构单元数为基准，即聚合物大分子链上所含单个结构单元数目。 04-14 油水乳状液(oilwater emulsion) 又称乳化液，指油和水所形成的乳状液。 油(或水)以液珠的形式均匀分散于与之不相溶的水(或油)中，液珠的直径一般大于0.1μm。 油珠分散在水中称水包油型乳状液，常用O&#x2F;W表示，反之为油包水型乳状液(W&#x2F;O)。 乳状液的形成和稳定有一定的条件。 油水混合物从井底采出过程中，随着压力的降低，伴生气不断从油中析出，产生急剧的紊流搅动，以及原油中含有的沥青质、胶质、环烷酸等天然乳化剂的存在，均会使油水形成稳定的乳状液。 一般情况下，含水小于50%时，集输过程中形成的多是油包水型，随着含水量的增大，其表观粘度愈来愈大。当含水量超过某值(50%～70%)时，出现游离水，部分乳状液反相成为水包油型，表观粘度急剧下降。 04-12 氢键 氢键是指强极性键上的氢，与电负性很大、含孤对电子的 并带有部分负电荷的原子之间的吸引力作用。 氢键为区别化学键，用虚线表示。 强极性键上的氢是氢键供体，给出的是缺少电子的近似于裸露的氢核，而原子Y是氢键的受体，可以是富有电子的分子、离子或分子片段。 参考 https://zhuanlan.zhihu.com/p/340065176 形成氢键的必要条件 (1) 与N O F形成极性共价键的H (2) 带部分电荷的N O F 氢键的能量约在10~30kJ·mol-1，比共价键、离子键的能量都小得多，还不能算作严格意义上的化学键，但比一般分子间作用力要大。 因此，液体在沸腾时，分子要逃脱氢键的束缚，就需要升高温度以吸收更多的能量，这就是分子间氢键的存在造成液体沸点升高的根本原因。 VMD计算氢键 https://mp.weixin.qq.com/s/P8Mt3BeKYNcOS12UmI0TCg 2022-0303-2703-23 To the best of our knowledge 据我们所知 In conventional cases, 在常规情况下, The main reasons may be listed as follows: 主要原因如下: As mentioned before， 如上所述 03-22 molten salts 熔融盐 molten carbonates 碳酸岩融烧（除二氧化硫） molten nitrate 硝酸熔盐 corrosive adj. 腐蚀的；侵蚀性的 n. 腐蚀物 anticorrosive adj. [化工] 防蚀的 n. [助剂] 防腐剂 In the present study a sputtering apparatus 一个溅射装置 calibrate v. 校准，标定（测量仪器等）；精确测量，准确估量；调整（实验结果），调节 Using such a calibrated probe 使用这种校准过的探头 calibrations n. 校准（calibration 的复数）；[仪]刻度 Through these calibrations From this point of view 从这个观点来看 simultaneously adv. 同时地 03-10 Interfacial tension: Interfacial tension is the force of attraction between the molecules at the interface of two fluids. At the air–liquid interface, this force is often referred to as surface tension. The SI units for interfacial tension are milli-Newtons per meter (mN&#x2F;m). These are equivalent to the former units of dynes per centimeter (dyne&#x2F;cm). 03-09 According to the structure of the asphaltene, there are two different configurations: Archipelago and Island. The archipelago architecture comprises several aromatic sheets attached through alkyl chains.The Island (continental) architecture is a centered condensed aromatic sheet inside the asphaltene molecules attached to several alkyl chains. It is worth highlighting that the asphaltene stability index, the ratio of asphaltene + saturates to aromatics + resins, of a bitumen sample in this paper is almost 0.54, which means that the asphaltene molecules are stable in the oil phase $$沥青质稳定指数&#x3D;\\frac{沥青质+饱和烃(比例)} {芳香烃+胶质(比例)}$$(Scientific Reports | (2021) 11:19660)(HeatTransfer Engineering, 21:10±16, 2000)(RSC Adv., 2017, 7, 50786-50793) 03-08 蒸汽驱稠油模拟，可用分析方法 (Scientific Reports | (2021) 11:19660)1.1 radius of gyration1.2 solvent accessible surface area1.3 interfacial thickness1.4 interaction energies1.5 RDFs1.6 MSD1.7 self-diffusion coefficient(Journal of Petroleum Science and Engineering 212 (2022) 110259)1.8 Dipole moment of the polar molecules1.9 interfacial tension surfactants can significantly improve steam emulsification capability by decreasing the interfacial tension (IFT) between bitumen and the steam phase. 降黏剂可以通过减少界面张力改善乳化能力 surfactant&#x3D;&#x3D;surface active agent physicochemical characteristics 物理化学特性 However, many unanswered fundamental questions remain 常见的surfactants： cationic;dodecyl tri-methyl-ammonium bromide(C15H34BrN)anionicSodium Dodecyl Benzene Sulfonate (SDBS)According to their results they gained from MD simulation, the headgroup’s tendency to form hydrogen bonds with water as an anionic surfactant was higher than the cationic one这意味着，在注入阴离子表面活性剂的情况下，油从砂层表面剥离的速度比注入阳离子表面活性剂要快。 Sodium dodecyl sulfate (SDS) 与carbon dioxide、methane和一些solvents相比，methane的降黏作用更好； copolymer增加，asphlatene的氢键减少，黏度较少 scenarios To the best of our knowledge For this purpose Nose–Hoover–Langevin (NHL) thermostat是个什么热浴法？？？ 2022-022022-0101-02~04(Fuel 310 (2022) 122270) 稠油降黏两大方法：物理（加热、注汽，所需设备昂贵和能耗大）、化学（添加剂，一般三种，水溶性乳化剂、纳米颗粒、油溶性降黏剂） graph LR A[稠油降黏两大方法]==>B(物理) A==>C(化学) B==>B1(注汽) B==>B2(加热) B1==>B3(所需设备昂贵和能耗大) B2==>B3(所需设备昂贵和能耗大) C==>C1(化学添加剂) C1==>D1(水溶性乳化剂) D1==>E1(在后处理中难以移除注入水和保持乳化剂稳定性) C1==>D2(纳米颗粒) D2==>E2(后期难以移除纳米颗粒 高的花费) C1==>D3(油溶性降黏剂) D3==>E3(不需要后处理 有很大优势) style A fill:#ffff emulsifier 乳化剂：一种表面活性剂（surfactant）。 乳化剂是能使两种或两种以上互不相溶的组分的混合液体形成稳定的乳状液的一类物质 原理是在乳化过程中，分散相以微滴（微米级）的形式分散在连续相中，乳化剂降低了混合体系中各组分的界面张力 并在微滴表面形成较坚固的薄膜或由于乳化剂给出的电荷而在微滴表面形成双电层，阻止微滴彼此聚集，而保持均匀的乳状液 水包油（oil-in-water）比油包水（water-inoil）的稠油黏度低; emulsification viscosity reduction乳化降黏 in post-processing在后加工过程 In order to design oil-soluble viscosity reducers reasonably, it is of significant to explore interaction mechanism in the process of viscosity reduction of heavy oil. 沥青质被认为是导致稠油黏度较高的一个重要组分，主要是因为沥青质可以通过极性基团和烷烃链形成聚集和团簇。 含有苯和酯基团的聚合物可以溶解沥青质[ref]； Pour point depressants: Additives used in small amounts to enable the oil to flow at very low temperatures. 降凝剂是一种油品添加剂，少量加入即可大大改变油品中石蜡的结晶形态，改变体系的界面状态和流变性能，降低原油和油品的凝点和黏度，改善原油在采油、集储、储存等作业中的质量和效率。 put forward 提出 drawback 缺点 the Infrared Spectra 红外光谱 kerosene n. 煤油，火油 团簇分析，分子间距小于某个值时，就是一个团簇，平均团簇尺寸：沥青质数量&#x2F;团簇数量 the molecules were considered as one cluster if the minimum distance among molecules was less than 0.35 nm And the average cluster size, a new descriptor, is defined as the ratio of the number of asphaltenes (30) to the number of clusters. 团簇尺寸可以通过GROMACS里的the gmx_clustsize utility来算。 The larger the value of average cluster size, the higher is the aggregation degree of asphaltenes.","tags":[{"name":"Paper Notes","slug":"Paper-Notes","permalink":"https://eastsheng.github.io/tags/Paper-Notes/"}],"categories":[{"name":"学习笔记","slug":"学习笔记","permalink":"https://eastsheng.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"},{"name":"论文笔记","slug":"学习笔记/论文笔记","permalink":"https://eastsheng.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E8%AE%BA%E6%96%87%E7%AC%94%E8%AE%B0/"},{"name":"2022","slug":"学习笔记/论文笔记/2022","permalink":"https://eastsheng.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E8%AE%BA%E6%96%87%E7%AC%94%E8%AE%B0/2022/"}]},{"title":"Matplotlib基本-2","date":"2021-11-10T08:31:28.000Z","path":"wiki/2021/11/10/codes/python/matplotlib_2/","text":"[toc] Legend一般常用属性1. loc12import numpy as np import matplotlib.pyplot as plt Location String Location Code ‘best’ 0 ‘upper right’ 1 ‘upper left’ 2 ‘lower left’ 3 ‘lower right’ 4 ‘right’ 5 ‘center left’ 6 ‘center right’ 7 ‘lower center’ 8 ‘upper center’ 9 ‘center’ 10 2. bbox_to_anchor 将Legend放置任意指定位置； 两种方法 bbox_to_anchor=(x, y, width, height) bbox_to_anchor=(x, y) 12plt.legend(loc=&quot;best&quot;,bbox_to_anchor=(0.5, 0., 0.5, 0.5))plt.legend(loc=&quot;best&quot;,bbox_to_anchor=(0.5, 0.5)) 3. ncol 图例的列数，默认为11plt.legend(loc=&quot;best&quot;,ncol=1) 3. shadow 图例阴影1plt.legend(loc=&quot;best&quot;,shadow=True) 4. 简单例子 12345678910111213141516171819202122import numpy as np import matplotlib.pyplot as pltx = np.linspace(-10,10,100)y1 = x**1+1y2 = 2*x**2+2y3 = 3*x**3+3y4 = 4*x**4+4fig = plt.figure(figsize=(8,6))ax1 = fig.add_subplot(121)ax1.plot(x,y1,label=&quot;Best&quot;)ax1.plot(x,y2,label=&quot;upper right&quot;)plt.legend(loc=&quot;best&quot;,bbox_to_anchor=(0.5, 0., 0.5, 0.5), ncol=1,shadow=True)ax2 = fig.add_subplot(122)ax2.plot(x,y3,label=&quot;upper right&quot;)ax2.plot(x,y4,label=&quot;upper right&quot;)plt.legend(loc=&quot;center right&quot;)plt.show() 参考链接[1]. https://matplotlib.org/stable/api/_as_gen/matplotlib.pyplot.legend.html Matplotlib 双轴设置双轴1ax2 = ax1.twinx() # this is the important function 设置轴颜色 tick颜色 1ax1.tick_params(axis=&#x27;y&#x27;,colors=&#x27;black&#x27;) # this is the important function label颜色 12ax2.xaxis.label.set_color(&#x27;black&#x27;) # this is the important function about label colorax2.yaxis.label.set_color(&#x27;red&#x27;) # this is the important function about label color 完整代码12345678910111213141516171819202122232425import matplotlib.pyplot as pltimport numpy as np# 双轴+坐标轴颜色x = np.arange(0, 1, 0.01)y1 = x**(1)y2 = x**(-0.1)plt.rc(&#x27;font&#x27;, family=&#x27;Times New Roman&#x27;, size=22)fig = plt.figure(figsize=(12, 10))ax1 = fig.add_subplot(111)ax1.plot(x, y1,&#x27;r&#x27;,label=&quot;red&quot;)ax1.legend(loc=&quot;upper left&quot;)ax1.set_xlim([0, 1])ax1.set_ylabel(&#x27;Left&#x27;)ax1.set_xlabel(&#x27;X&#x27;)# ax1.tick_params(axis=&#x27;y&#x27;,colors=&#x27;black&#x27;) # this is the important functionax2 = ax1.twinx() # this is the important functionax2.plot(x, y2, &#x27;g&#x27;,label = &quot;green&quot;)ax2.legend(loc=&quot;upper right&quot;)ax2.set_ylabel(&#x27;Right&#x27;)ax2.tick_params(axis=&#x27;y&#x27;,colors=&#x27;red&#x27;) # this is the important function about tick colorax2.yaxis.label.set_color(&#x27;red&#x27;) # this is the important function about label colorplt.show() 边框颜色、宽度1234ax.spines[&#x27;top&#x27;].set_color(&#x27;red&#x27;)ax.spines[&#x27;bottom&#x27;].set_color(&#x27;none&#x27;) # 无色ax.spines[&#x27;left&#x27;].set_linewidth(2)ax.spines[&#x27;right&#x27;].set_linewidth(2) 参考 https://zhuanlan.zhihu.com/p/343719623 https://blog.csdn.net/qq_40211493/article/details/103261392 https://www.it1352.com/532711.html matplotlib_bar 123456789101112131415161718192021222324252627282930313233&quot;&quot;&quot;Hatching (pattern filled polygons) is supported currently in the PS,PDF, SVG and Agg backends only.&quot;&quot;&quot;import matplotlib.pyplot as pltfrom matplotlib.patches import Ellipse, Polygonfig = plt.figure()ax1 = fig.add_subplot(131)ax1.bar(range(1, 5), range(1, 5), color=&#x27;red&#x27;, edgecolor=&#x27;black&#x27;, hatch=&quot;/&quot;)ax1.bar(range(1, 5), [6] * 4, bottom=range(1, 5), color=&#x27;blue&#x27;, edgecolor=&#x27;black&#x27;, hatch=&#x27;//&#x27;)ax1.set_xticks([1.5, 2.5, 3.5, 4.5])ax2 = fig.add_subplot(132)bars = ax2.bar(range(1, 5), range(1, 5), color=&#x27;yellow&#x27;, ecolor=&#x27;black&#x27;) + \\ ax2.bar(range(1, 5), [6] * 4, bottom=range(1, 5), color=&#x27;green&#x27;, ecolor=&#x27;black&#x27;)ax2.set_xticks([1.5, 2.5, 3.5, 4.5])##&#123;&#x27;/&#x27;, &#x27;\\&#x27;, &#x27;|&#x27;, &#x27;-&#x27;, &#x27;+&#x27;, &#x27;x&#x27;, &#x27;o&#x27;, &#x27;O&#x27;, &#x27;.&#x27;, &#x27;*&#x27;&#125;patterns = (&#x27;-&#x27;, &#x27;+&#x27;, &#x27;x&#x27;, &#x27;\\\\&#x27;, &#x27;*&#x27;, &#x27;o&#x27;, &#x27;O&#x27;, &#x27;.&#x27;)for bar, pattern in zip(bars, patterns): bar.set_hatch(pattern)ax3 = fig.add_subplot(133)ax3.fill([1, 3, 3, 1], [1, 1, 2, 2], fill=False, hatch=&#x27;\\\\&#x27;)ax3.add_patch(Ellipse((4, 1.5), 4, 0.5, fill=False, hatch=&#x27;*&#x27;))ax3.add_patch(Polygon([[0, 0], [4, 1.1], [6, 2.5], [2, 1.4]], closed=True, fill=False, hatch=&#x27;/&#x27;))ax3.set_xlim((0, 6))ax3.set_ylim((0, 2.5))plt.show() Maplotlib坐标轴反转12ax.invert_xaxis()ax.invert_yaxis() 坐标轴LOG1234ax.set_xscale(&quot;log&quot;, base = 10)ax.set_yscale(&quot;log&quot;, base = 10)plt.xscale(&quot;log&quot;, base = 10)plt.yscale(&quot;log&quot;, base = 10) savefig1plt.savefig(&#x27;xxx.tiff&#x27;,dpi=300,transparent=True) Seaborn Seaborn","tags":[{"name":"Python","slug":"Python","permalink":"https://eastsheng.github.io/tags/Python/"},{"name":"Matplotlib","slug":"Matplotlib","permalink":"https://eastsheng.github.io/tags/Matplotlib/"}],"categories":[{"name":"程序学习","slug":"程序学习","permalink":"https://eastsheng.github.io/categories/%E7%A8%8B%E5%BA%8F%E5%AD%A6%E4%B9%A0/"},{"name":"Python","slug":"程序学习/Python","permalink":"https://eastsheng.github.io/categories/%E7%A8%8B%E5%BA%8F%E5%AD%A6%E4%B9%A0/Python/"},{"name":"Matplotlib","slug":"程序学习/Python/Matplotlib","permalink":"https://eastsheng.github.io/categories/%E7%A8%8B%E5%BA%8F%E5%AD%A6%E4%B9%A0/Python/Matplotlib/"}]},{"title":"LaTex Study","date":"2021-11-07T12:04:28.000Z","path":"wiki/2021/11/07/codes/markdown/LaTeX_study/","text":"[toc] LaTex基本 行内公式，并编号：$f(x)&#x3D;ax+b \\tag{1.1}$ 1$f(x)=ax+b \\tag&#123;1.1&#125;$ 行间公式，并编号：$$f(x)&#x3D;ax+b \\tag{1.2}$$ 1$$f(x)=ax+b \\tag&#123;1.2&#125;$$ 四则运算$$f(x,y)&#x3D;x+a-b*y&#x2F;c \\cdot{d}$$ 1$$f(x,y)=x+a-b*y/c \\cdot&#123;d&#125;$$ 运算符号$$f(x,y)&#x3D; \\neq x \\equiv {x} \\bmod y$$ 1$$f(x,y)= \\neq x \\equiv &#123;x&#125; \\bmod y$$ 上下标与上下标记（水平线&#x2F;大括号）：$$\\underbrace{\\overline {f(x,y)}}{xy}&#x3D;\\overbrace{\\underline {x{12}^2}+f’(x)}^{x}$$ 1$$\\underbrace&#123;\\overline &#123;f(x,y)&#125;&#125;_&#123;xy&#125;=\\overbrace&#123;\\underline &#123;x_&#123;12&#125;^2&#125;+f&#x27;(x)&#125;^&#123;x&#125;$$ 根号：$$\\sqrt{x+y}+\\sqrt[10]{x+y}$$ 1$$\\sqrt&#123;x+y&#125;+\\sqrt[10]&#123;x+y&#125;$$ 分式：$$\\frac {\\sqrt{x+y}} {\\sqrt[10]{x+y}}$$ 1$$\\frac &#123;\\sqrt&#123;x+y&#125;&#125; &#123;\\sqrt[10]&#123;x+y&#125;&#125;$$ 向量符号：$$\\vec{x}+\\overrightarrow{xy}+\\overleftarrow{yz}$$ 1$$\\vec&#123;x&#125;+\\overrightarrow&#123;xy&#125;+\\overleftarrow&#123;yz&#125;$$ 积分符号：$$f(x)&#x3D;\\int_{0}^{1}x^2$$ 1$$f(x)=\\int_&#123;0&#125;^&#123;1&#125;x^2$$ 求和符号：$$f(x)&#x3D;\\sum_{n&#x3D;0}^{n}nx^2$$ 1$$f(x)=\\sum_&#123;n=0&#125;^&#123;n&#125;nx^2$$ 求极限符号：$$f(x,y)&#x3D;\\lim_{x \\to 0} \\lim_{y \\to \\infty} x+y$$ 1$$f(x,y)=\\lim_&#123;x \\to 0&#125; \\lim_&#123;y \\to \\infty&#125; x+y$$ 乘积符号：$$f(x)&#x3D;\\prod_{n&#x3D;0}^{n+1} nx^6$$ 1$$f(x)=\\prod_&#123;n=0&#125;^&#123;n+1&#125; nx^6$$ 省略号：$$x&#x3D;1,2,3,\\ldots,100,\\cdots,200,\\vdots,300,\\ddots,n,n+1$$ 1$$x=1,2,3,\\ldots,100,\\cdots,200,\\vdots,300,\\ddots,n,n+1$$ 取平均：$\\bar{x}$ 1$\\bar&#123;x&#125;$ LaTex符号希腊字母 Symbol Symbol Command Symbol Command Symbol Command $\\pm$ \\pm $\\mp$ \\mp $\\times$ \\times $\\div$ \\div $\\cdot$ \\cdot $\\ast$ \\ast $\\star$ \\star $\\dagger$ \\dagger $\\ddagger$ \\ddagger $\\amalg$ \\amalg $\\cap$ \\cap $\\cup$ \\cup $\\uplus$ \\uplus $\\sqcap$ \\sqcap $\\sqcup$ \\sqcup $\\vee$ \\vee $\\wedge$ \\wedge $\\oplus$ \\oplus $\\ominus$ \\ominus $\\otimes$ \\otimes $\\circ$ \\circ $\\bullet$ \\bullet $\\diamond$ \\diamond $\\lhd$ \\lhd $\\rhd$ \\rhd $\\unlhd$ \\unlhd $\\unrhd$ \\unrhd $\\oslash$ \\oslash $\\odot$ \\odot $\\bigcirc$ \\bigcirc $\\triangleleft$ \\triangleleft $\\Diamond$ \\Diamond $\\bigtriangleup$ \\bigtriangleup $\\bigtriangledown$ \\bigtriangledown $\\Box$ \\Box $\\triangleright$ \\triangleright $\\setminus$ \\setminus $\\wr$ \\wr $\\sqrt{x}$ \\sqrt{x} $x^{\\circ}$ x^{\\circ} $\\triangledown$ \\triangledown $\\sqrt[n]{x}$ \\sqrt[n]{x} $a^x$ a^x $a^{xyz}$ a^{xyz} $\\nabla$ \\nabla $\\infty$ \\infty $\\surd$ \\surd $\\forall$ \\forall 关系符 Symbol Command Symbol Command Symbol Command $\\le$ \\le $\\ge$ \\ge $\\neq$ \\neq $\\sim$ \\sim $\\ll$ \\ll $\\gg$ \\gg $\\doteq$ \\doteq $\\simeq$ \\simeq $\\subset$ \\subset $\\supset$ \\supset $\\approx$ \\approx $\\asymp$ \\asymp $\\subseteq$ \\subseteq $\\supseteq$ \\supseteq $\\cong$ \\cong $\\smile$ \\smile $\\sqsubset$ \\sqsubset $\\sqsupset$ \\sqsupset $\\equiv$ \\equiv $\\frown$ \\frown $\\sqsubseteq$ \\sqsubseteq $\\sqsupseteq$ \\sqsupseteq $\\propto$ \\propto $\\bowtie$ \\bowtie $\\in$ \\in $\\ni$ \\ni $\\prec$ \\prec $\\succ$ \\succ $\\vdash$ \\vdash $\\dashv$ \\dashv $\\preceq$ \\preceq $\\succeq$ \\succeq $\\models$ \\models $\\perp$ \\perp $\\parallel$ \\parallel $\\mid$ \\mid $\\bumpeq$ \\bumpeq 箭头 Symbol Command Symbol Command Symbol Command $\\uparrow$ \\uparrow $\\leftrightarrow$ \\leftrightarrow $\\leftharpoonup$ \\leftharpoonup $\\downarrow$ \\downarrow $\\Leftrightarrow$ \\Leftrightarrow $\\rightharpoonup$ \\rightharpoonup $\\Uparrow$ \\Uparrow $\\longrightarrow$ \\longrightarrow $\\leftharpoondown$ \\leftharpoondown $\\Downarrow$ \\Downarrow $\\longleftarrow$ \\longleftarrow $\\rightharpoondown$ \\rightharpoondown $\\updownarrow$ \\updownarrow $\\Longrightarrow$ \\Longrightarrow $\\rightleftharpoons$ \\rightleftharpoons $\\Updownarrow$ \\Updownarrow $\\Longleftarrow$ \\Longleftarrow $\\leadsto$ \\leadsto $\\rightarrow$ \\rightarrow $\\mapsto$ \\mapsto $\\nearrow$ \\nearrow $\\leftarrow$ \\leftarrow $\\longmapsto$ \\longmapsto $\\searrow$ \\searrow $\\Rightarrow$ \\Rightarrow $\\hookleftarrow$ \\hookleftarrow $\\swarrow$ \\swarrow $\\Leftarrow$ \\Leftarrow $\\hookrightarrow$ \\hookrightarrow $\\nwarrow$ \\nwarrow $\\nleftarrow$ \\nleftarrow $\\nrightarrow$ \\nrightarrow $\\nLeftarrow$ \\nLeftarrow $\\nRightarrow$ \\nRightarrow $\\nleftrightarrow$ \\nleftrightarrow $\\nLeftrightarrow$ \\nLeftrightarrow $\\dashrightarrow$ \\dashrightarrow $\\dashleftarrow$ \\dashleftarrow $\\leftleftarrows$ \\leftleftarrows $\\leftrightarrows$ \\leftrightarrows $\\Lleftarrow$ \\Lleftarrow $\\twoheadleftarrow$ \\twoheadleftarrow $\\leftarrowtail$ \\leftarrowtail $\\looparrowleft$ \\looparrowleft $\\leftrightharpoons$ \\leftrightharpoons $\\curvearrowleft$ \\curvearrowleft $\\circlearrowleft$ \\circlearrowleft $\\Lsh$ \\Lsh $\\upharpoonleft$ \\upharpoonleft $\\downharpoonleft$ \\downharpoonleft $\\upuparrows$ \\upuparrows $\\multimap$ \\multimap $\\leftrightsquigarrow$ \\leftrightsquigarrow $\\rightrightarrows$ \\rightrightarrows $\\rightleftarrows$ \\rightleftarrows $\\twoheadrightarrow$ \\twoheadrightarrow $\\rightarrowtail$ \\rightarrowtail $\\looparrowright$ \\looparrowright $\\rightleftharpoons$ \\rightleftharpoons $\\curvearrowright$ \\curvearrowright $\\circlearrowright$ \\circlearrowright $\\Rsh$ \\Rsh $\\downdownarrows$ \\downdownarrows $\\upharpoonright$ \\upharpoonright $\\downharpoonright$ \\downharpoonright $\\rightsquigarrow$ \\rightsquigarrow 在箭头上面写字$$X\\stackrel{F}{\\longrightarrow}Y$$ 参考[1] https://zhuanlan.zhihu.com/p/110756681[2] https://blog.csdn.net/LCCFlccf/article/details/89643585[3] https://artofproblemsolving.com/wiki/index.php/LaTeX:Symbols[4] https://artofproblemsolving.com/wiki/index.php/LaTeX:Commands[5] https://blog.csdn.net/Artoria_QZH/article/details/103310704","tags":[{"name":"Markdown","slug":"Markdown","permalink":"https://eastsheng.github.io/tags/Markdown/"},{"name":"LaTex","slug":"LaTex","permalink":"https://eastsheng.github.io/tags/LaTex/"}],"categories":[{"name":"程序学习","slug":"程序学习","permalink":"https://eastsheng.github.io/categories/%E7%A8%8B%E5%BA%8F%E5%AD%A6%E4%B9%A0/"},{"name":"Markdown","slug":"程序学习/Markdown","permalink":"https://eastsheng.github.io/categories/%E7%A8%8B%E5%BA%8F%E5%AD%A6%E4%B9%A0/Markdown/"}]},{"title":"Pandas 基本操作","date":"2021-11-05T12:04:28.000Z","path":"wiki/2021/11/05/codes/python/pandas_1/","text":"[toc] DataFrame 基本操作1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950import pandas as pddata = &#123;&#x27;state&#x27;: [&#x27;Ohio&#x27;, &#x27;Ohio&#x27;, &#x27;Ohio&#x27;, &#x27;Nevada&#x27;, &#x27;Nevada&#x27;, &#x27;Nevada&#x27;], &#x27;year&#x27;: [2000, 2001, 2002, 2001, 2002, 2003], &#x27;pop&#x27;: [1.5, 1.7, 3.6, 2.4, 2.9, 3.2]&#125;fm = pd.DataFrame(data)print(fm)# out state year pop0 Ohio 2000 1.51 Ohio 2001 1.72 Ohio 2002 3.63 Nevada 2001 2.44 Nevada 2002 2.95 Nevada 2003 3.2[Finished in 1.2s]# slice# 读取列print(fm[&quot;state&quot;]) #使用列标签print(fm.state) #使用列标签print(fm.iloc[:,0]) #切片# 读取行print(fm[0:2])print(fm.loc[0:2])# delete columnfm = fm.drop([&quot;state&quot;],axis=1)print(fm)# out year pop0 2000 1.51 2001 1.72 2002 3.63 2001 2.44 2002 2.95 2003 3.2[Finished in 4.8s]# delete rowfm = fm.drop([0],axis=0)print(fm)# out year pop1 2001 1.72 2002 3.63 2001 2.44 2002 2.95 2003 3.2 DataFrame.plot1234567891011121314151617181920data = &#123;&#x27;state&#x27;: [&#x27;Ohio&#x27;, &#x27;Ohio&#x27;, &#x27;Ohio&#x27;, &#x27;Nevada&#x27;, &#x27;Nevada&#x27;, &#x27;Nevada&#x27;], &#x27;year&#x27;: [2000, 2001, 2002, 2001, 2002, 2003], &#x27;pop&#x27;: [1.5, 1.7, 3.6, 2.4, 2.9, 3.2]&#125;fm = pd.DataFrame(data)print(fm)fm.plot(x=&quot;state&quot;,y=&quot;pop&quot;,figsize=(16,8), kind=&#x27;scatter&#x27;, # logx=True, # logy=True, # grid=True, # legend=True, # xlim=[0,100000], # ylim=[-4000,4000], # xlabel=&quot;Time(fs)&quot;, # ylabel=&quot;Pressure(Pa)&quot;, # fontsize=22, )plt.show() DataFrame表格(列)拼接concat1concat(objs, axis=0, join=‘outer’, join_axes=None, ignore_index=False, keys=None, levels=None, names=None, verify_integrity=False,copy=True) 部分参数说明：axis：拼接轴方向，默认为0，沿行拼接；若为1，沿列拼接join：默认外联’outer’，拼接另一轴所有的label，缺失值用NaN填充；内联’inner’，只拼接另一轴相同的label；join_axes: 指定需要拼接的轴的labels，可在join既不内联又不外联的时候使用ignore_index：对index进行重新排序keys：多重索引 12345678910111213import pandas as pddf_aa = pd.DataFrame(&#123;&#x27;zh&#x27;:[&#x27;zhang&#x27;,&#x27;li&#x27;,&#x27;wang&#x27;,&#x27;zhao&#x27;], &#x27;hero&#x27;:[&#x27;达摩&#x27;,&#x27;典韦&#x27;,&#x27;曹操&#x27;,&#x27;李白&#x27;], &#x27;score&#x27;:[&#x27;85&#x27;,&#x27;73&#x27;,&#x27;66&#x27;,&#x27;81&#x27;]&#125;)df_zz = pd.DataFrame(&#123;&#x27;en&#x27;:[&#x27;wang&#x27;,&#x27;zhao&#x27;,&#x27;Trump&#x27;,&#x27;Obama&#x27;], &#x27;hero&#x27;:[&#x27;曹操&#x27;,&#x27;墨子&#x27;,&#x27;曹操&#x27;,&#x27;李白&#x27;], &#x27;level&#x27;:[&#x27;青铜&#x27;,&#x27;白银&#x27;,&#x27;黄金&#x27;,&#x27;钻石&#x27;]&#125;)df_concat = pd.concat([df_aa,df_zz]) # 默认沿axis=0，join=‘out’的方式进行concatdf_igno_idx = pd.concat([df_aa,df_zz], ignore_index=True)&#x27;&#x27;&#x27;# 重新设定index(效果类似于pd.concat([df1,df2]).reset_index(drop=True))&#x27;&#x27;&#x27;df_col = pd.concat([df_aa,df_zz], axis=1) 参考：https://blog.csdn.net/wsp_1138886114/article/details/101015664","tags":[{"name":"Python","slug":"Python","permalink":"https://eastsheng.github.io/tags/Python/"},{"name":"Pandas","slug":"Pandas","permalink":"https://eastsheng.github.io/tags/Pandas/"},{"name":"Pandas基础","slug":"Pandas基础","permalink":"https://eastsheng.github.io/tags/Pandas%E5%9F%BA%E7%A1%80/"}],"categories":[{"name":"程序学习","slug":"程序学习","permalink":"https://eastsheng.github.io/categories/%E7%A8%8B%E5%BA%8F%E5%AD%A6%E4%B9%A0/"},{"name":"Python","slug":"程序学习/Python","permalink":"https://eastsheng.github.io/categories/%E7%A8%8B%E5%BA%8F%E5%AD%A6%E4%B9%A0/Python/"},{"name":"Pandas","slug":"程序学习/Python/Pandas","permalink":"https://eastsheng.github.io/categories/%E7%A8%8B%E5%BA%8F%E5%AD%A6%E4%B9%A0/Python/Pandas/"}]},{"title":"论文笔记2021-11","date":"2021-11-01T09:45:28.000Z","path":"wiki/2021/11/01/notes/PaperReadNote202111/","text":"[toc] 2021-11-01极性分子 在化学中，极性（polarity），是指一个共价键或一个共价分子中电荷分布的不均匀性。 如果电荷分布得不均匀，则称该键或分子为极性；如果均匀，则称为非极性。 共价键的极性 共价键的极性是因为成键的两个原子电负度不相同而产生的。 键的极性程度可以用两个原子电负度之差来衡量。差值在0.4到1.7之间的是典型的极性共价键，差值在0.0到0.4之间的是非极性共价键，两个原子完全相同（当然电负度也完全相同）时，差值为0，这时原子间成非极性键。 键可以堕入两个极端——极性和非极性。当构成共价键的不同离子的电负度完全相同，便会产生完全非极性的键。相反，当两者的电负度相差值大得足以令其中一种离子完全取走了另一方的一粒电子，就会产生极性键——或更贴切而言，是离子键。“极性”和“非极性”二词多用于形容共价键上。 水是极性化合物。由于氧原子强烈的电负度，电子对明显偏向氧一侧，因此氧周围聚集负电荷（红色部分），氢原子周围聚集正电荷（蓝色部分）。 分子的极性 三角形的三氟化硼分子。尽管3根键都是极性键，但分子是非极性分子。因为分子对称，正负电荷中心重合了。 Voronoi 泰森多边形法 泰森多边形又叫冯洛诺伊图（Voronoi diagram），得名于Georgy Voronoi，是一组由连接两邻点线段的垂直平分线组成的连续多边形组成。一个泰森多边形内的任一点到构成该多边形的控制点的距离小于到其他多边形控制点的距离。","tags":[{"name":"Paper Notes","slug":"Paper-Notes","permalink":"https://eastsheng.github.io/tags/Paper-Notes/"},{"name":"2021-11","slug":"2021-11","permalink":"https://eastsheng.github.io/tags/2021-11/"}],"categories":[{"name":"学习笔记","slug":"学习笔记","permalink":"https://eastsheng.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"},{"name":"论文笔记","slug":"学习笔记/论文笔记","permalink":"https://eastsheng.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E8%AE%BA%E6%96%87%E7%AC%94%E8%AE%B0/"},{"name":"2021","slug":"学习笔记/论文笔记/2021","permalink":"https://eastsheng.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E8%AE%BA%E6%96%87%E7%AC%94%E8%AE%B0/2021/"}]},{"title":"Lammps Tutorials - 建模","date":"2021-10-20T10:11:28.000Z","path":"wiki/2021/10/20/softwares/lammps/LammpsBuildModel/","text":"[toc] Build TOPO LAMMPS DATA1. 获得小分子pdb文件 可以通过MS、Ovito、Avogadro…… 2. 优化结构 先使用Avogadro的Extensions&lt;Optimize Geometry优化； 然后，使用Ligpargen工具优化，获得PDB和LAMMPS，分别是优化后的pdb文件和lammpsdata文件； 3. 构建体系 使用Packmol+Moltemplate构建体系 首先，使用Packmol，将优化后的pdb文件，组合起来； 然后，通过Moltemplate生成LAMMPS data和inputfile； 在此之前，需要的文件： 1234$ packmol组合后的pdb文件；$ 每个小分子对应的lt文件；# 可以使用ltemplify.py通过lammpsdata和inputfile获得，具体参考手册例如：ltemplify.py -name &quot;Resin inherits OPLSAA&quot; resin.data &gt;resin.lt$ system.lt文件 # 执行文件 执行以下命令即可获得lammpsdata和简单的inputfile 1moltemplate.sh -pdb system.pdb -atomstyle &quot;full&quot; system.lt 指定某个原子顺序 1moltemplate.sh -a &quot;@atom:Groupname/atomtype 2&quot; system.lt Atomsk 晶体构建 构建一个金属界面系统: 1234567891011121314151617# run this can build a interface system between Au and Ti# 1. build Au part face centered cubicatomsk --create fcc 4.08 Au -duplicate 40 40 16 Au_cell.cfg# 2. build Ti part Hexagonal close-packedatomsk --create hcp 2.95 4.686 Ti -duplicate 40 20 14 -orthogonal-cell Ti_cell.cfg# 3. merge Au and Tiatomsk --merge Z 2 Au_cell.cfg Ti_cell.cfg Au_Ti_cell.cfg# 4. cutatomsk Au_Ti_cell.cfg -cut above 50 x -cut above 50 y Au_Ti_system.cfg# 5. convert lammpsatomsk Au_Ti_system.cfg lammps# 6. Modify the box size in Au_Ti_system.lmp manually clayff力场生成 lammps data 在MS中识别clayff力场（根据原子类型，修改力场识别） 使用msi2lmp.exe工具生成data 1msi2lmp.exe quartz_alpha5x5 -i -class I -frc clayff.frc 对生成的data进行修改，使用msi2clayff.py工具 并根据需求手动修改。 快速单斜转正交Materials Studio快速转换正交 Build &gt; Symmetry &gt; Redefine Lattice &gt; New Lattice 123-1 1 0 -1 -1 0 0 0 1 1232 1 0 0 1 0 0 0 1 atmosk转换正交 不论初始的夹角为多少度，都可以使用atomsk转为正交结构 1atomsk Bi.cif -orthogonal-cell Bi.lmp 参考: [1] https://zhuanlan.zhihu.com/p/375225878 [2] https://zhuanlan.zhihu.com/p/626663825 Openbabel GUI http://openbabel.org/wiki/Main_Page","tags":[{"name":"Lammps Tutorials","slug":"Lammps-Tutorials","permalink":"https://eastsheng.github.io/tags/Lammps-Tutorials/"},{"name":"Notes","slug":"Notes","permalink":"https://eastsheng.github.io/tags/Notes/"}],"categories":[{"name":"软件学习","slug":"软件学习","permalink":"https://eastsheng.github.io/categories/%E8%BD%AF%E4%BB%B6%E5%AD%A6%E4%B9%A0/"},{"name":"Lammps","slug":"软件学习/Lammps","permalink":"https://eastsheng.github.io/categories/%E8%BD%AF%E4%BB%B6%E5%AD%A6%E4%B9%A0/Lammps/"}]},{"title":"Python color and marker","date":"2021-10-19T10:11:28.000Z","path":"wiki/2021/10/19/codes/python/python_color_marker/","text":"[toc] Color 对照表常用 基础色 Tab 详细 Line类型1234linestyle=&#x27;solid&#x27; # &#x27;-&#x27;linestyle=&#x27;dotted&#x27; # &#x27;.&#x27;linestyle=&#x27;dashed&#x27; # &#x27;--&#x27;linestyle=&#x27;dashdot&#x27; # &#x27;-.&#x27; Marker常用 高级Marker123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960可以显示的形状 marker名称ϖ \\varpiϱ \\varrhoς \\varsigmaϑ \\varthetaξ \\xiζ \\zetaΔ \\DeltaΓ \\GammaΛ \\LambdaΩ \\OmegaΦ \\PhiΠ \\PiΨ \\PsiΣ \\SigmaΘ \\ThetaΥ \\UpsilonΞ \\Xi℧ \\mho∇ \\nablaℵ \\alephℶ \\bethℸ \\dalethℷ \\gimel/ /[ [⇓ \\Downarrow⇑ \\Uparrow‖ \\Vert↓ \\downarrow⟨ \\langle⌈ \\lceil⌊ \\lfloor⌞ \\llcorner⌟ \\lrcorner⟩ \\rangle⌉ \\rceil⌋ \\rfloor⌜ \\ulcorner↑ \\uparrow⌝ \\urcorner\\vert&#123; \\&#123;\\|&#125; \\&#125;] ]|⋂ \\bigcap⋃ \\bigcup⨀ \\bigodot⨁ \\bigoplus⨂ \\bigotimes⨄ \\biguplus⋁ \\bigvee⋀ \\bigwedge∐ \\coprod∫ \\int∮ \\oint∏ \\prod∑ \\sum 自定义Marker12345678910111213141516171819import matplotlib.pyplot as pltplt.rcParams[&#x27;font.sans-serif&#x27;]=[&#x27;SimHei&#x27;] # 用于显示中文plt.rcParams[&#x27;axes.unicode_minus&#x27;] = False # 用于显示中文plt.figure(dpi=200)#常规marker使用plt.plot([1,2,3],[1,2,3],marker=4, markersize=15, color=&#x27;lightblue&#x27;,label=&#x27;常规marker&#x27;)plt.plot([1.8,2.8,3.8],[1,2,3],marker=&#x27;2&#x27;, markersize=15, color=&#x27;#ec2d7a&#x27;,label=&#x27;常规marker&#x27;)#非常规marker使用#注意使用两个$符号包围名称plt.plot([1,2,3],[4,5,6],marker=&#x27;$\\circledR$&#x27;, markersize=15, color=&#x27;r&#x27;, alpha = 0.5 ,label=&#x27;非常规marker&#x27;)plt.plot([1.5,2.5,3.5],[1.25,2.1,6.5],marker=&#x27;$\\heartsuit$&#x27;, markersize=15, color=&#x27;#f19790&#x27;, alpha=0.5,label=&#x27;非常规marker&#x27;)plt.plot([1,2,3],[2.5,6.2,8],marker=&#x27;$\\clubsuit$&#x27;, markersize=15, color=&#x27;g&#x27;, alpha=0.5,label=&#x27;非常规marker&#x27;)#自定义markerplt.plot([1.2,2.2,3.2],[1,2,3],marker=&#x27;$666$&#x27;, markersize=15, color=&#x27;#2d0c13&#x27;,label=&#x27;自定义marker&#x27;)plt.legend(loc=&#x27;upper left&#x27;)for i in [&#x27;top&#x27;,&#x27;right&#x27;]: plt.gca().spines[i].set_visible(False) 参考 14052165.html","tags":[{"name":"Python","slug":"Python","permalink":"https://eastsheng.github.io/tags/Python/"},{"name":"Python color and marker","slug":"Python-color-and-marker","permalink":"https://eastsheng.github.io/tags/Python-color-and-marker/"}],"categories":[{"name":"程序学习","slug":"程序学习","permalink":"https://eastsheng.github.io/categories/%E7%A8%8B%E5%BA%8F%E5%AD%A6%E4%B9%A0/"},{"name":"Python","slug":"程序学习/Python","permalink":"https://eastsheng.github.io/categories/%E7%A8%8B%E5%BA%8F%E5%AD%A6%E4%B9%A0/Python/"}]},{"title":"Linux Python默认版本设置","date":"2021-10-19T10:11:28.000Z","path":"wiki/2021/10/19/codes/python/python_link/","text":"[toc] 查看已经安装的Python版本12345ls /usr/bin/python*# out/usr/bin/python2 /usr/bin/python3.8 /usr/bin/python3-futurize/usr/bin/python2.7 /usr/bin/python3.8-config /usr/bin/python3-pasteurize/usr/bin/python3 /usr/bin/python3-config 两种方法设置python3.8为默认版本： 在~&#x2F;.bashrc中添加python别名设置： 123456# 打开.bashrcsudo vim ~/.bashrc# 在.bashrc中任意位置添加alias python=&quot;/usr/bin/python3.8&quot;# 保存修改source ~/.bashrc 给python3.8设置python软连接 1234# 删除以前软链接sudo rm /usr/bin/python# 创建软链sudo ln -s /usr/bin/python3.8 /usr/bin/python","tags":[{"name":"Python","slug":"Python","permalink":"https://eastsheng.github.io/tags/Python/"},{"name":"Python默认版本设置","slug":"Python默认版本设置","permalink":"https://eastsheng.github.io/tags/Python%E9%BB%98%E8%AE%A4%E7%89%88%E6%9C%AC%E8%AE%BE%E7%BD%AE/"},{"name":"Ubuntu20.04","slug":"Ubuntu20-04","permalink":"https://eastsheng.github.io/tags/Ubuntu20-04/"}],"categories":[{"name":"程序学习","slug":"程序学习","permalink":"https://eastsheng.github.io/categories/%E7%A8%8B%E5%BA%8F%E5%AD%A6%E4%B9%A0/"},{"name":"Python","slug":"程序学习/Python","permalink":"https://eastsheng.github.io/categories/%E7%A8%8B%E5%BA%8F%E5%AD%A6%E4%B9%A0/Python/"}]},{"title":"远程计算机或设备将不接受连接","date":"2021-10-06T11:42:18.000Z","path":"wiki/2021/10/06/others/2021/windows-internet/","text":"远程计算机或设备将不接受连接？ QQ、微信有网，浏览器没网 解决方法 ： 找到上图设置&gt;代理，关掉代理就好了。","tags":[{"name":"Windows","slug":"Windows","permalink":"https://eastsheng.github.io/tags/Windows/"},{"name":"远程计算机或设备将不接受连接","slug":"远程计算机或设备将不接受连接","permalink":"https://eastsheng.github.io/tags/%E8%BF%9C%E7%A8%8B%E8%AE%A1%E7%AE%97%E6%9C%BA%E6%88%96%E8%AE%BE%E5%A4%87%E5%B0%86%E4%B8%8D%E6%8E%A5%E5%8F%97%E8%BF%9E%E6%8E%A5/"}],"categories":[{"name":"Windows","slug":"Windows","permalink":"https://eastsheng.github.io/categories/Windows/"}]},{"title":"论文笔记2021-09","date":"2021-09-01T01:29:28.000Z","path":"wiki/2021/09/01/notes/PaperReadNote202109/","text":"[toc] 2021-09-01沥青：宏观&amp;微观论[1] While asphalt physical failures and performance are observed on the macroscale, the asphalt chemistries, mechanical properties, reactions and phase changes occur at the microscale and nanoscale. OPLS-AA是一个什么样的力场[1] OPLS-AA force field is a Lennard-Jones force field which approximates the interaction between two molecules through repulsive and attractive forces.全原子力场中各参数的含义及其在LAMMPS中的应用 Resin and asphaltene Resin and asphaltene have similar chemical properties and structural shapes 什么是 A partial douuble bond 部分双键是由结构中的共振引起的，共振是π电子(形成双键中的第二个键的电子)从一个位置转移到另一个位置. 它们“partial”的原因是，这种结构可以在两种或两种以上的构象之间共振或翻转。 在这些构象中，至少有一个具有所研究的两个原子之间的双键特征，至少有一个具有单键特征。 键会在单键和双键之间产生共鸣或翻转。事实上，它们存在于两者之间，状态之间没有交替，只是一个恒定的平均构型。 微流控技术 通常把在微纳尺度空间里流动的流体称为微纳流体，把在微纳尺度通道中对低雷诺数或层流条件下微流体进行驱替控制的相关技术称为微流控技术 微流控技术能够在微米尺度空间对流体进行操控，将生物、化学等实验室的基本功能微缩到一个几平方厘米的模型上，承载这一功能的微流控模型又可称为芯片实验室(Lab on a chip) 2021-09-28扩散系数 均方位移(mean square displacement)： 扩散系数(diffusion coefficient)： 不同扩散模式下粒子的均方位移MSD与时间t的关系很不一样. 静态模式 Stationary mode:粒子基本不运动, 扩散系数接近零. 简单(或布朗)扩散模式 Simple diffusion mode:粒子做简单的布朗扩散运动 定向扩散(或传输)模式 Directed diffusion mode (transport mode):粒子在做随机扩散的同时沿某一方向以恒定的速度漂移 限制扩散模式 Restricted diffusion mode:粒子在做布朗扩散时, 其运动空间被限制在某一范围内 受障模式 Obstacle-impeded diffusion mode:粒子进行自由扩散时受障碍物限制, 障碍物可以是固定的, 或者有一定的移动能力. 在这种情况下, 长程扩散会减弱但仍大于零 简单扩散模式对应的扩散系数大多数情况下MD研究的是简单扩散模式，在此假定下求扩散系数的步骤是先算MSD, 然后拟合MSD线性部分的斜率, 再除以6(二维体系除以4)就是扩散系数 参考链接： [1] http://blog.sciencenet.cn/blog-548663-1052601.html [2] https://www.fermitech.com.cn/wiki/doku.php?id=adf:diffussionofthanol","tags":[{"name":"Paper Notes","slug":"Paper-Notes","permalink":"https://eastsheng.github.io/tags/Paper-Notes/"},{"name":"2021-09","slug":"2021-09","permalink":"https://eastsheng.github.io/tags/2021-09/"}],"categories":[{"name":"学习笔记","slug":"学习笔记","permalink":"https://eastsheng.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"},{"name":"论文笔记","slug":"学习笔记/论文笔记","permalink":"https://eastsheng.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E8%AE%BA%E6%96%87%E7%AC%94%E8%AE%B0/"},{"name":"2021","slug":"学习笔记/论文笔记/2021","permalink":"https://eastsheng.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E8%AE%BA%E6%96%87%E7%AC%94%E8%AE%B0/2021/"}]},{"title":"U盘突然出现错误“文件或目录损坏且无法读取”？","date":"2021-08-30T11:42:18.000Z","path":"wiki/2021/08/30/others/2021/windows-usb/","text":"U盘突然出现错误“文件或目录损坏且无法读取”？解决方法 ： 如果里面没有重要的文件，直接格式化就好了","tags":[{"name":"Windows","slug":"Windows","permalink":"https://eastsheng.github.io/tags/Windows/"},{"name":"U盘","slug":"U盘","permalink":"https://eastsheng.github.io/tags/U%E7%9B%98/"},{"name":"文件或目录损坏且无法读取","slug":"文件或目录损坏且无法读取","permalink":"https://eastsheng.github.io/tags/%E6%96%87%E4%BB%B6%E6%88%96%E7%9B%AE%E5%BD%95%E6%8D%9F%E5%9D%8F%E4%B8%94%E6%97%A0%E6%B3%95%E8%AF%BB%E5%8F%96/"}],"categories":[{"name":"Windows","slug":"Windows","permalink":"https://eastsheng.github.io/categories/Windows/"}]},{"title":"Hotmail邮箱和Gmail邮箱在Foxmail登录失败","date":"2021-08-19T15:52:18.000Z","path":"wiki/2021/08/19/others/2021/foxmail/","text":"把接收服务器类型改为IMAP后Hotmail就可以登陆了 Gmail还是登录不了 但是从Foxmail登录Gmail，会收到登录尝试已被阻止的邮件，所以应该可以登录，只不过安全性高一些 暂时不登陆了。 Hotmail发不了邮件解决 部分服务器需要在“服务器”页下方的“高级”中勾选“如果服务器支持，就使用STARTTLS加密传输”，例如vip163账户、hotmail账户（包含@hotmail.com、@live.com和@live.cn）等。 https://help.foxmail.com/cgi-bin/help?subtype=1&amp;no=1000848&amp;id=20037","tags":[{"name":"Windows","slug":"Windows","permalink":"https://eastsheng.github.io/tags/Windows/"},{"name":"Foxmail","slug":"Foxmail","permalink":"https://eastsheng.github.io/tags/Foxmail/"}],"categories":[{"name":"Windows","slug":"Windows","permalink":"https://eastsheng.github.io/categories/Windows/"}]},{"title":"Origin突然打不开？任务栏显示“已挂起”","date":"2021-08-01T15:58:18.000Z","path":"wiki/2021/08/01/others/2021/windows-origin-error/","text":"科研绘图软件“Origin”打不开，任务栏显示已挂起，就自动关闭了？ 重装了很多次，还是一样。 解决方法 想想把上次能打开时是什么时候，这之后是否安装过字体； 把这个字体删除就可以了。 字体文件夹C:\\Windows\\Fonts","tags":[{"name":"Origin","slug":"Origin","permalink":"https://eastsheng.github.io/tags/Origin/"}],"categories":[{"name":"科研绘图","slug":"科研绘图","permalink":"https://eastsheng.github.io/categories/%E7%A7%91%E7%A0%94%E7%BB%98%E5%9B%BE/"}]},{"title":"论文笔记2021-08","date":"2021-08-01T06:14:28.000Z","path":"wiki/2021/08/01/notes/PaperReadNote202108/","text":"[toc] 2021-08-01润湿 润湿是指一种流体在某一固体表面被另一种流体置换现象。 润湿包括三相，其中至少有两相是流体。固体之外的液体、气体都属于流体。 岩石表面润湿性 岩石表面润湿性是影响油、水在岩石孔隙中分布、流动的一个主要因素; 岩石润湿性直接制约着油、水两相相对渗透率、毛细管力以及石油采收率。 按照油藏岩石表面微观结构、表面原子、分子、化学基团分布的不同，润湿可分为均匀润湿和非均匀润湿。 均匀润湿是指岩石表面结构、化学基团完全一致，岩石表面的润湿性处处相同。均匀润湿是一种理想情况，实际的岩石都是非均匀润湿的。 润湿从强水润湿渐变到中间润湿直到强油润湿，非均匀润湿包括斑点润湿、混合润湿。 相对渗透率曲线法 相对渗透率曲线法是在大量实验的基础上提出的评定润湿性的方法 表征润湿性参数 接触角 分子模拟 分子模拟一般会被分为两大类 分子动力学（Molecular dynamics, MD） 分子动力学方法的理论基础是牛顿力学力学方程，使用经验势函数描述相互作用，根据粒子的受力情况计算粒子的轨迹，计算体系的物理化学性质。 分子动力学模拟的一般步骤依次是，构建模型；给定合适的初始条件和模拟参数；平衡体系；基于平衡体系计算宏观物理量，分析构型。 蒙特卡洛方法（Monte Carlo, MC） 蒙特卡洛模拟的理论基础是统计热力学。在模拟过程中根据一定的规则随机地产生很多尝试构象。对于各个尝试构象，软件会计算其能量，保留合理的构象。 分子模拟根据模拟尺度的不同，又可以分为介观模拟、粗粒化模拟、原子模拟等。 2021-08-01格子Boltzmann方法（LBM） 诞生于上世纪80-90年代，是一种介观尺度数值模拟； 由于该方法在格子空间求解Boltzmann方程，因此称为格子Boltzmann方法。 可以模拟多种输运现象，包括流动、扩散、导热等。 导热微分方程 物理意义： 反映了物体的温度随时间和空间的变化关系。 不含内热源时 $\\rho c_p \\frac {\\partial T} {\\partial t}$ &#x3D; $\\Delta \\cdot (\\lambda \\Delta T)$ $\\rho$为密度，$\\lambda$为热导率，$c_p$为比热容。 一维导热过程：$\\rho c_p \\frac {\\partial T} {\\partial t}$ &#x3D; $\\frac \\partial {\\partial x} (\\lambda \\frac {\\partial T} {\\partial x} )$ 热扩散率（Thermal diffusivity） $a&#x3D;\\frac \\lambda {\\rho c}$ 单位 ($m^2&#x2F;s$) 物理意义： 热扩散率$a$反应了导热过程中材料的导热能力（$\\lambda$）与沿途物质储热能力（$\\rho c$）之间的关系。 表征物体被加热或冷却时，物体内各部分温度趋于均匀一致的能力。 2021-08-04流固耦合 一般而言，流固耦合过程中只有一种流体（单相）起主导作用，称为单相流固耦合。 准确计算流体对固体施加的作用力是流固耦合模拟的基础和前提，只有流固作用力计算得准才能保证后续流固耦合过程的真实有效。 另外，对于一些特殊的流固耦合过程会涉及两相流体与固体相互作用，因此称为两相流固耦合。 对于流固耦合模型，最重要的是，如何将固体求解器与流体求解器进行耦合，也即，保证固体附近流体的无滑移边界条件以及准确计算流体对固体施加的作用力。 2021-08-18油水前缘 油水前缘是指水驱过程中，分隔油区与油水两相区的界面。油水前缘的形状会严重影响体积波及效率。 EOR(Enhanced Oil Recovery):提高石油采收率2021-08-22二氧化硅(SiO2) 是一种酸性氧化物 约占地壳质量的12% 自然界中二氧化硅的存在形态有结晶形和无定形两大类 石英部分分类： 形式 晶体对称性(皮尔逊符号, 组号) ρ(g&#x2F;cm3) 注释 结构 α-石英 六方晶系 (三角形)hP9, P3221 No.154 2.648 使单个单晶具有光学活性的螺旋链; α-石英在846K下转化为β-石英 β-石英 六方晶系hP18, P6222, No. 180[7] 2.533 与α-石英密切相关（具有155°的Si-O-Si角）和光学活性; β-石英在1140K转化为β-鳞石英 α-方石英 四方晶系tP12, P41212, No. 92[9] 2.334 正常压力下的稳定形式 β-方石英 立方晶系cF104, Fd3m, No.227[10] 与α-方石英密切相关; 在1978 K熔化 密勒指数(Miller indices) 是一种用来描述某一种晶格点阵(布拉菲格子)中某一晶面族的数组。 2021-08-24羟基（oxhydryl） 是一种常见的极性基团，化学式为-OH 羟基与水有某些相似的性质，羟基是典型的极性基团，与水可形成氢键，在无机化合物水溶液中以带负电荷的离子形式存在（OH -），称为氢氧根。 羟基主要分为醇羟基，酚羟基等。 烷烃 烷烃是一类有机化合物，分子中的碳原子都以碳碳单键相连，其余的价键都与氢结合而成的化合物，分为环烷烃和链烷烃两类。 链烷烃的通式为CnH2n+2，环烷烃的通式为CnH2n，是最简单的一类有机化合物。烷烃的主要来源是石油和天然气，是重要的化工原料和能源物资。 一些链烷烃和环烷烃的物理常数名称分子式沸点/℃熔点/℃相对密度甲烷CH4-161.7-182.6——乙烷C2H6-88.6-182.8——丙烷（环丙烷）C3H8(C3H6)-42.2(-32.7)-187.1(-127.6)0.5005丁烷（环丁烷）C4H10(C4H8)-0.5(12.5)-138.4(-80)0.5788戊烷（环戊烷）C5H12(C5H10)36.1(49.3)-129.3(-93.9)0.6264(0.7457)己烷（环己烷）C6H14(C6H12)68.7(80.7)-94.0(6.6)0.6594(0.7786)庚烷（环庚烷）C7H16(C7H14)98.4(118.5)-90.5(-12.0)0.6837(0.8098)辛烷（环辛烷）C8H18(C8H16)125.6(150)-56.8(14.3)0.7028(0.8349)壬烷C9H20150.7-53.70.7179癸烷C10H22174.0-29.70.7298十一烷C11H24195.8-25.60.7404十二烷C12H26216.3-9.60.7493十三烷C13H28245.4-60.7568十四烷C14H302515.50.7636十五烷C15H32268100.7688十六烷C16H3428018.10.7749十七烷C17H3630322.00.7767十八烷C18H3830828.00.7767十九烷C19H4033032.00.7776二十烷C20H4234336.40.7886三十烷C30H62449.7660.7750四十烷C40H82——81—— 2021-08-29精细化力场 精细化力场对分子的描述是超原子级别的，力场中所包含的位点个数多于分子中的原子数，可以更加细致地描述分子的相互作用，如水分子力场中就存在质荷与电荷分开的情况。 全&#x2F;联合原子力场 原子力场对分子的描述是（准）原子级别的，若考虑分子中的所有原子并为其定义力场参数，则称为全原子力场(OPLS-AA). 若忽略分子中的一些原子（如非极性H原子），将相互作用整合到相邻原子上，则称为联合原子力场(OPLS-UA)。 粗粒化力场 粗粒化力场对分子的描述是亚原子级别的，它进一步抽象分子结构，将更大的基团视为一个位点，从而简化分子的拓扑形态。 水分子 水分子是极性分子 SPC（Simple Point Charge）模型 2021-08-30There are three major types of EOR : miscible displacement chemical flooding and thermal recovery. 稠油 稠油四组分：沥青质、胶质、饱和烃和芳香烃（剩余分） 一般认为，稠油具有粘度高，密度大的特性，其内所含有的沥青质、胶质含量远远高于普通原油。 中国稠油油藏与国外相差较大，表现在高黏度、低密度、沥青质含量较低、胶质含量较高以及金属含量较低等方面。 胶质中含有较多的－ＯＲ、－ＯＨ、－ＣＯＯＲ、－ＳＨ等活性基团。因此，胶质的热稳定性较差，在中高温条件下易发生化学反应，向沥青质进行转化。 沥青质是原油中分子量最大的一类组分，相对密度大于１，主要由多环含氧和含硫化合物组成。沥青质不溶于正戊烷但可溶于甲苯。 渤海油田所蕴含的油藏中，85%为稠油油藏;且较为分散，开采时出砂现象较为严重，有一定的开采困难。 海上油藏 我国海上油田稠油储量占总地质储量的 70%左右,开采方式主要有两种 一种是常规的注水开采，即普通的水驱采油 一种开采方式为冷采-蒸汽吞吐-蒸汽或热水驱的一系列连续操作流程的热力采油开采方式 渤海油田特点： 油区分布零散,油藏区块小而多 油藏储层大多数为疏松的砂岩结构,开采过程中出砂情况比较严重 2021-08-31蒸汽吞吐（CyclicSteamStimulation，CSS） 汽吞吐就是先向油井注入一定量的蒸汽，关井一段时间，待蒸汽的热能向油层扩散后，再开井生产的一种开采重油的增产方法。蒸汽吞吐作业的过程可分为三个阶段，即注汽、焖井及回采。 具体步骤为：①将高温蒸汽快速注入到油层中；②焖井，通常2～5天；③开井生产。要根据井深、油层性质、黏度等因素来确定蒸汽注入量以及焖井时间。 蒸汽干度 每千克湿蒸汽中含有干饱和蒸汽的质量百分数。蒸汽干度 是油田注汽锅炉安全运行中的一个重要参数，也是影响稠油热采效果的一个重要指标。 湿蒸汽中气相质量与湿蒸汽总质量（气相+液相）的比值。它是衡量蒸汽质量的重要指标。 我国稠油开发的难点 我国目前已在12个盆地发现了70多个稠油油田，探明储量40亿吨。储量最多的是辽河油田，然后依次是胜利油田、克拉玛依油田和河南油田。海上稠油集中分布在渤海地区，渤海已探明原油地质储量45亿立方米，其中62％为稠油。 难点1：黏度大、流动性差 难点2：埋藏深、储层差：与国外稠油油田相比，我国的稠油埋藏深（集中在1000～1500米），又因为储集在疏松的砂岩层中，在开发过程中容易出砂，所以综合开发成本较高。 稠油开发方式 1．露天开采（SurfaceMining） 2．注入降黏剂（InjectionViscosityReducingAgent） 3．蒸汽吞吐法（CyclicSteamStimulation，CSS） 4．蒸汽驱油（SteamFlooding） 5．火烧油层法（InSituCombustion） 6．蒸汽辅助重力泄油（SteamAssistedGravityDrainage，SAGD） 7．水平段注空气技术（ToetoHeelAirInjection，THAI） 8．稠油出砂冷采技术（ColdHeavyOilProductionwithSand，CHOPS） 稠油屈服力 稠油流变性中一个非常重要的特征就是其具有宾汉流体特征，即为屈服应力值。 稠油的屈服应力值表征了稠油塑性的大小，体现了稠油具有一定固体类物质的特性。 稠油屈服值的大小同样也可以反映稠油在管内流动或在地层中渗流时其初始启动压力值的大小，屈服应力值越大，表明稠油的初始启动压力值越大。","tags":[{"name":"Paper Notes","slug":"Paper-Notes","permalink":"https://eastsheng.github.io/tags/Paper-Notes/"},{"name":"2021-08","slug":"2021-08","permalink":"https://eastsheng.github.io/tags/2021-08/"}],"categories":[{"name":"学习笔记","slug":"学习笔记","permalink":"https://eastsheng.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"},{"name":"论文笔记","slug":"学习笔记/论文笔记","permalink":"https://eastsheng.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E8%AE%BA%E6%96%87%E7%AC%94%E8%AE%B0/"},{"name":"2021","slug":"学习笔记/论文笔记/2021","permalink":"https://eastsheng.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E8%AE%BA%E6%96%87%E7%AC%94%E8%AE%B0/2021/"}]},{"title":"PowerPoint上次启动失败。安全模式可以帮助您解决问题。","date":"2021-07-31T15:35:18.000Z","path":"wiki/2021/07/31/others/2021/windows-office/","text":"运行PPT出现以下错误信息： PowerPoint上次启动失败。安全模式可以帮助您解决问题，但是部分功能在此模式下可能不可用。是否要在安全模式中启动。 解决过程： 找了很多方法都不行。 重装应该能解决，但是重装了很多次，也还是一样。 最后解决方法： 最后，使用工具Office Tool Puls中工具箱的移除Office，彻底卸载Office后再重装就好了。","tags":[{"name":"Windows","slug":"Windows","permalink":"https://eastsheng.github.io/tags/Windows/"},{"name":"Office2019","slug":"Office2019","permalink":"https://eastsheng.github.io/tags/Office2019/"}],"categories":[{"name":"Windows","slug":"Windows","permalink":"https://eastsheng.github.io/categories/Windows/"}]},{"title":"论文笔记2021-07","date":"2021-07-24T03:31:28.000Z","path":"wiki/2021/07/24/notes/PaperReadNote202107/","text":"[toc] 2021-07-24 地质中自然发生的流固、热固耦合作用强度相对较弱，只有当空间、时间尺度足够大时效果才会显现。 水力压裂（Hydraulic fracturing、Fractuing、Hydraulic stimulation） 将大量高压流体（压裂液）注入地下，以沟通、扩展原生裂缝并创造新的裂缝为目的。进而诱导产生复杂的裂缝网络，以提高储层渗透性以及油气产量。 是提高非常规储层渗透性与油气产量的重要手段。 通常在水力压裂作业后期，需要将砂砾等“支撑剂”与压裂液混合，保证裂缝在压力释放后仍能保持开启。 水力压裂是非常规油气实现商业开采的关键技术。 水力压裂是非常规储层改造的重要手段。 双翼型主裂缝 在常规储层渗透性改造方面起主导作用。 经典的压裂形态，传统理论在进行压裂预测时也通常进行双翼型裂缝形态假设，并对裂缝长度、宽度进行优化。 图中 d 表示在垂直方向通过基质渗流可以动用的最远距离（也即：有效渗透距离）。 基质渗透率越高，有效距离 d 值越大。 而对于非常规储层，基质渗透率极低，有效距离 d 极小。 因此，双翼型裂缝在非常规储层中可以动用的体积极小，需要非常高的驱替压力，才能增加有效距离 d。 体积压裂 通过水力压裂形成的主裂缝、分支裂缝尽可能多的沟通储层内的天然裂缝、节理、缺陷，最终形成复杂的裂缝网络。 最早是在2002年[1]，由Maxwell、Fisher等通过微震信号监测发现的。 为了最大程度对非常规储层进行改造。 虽然非常规储层中每条裂缝可以动用的有效距离d很短，但由于相互交错的裂缝数目很多，仍然可以动用大量储层。 天然裂缝是形成复杂裂缝网络的关键因素。 水力压裂形成复杂裂缝网络成为页岩等非常规储层改造的共识。 页岩 顾名思义，书页状的岩石，层层分布，是常见一种沉积岩类型。 它的组成颗粒很细，具有光滑的膜感； 层与层之间很薄。 页岩有不同的颜色：白的（硅质页岩）、灰白的（钙质页岩）、灰绿的、灰褐的（铁质页岩）、灰黑的（炭质页岩）、深黑的（油母页岩），这是由构成它的不同物质所决定的。 页岩气[2] 主要成分为甲烷，由碳和氢组成，属有机质，是从页岩中的有机质演化而来。 非常规储层 主要包括：页岩气、页岩油、致密砂岩储层、煤层气等 共同特点是：渗透率极低 岩石热开裂 顾名思义，也即是热应力导致的岩石损伤现象。 从地表算起，深度每增加1000 m，温度大约升高30 ℃，例如4000m（120℃）。 干热岩（HDR）[3] 干热岩（又名增强型地热系统），一般是出现在地下3-10公里深的位置，温度可以达到200℃，这种高温岩体最大的特征就是它的内部是不含流体，或仅有少量地下流体，由于温度很高，我们可以利用技术来开发干热岩中的热能。 清洁、可再生、储量丰富、温度高…… 21世纪最有前途的新能源之一。 理论上来说，干热岩的储量是非常巨大的，而且开发使用过程中是无污染的，还不受季节的影响，是相当稳定的一种能源供应. 放射性核废物怎么处理？ 将其深埋于地下500-1000m岩层进行地质隔离； 高放射性核废物在埋存期间会发生衰变进而不断放热，核废料周围岩石温度升高（ &gt; 200-300℃），而远场岩石温度较低，因此会产生一个较高的温度梯度。进而会导致岩石发生热开裂，最终导致核废料处置的安全性与稳定性产生巨大影响。 2021-07-25岩石流&#x2F;热致裂的数值模拟 可以分为两类： 连续介质假定（连续尺度模型）： 连续尺度模型通常将岩石简化为均质、各向同性的连续介质，不对孔隙和骨架进行区分，每一点既包括流体信息又包括固体信息。 Biot提出经典三维固结理论描述流固耦合作用： （1） 多孔介质均质、各向同性； （2）平衡状态下，应力-应变关系可逆； 优点与局限性，连续尺度模型在岩石流固、热固耦合模拟方面应用广泛，对于指导工程实际具有不可替代的作用，但是在岩石断裂机理探究方面存在局限性。 局限性： （1）与金属等连续型材料不同，岩石是一种典型的多孔介质，呈现较强的不连续性与非均质性。 （2）连续理论模型假设较多，难以揭示岩石微观断裂机理。 （3）岩石由于热应力形成的损伤大多属于矿物颗粒之间、颗粒内部的微裂纹，而连续理论模型往往需略了材料的内部细节。 基于岩石离散介质的本质，不受连续性假设的限制（孔隙尺度模型 或 离散模型）： 与连续尺度模型不同，孔隙尺度模型在模拟岩石力学行为时，不需要预先设置宏观本构模型，而是基于岩石离散介质的本质，通过追踪所有离散颗粒的运动反应岩石整体的力学行为，其中，典型代表为离散单元法（DEM）[4][5] DEM是一种典型的粒子法。材料被里三位颗粒集合，可以在孔隙尺度上描述材料内部的微观细节。 由于没有宏观连续性假设的限制，DEM在模拟岩石、土壤等颗粒材料大变形、断裂等复杂行为方面取得巨大成功。 DEM基于孔隙尺度，是研究材料内部微观作用机制的有效手段。 优点： 与其他传统数值方法相比，例如有限元法，DEM可以方便、有效地描述岩石内部的集合结构，包括孔隙尺寸的不连续性；不需要借助复杂的控制方程、本构模型就可以模拟复杂的力学行为；同时可以提供孔隙尺度上具有统计意义的模拟信息，进而为揭示岩石微观断裂机理提供依据。 缺点：DEM方法需要求解大量粒子的力学行为，因此计算量较大，如何提高计算效率也是必须要面临的问题。 2021-07-29应力-应变关系 材料力学是研究构件承受载荷能力的学科 物体的受力可分为：拉压、扭转、弯曲、剪切几种基本形式。复杂的受力方式可以由这几种基本形式叠加。 应力（Stress）：内力分布的集度 内力（Internal Force）：在外力作用下，构件内各质点的相应位置发生了变化，从而引起的各质点间相互作用力的改变量，又称“附加内力”。 应变（Strain） 某一种特定材料的应力与应变关系称为该材料的应力-应变曲线（stress-strain curve）。 每一种材料都有唯一的应力-应变曲线，该曲线可以通过记录材料在不同的拉伸和压缩加载（应力）下的形变（应变）来获得。 热应力 在热固耦合问题中，一个重要的概念为热应力； 材料发生温度变化时，会有膨胀、收缩的趋势，当这种趋势被约束时则会产生热应力。 这种约束可能来源于外部，也可能是材料自身变形不协调所致。 自由膨胀、收缩不存在约束，因此不会产生热应力。 热应变与温度变化成正比。 $\\epsilon_{xx}$ &#x3D; $\\epsilon_{yy}$ &#x3D; $\\epsilon_{zz}$ &#x3D; $\\beta\\Delta T$ 其中$\\epsilon_{xx}$、$\\epsilon_{yy}$、$\\epsilon_{zz}$为正应变，$\\beta$为膨胀系数，为材料固有属性。 纳维–斯托克斯方程（NS方程） 达西定律（Darcy’s law） 是描述液体流过孔隙介质的本构方程。这个定律是法国工程师亨利·达西在1856年基于水流过沙的实验结果得到的.此定律成为了地球科学的一个分支，水文地质学的基础；并且在生理学中也应用在对于血液与微血管的描述中。 达西定律为NS方程的简化，忽略了 对流项与惯性项，能够有效描述缓慢渗流过程。 $Q$ &#x3D; $\\frac {\\kappa A (p_b-p_a)} {\\mu L}$ 其中，$Q$为总流量，$\\kappa$为介质固有的渗透率，$A$为介质的截面，$(p_b-p_a)$为总压降，$L$为压降的距离，$\\mu$为流体的黏度。","tags":[{"name":"Paper Notes","slug":"Paper-Notes","permalink":"https://eastsheng.github.io/tags/Paper-Notes/"},{"name":"2021-07","slug":"2021-07","permalink":"https://eastsheng.github.io/tags/2021-07/"}],"categories":[{"name":"学习笔记","slug":"学习笔记","permalink":"https://eastsheng.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"},{"name":"论文笔记","slug":"学习笔记/论文笔记","permalink":"https://eastsheng.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E8%AE%BA%E6%96%87%E7%AC%94%E8%AE%B0/"},{"name":"2021","slug":"学习笔记/论文笔记/2021","permalink":"https://eastsheng.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E8%AE%BA%E6%96%87%E7%AC%94%E8%AE%B0/2021/"}]},{"title":"远程控制软件“向日葵”更新后，不自动保存验证码了？","date":"2021-07-10T09:25:18.000Z","path":"wiki/2021/07/10/others/2021/windows-sunlogin/","text":"远程控制软件“向日葵”更新后，不自动保存验证码了？ 自从更新了”向日葵 12 for Windows”，每次使用远程桌面后，验证码总是空的？ 每次还需要再重新输入验证码，对于控制自己不同地点的电脑时，很不方便。 解决方法 未解决……","tags":[{"name":"Windows","slug":"Windows","permalink":"https://eastsheng.github.io/tags/Windows/"},{"name":"向日葵","slug":"向日葵","permalink":"https://eastsheng.github.io/tags/%E5%90%91%E6%97%A5%E8%91%B5/"},{"name":"远程控制","slug":"远程控制","permalink":"https://eastsheng.github.io/tags/%E8%BF%9C%E7%A8%8B%E6%8E%A7%E5%88%B6/"}],"categories":[{"name":"Windows","slug":"Windows","permalink":"https://eastsheng.github.io/categories/Windows/"}]},{"title":"Welcome to My Wiki","date":"2021-07-03T02:48:28.000Z","path":"wiki/2021/07/03/index/","text":"","tags":[],"categories":[]},{"title":"Python Tutorials收藏","date":"2021-07-03T02:48:28.000Z","path":"wiki/2021/07/03/codes/python/Tutorials/","text":"[toc] 教程 名称 链接 Real Python Tutorials https://realpython.com/ Python进阶 https://eastlakeside.gitbook.io/interpy-zh/#yuan-shu-zuo-zhe PyQt Example applications https://www.mfitzp.com/pyqt-examples/ PyQt5 https://www.mfitzp.com/pyqt-examples/ 莫烦python https://mofanpy.com/ Python官网,下载 https://www.python.org/ 《Python 数据科学入门教程》 https://wizardforcel.gitbooks.io/matplotlib-intro-tut/content/ Python中文学习大本营 http://www.pythondoc.com/ Learn python the hard way https://learnpythonthehardway.org/ Learn Python 3 with Head First - Resources http://python.itcarlow.ie/resources.html Python code example https://www.programcreek.com/python/ Python在线学习 http://code.py40.com/ Python黑洞网 https://www.pythonheidong.com/ Python中文网 https://www.cnpython.com/ Python学习园 http://liao.cpython.org/ NumPy 中文 https://www.numpy.org.cn/ Pandas 中文 https://www.pypandas.cn/ Matplotlib 中文 https://www.matplotlib.org.cn/ Matplotlib 用户指南 https://wizardforcel.gitbooks.io/matplotlib-user-guide/content/ Matplotlib 绘图基础 https://blog.chembiosim.com/Matplotlib-basics/ The Django Book http://djangobook.py3k.cn/2.0/ 包含：python、Kivy、深度学习等 http://www.ipaomi.com/ kivy官网 https://kivy.org/#home Django documentation https://docs.djangoproject.com/en/3.2/ DelftStack https://www.delftstack.com/zh/ GUI教程 名称 链接 Python GUI编程(Tkinter) https://www.runoob.com/python/python-gui-tkinter.html 廖雪峰-图形界面 https://www.liaoxuefeng.com/wiki/1016959663602400/1017786914566560 Python GUI设计 tkinter菜鸟编程 https://blog.csdn.net/m0_46653437/category_10441177.html 第三库 名称 链接 Pillow（最流行的 Python 图像处理库） https://python-pillow.org/ 制作简单 GUI 程序的 Python 库 https://github.com/alfiopuglisi/guietta 基于 G2Plot 封装的 Python3 可视化库 https://github.com/hustcc/PyG2Plot 数据科学方面的 Python 开源库 https://github.com/lux-org/lux 资源Python 的简易小程序 How to Install Anaconda on Ubuntu 18.04 and 20.04 https://phoenixnap.com/kb/how-to-install-anaconda-ubuntu-18-04-or-20-04#ftoc-heading-2 https://blog.csdn.net/haeasringnar/article/details/82079943 Anaconda创建环境、删除环境、激活环境、退出环境 https://blog.csdn.net/H_O_W_E/article/details/77370456 Windows配置pypy环境 下载对应版本pypy； 直接解压，并配置环境变量； 安装pypy pip,下载get-pip.py,并放到刚刚解压的pypy文件夹里; cmd进入文件夹并输入以下命令安装pip： 1pypy3 get-pip.py 将刚生成的..\\Scripts文件夹也添加环境变量 然后就可输入pypy3 -m pip install numpy安装库 https://blog.csdn.net/weixin_39121325/article/details/88655370","tags":[{"name":"Python","slug":"Python","permalink":"https://eastsheng.github.io/tags/Python/"},{"name":"Tutorials","slug":"Tutorials","permalink":"https://eastsheng.github.io/tags/Tutorials/"}],"categories":[{"name":"程序学习","slug":"程序学习","permalink":"https://eastsheng.github.io/categories/%E7%A8%8B%E5%BA%8F%E5%AD%A6%E4%B9%A0/"},{"name":"Python","slug":"程序学习/Python","permalink":"https://eastsheng.github.io/categories/%E7%A8%8B%E5%BA%8F%E5%AD%A6%E4%B9%A0/Python/"}]},{"title":"Markdown Tutorial","date":"2021-06-28T02:51:28.000Z","path":"wiki/2021/06/28/codes/markdown/basics/","text":"[toc] 流程图graph LR A[直接法]==>B(高斯Gauss消元) A==>C(矩阵分解) B==>D(有限次运算求出精确解) C==>D(有限次运算求出精确解) style A fill:#ffff graph TD A[稠油]-->B[吸附]; A-->C[演化]; B-->D[Paper]; C-->D;","tags":[{"name":"Markdown","slug":"Markdown","permalink":"https://eastsheng.github.io/tags/Markdown/"},{"name":"Tutorial","slug":"Tutorial","permalink":"https://eastsheng.github.io/tags/Tutorial/"}],"categories":[{"name":"程序学习","slug":"程序学习","permalink":"https://eastsheng.github.io/categories/%E7%A8%8B%E5%BA%8F%E5%AD%A6%E4%B9%A0/"},{"name":"Markdown","slug":"程序学习/Markdown","permalink":"https://eastsheng.github.io/categories/%E7%A8%8B%E5%BA%8F%E5%AD%A6%E4%B9%A0/Markdown/"}]},{"title":"Matlab Tutorial-1","date":"2021-06-28T02:51:28.000Z","path":"wiki/2021/06/28/codes/matlab/matlab-1/","text":"[toc] 基本常用代码MATLAB fopen &amp; fgetl &amp; fclose 打开文件 tsunamis.txt 并获取文件标识符。 1fileID = fopen(&#x27;tsunamis.txt&#x27;); 将 fileID 传递给 fgetl 函数以从文件 读取 一行。 1tline = fgetl(fileID) 关闭 一个或所有打开的文件 1fclose(fid); rand &amp;&amp; size 创建一个2x3x4x5随机四维数组并返回其大小。 123A = rand(2,3,4,5);sz = size(A)szdim2 = size(A,2) %仅查询 A 的第二个维度的长度。 figure 创建一个默认图窗。 1f = figure; 创建一个图窗并指定 Name 属性。默认情况下，生成的标题包含图窗编号。 1figure(&#x27;Name&#x27;,&#x27;Measured Data&#x27;); 再次指定 Name 属性，但这次将 NumberTitle 属性设置为 ‘off’。生成的标题不包含图窗编号。 prod 数组元素的乘积 12345678910111213A=[1:3:7;2:3:8;3:3:9]B = prod(A)%outputA = 3×3 1 4 7 2 5 8 3 6 9B = 1×3 6 120 504 每列元素乘积1B = prod(A) 每行元素乘积1B = prod(A,2) Matlab .&#x2F;和&#x2F; .和 有什么区别 https://blog.csdn.net/u013346007/article/details/54583271 ceil 向正无穷舍入 123456789101112131415X = [-1.9 -0.2 3.4; 5.6 7 2.4+3.6i]Y = ceil(X)%outputX = -1.9000 + 0.0000i -0.2000 + 0.0000i 3.4000 + 0.0000i 5.6000 + 0.0000i 7.0000 + 0.0000i 2.4000 + 3.6000iY = -1.0000 + 0.0000i 0.0000 + 0.0000i 4.0000 + 0.0000i 6.0000 + 0.0000i 7.0000 + 0.0000i 3.0000 + 4.0000i Switch 语法 123456789switch switch_expression case case_expression statements case case_expression statements ... otherwise statementsend 例子1 123456789101112n = input(&#x27;Enter a number: &#x27;);switch n case -1 disp(&#x27;negative one&#x27;) case 0 disp(&#x27;zero&#x27;) case 1 disp(&#x27;positive one&#x27;) otherwise disp(&#x27;other value&#x27;)end 例子2 12345678910111213x = [12 64 24];plottype = &#x27;pie3&#x27;;switch plottype case &#x27;bar&#x27; bar(x) title(&#x27;Bar Graph&#x27;) case &#123;&#x27;pie&#x27;,&#x27;pie3&#x27;&#125; pie3(x) title(&#x27;Pie Chart&#x27;) otherwise warning(&#x27;Unexpected plot type. No plot created.&#x27;)end","tags":[{"name":"Tutorial","slug":"Tutorial","permalink":"https://eastsheng.github.io/tags/Tutorial/"},{"name":"Matlab","slug":"Matlab","permalink":"https://eastsheng.github.io/tags/Matlab/"}],"categories":[{"name":"程序学习","slug":"程序学习","permalink":"https://eastsheng.github.io/categories/%E7%A8%8B%E5%BA%8F%E5%AD%A6%E4%B9%A0/"},{"name":"Matlab","slug":"程序学习/Matlab","permalink":"https://eastsheng.github.io/categories/%E7%A8%8B%E5%BA%8F%E5%AD%A6%E4%B9%A0/Matlab/"}]},{"title":"Fortran Tutorial","date":"2021-06-28T02:51:28.000Z","path":"wiki/2021/06/28/codes/fortran/tutorial/","text":"[toc] Fortran教程 Fortran教程 Fortran资源 科学计算的语言Fortran Fortran论坛 Fortran实例——并行程序 GNU Fortran 4 call Fortran from C:参考：https://sites.google.com/site/kaizhangstatmech/code/callfortran fortrancode.f 12345678910111213 subroutine fortfunc(ii,ff) integer ii real*4 ff write(6,100) ii, ff100 format(&#x27;ii=&#x27;,i2,&#x27; ff=&#x27;,f6.3) return end cppcode.c 1234567891011121314151617181920212223#include &lt;iostream&gt;using namespace std;extern&quot;C&quot; &#123;void fortfunc_(int *ii, float *ff);&#125;main()&#123; int ii=5; float ff=5.5; fortfunc_(&amp;ii, &amp;ff); return 0;&#125; compile as 12345gfortran -c fortrancode.fg++ -c cppcode.cg++ -o run fortrancode.o cppcode.o -lgfortran or 12345f77 -c fortrancode.fg++ -c cppcode.cg++ -o run fortrancode.o cppcode.o -lg2c","tags":[{"name":"Tutorial","slug":"Tutorial","permalink":"https://eastsheng.github.io/tags/Tutorial/"},{"name":"Fortran","slug":"Fortran","permalink":"https://eastsheng.github.io/tags/Fortran/"}],"categories":[{"name":"程序学习","slug":"程序学习","permalink":"https://eastsheng.github.io/categories/%E7%A8%8B%E5%BA%8F%E5%AD%A6%E4%B9%A0/"},{"name":"Fortran","slug":"程序学习/Fortran","permalink":"https://eastsheng.github.io/categories/%E7%A8%8B%E5%BA%8F%E5%AD%A6%E4%B9%A0/Fortran/"}]},{"title":"给VScode extensions添加软链","date":"2021-06-13T04:20:26.000Z","path":"wiki/2021/06/13/codes/python/vscode_extemsions_mklink/","text":"[toc] 1. 目的 目的是要把C盘的一个文件夹链接到E盘， 这里我是为了要把VScode安装的插件位置从C盘link到E盘，在PowerShell（因为使用cmd的话没有权限）使用命令如下： 1mklink /d &quot;C:\\Users\\yourcomputername\\.vscode\\extensions&quot; &quot;E:\\VScodePlug\\extensions\\extensions&quot; 2. 错误信息12345678mklink : 无法将“mklink”项识别为 cmdlet、函数、脚本文件或可运行程序的名称。请检查名称的拼写，如果包括路径，请确保路径正确，然后再试一次。所在位置 行:1 字符: 1+ mklink /d &quot;C:\\Users\\yourcomputername\\.vscode\\extensions&quot; &quot;E:\\VScodePlug ...+ ~~~~~~ + Cat##egoryInfo : ObjectNotFound: (mklink:String) [], CommandNotFoundException + FullyQualifiedErrorId : CommandNotFoundException 3. 错误原因 因为PowerShell中没有mklink命令 4. 解决方法 在进入PowerShell后先输出 cmd,在执行： 1mklink /d &quot;C:\\Users\\yourcomputername\\.vscode\\extensions&quot; &quot;E:\\VScodePlug\\extensions\\extensions&quot; 5. 成功提示1为 C:\\Users\\yourcomputername\\.vscode\\extensions &lt;&lt;===&gt;&gt; E:\\VScodePlug\\extensions 创建的符号链接 6. 若显示当文件已存在时，无法创建该文件。 删除下面路径中中extensions文件夹， 1C:\\Users\\yourcomputername\\.vscode\\extensions 主要是要把E盘路径extensions创建一个软连接到C盘extensions。 参考链接","tags":[{"name":"mklink","slug":"mklink","permalink":"https://eastsheng.github.io/tags/mklink/"},{"name":"extensions","slug":"extensions","permalink":"https://eastsheng.github.io/tags/extensions/"}],"categories":[{"name":"程序学习","slug":"程序学习","permalink":"https://eastsheng.github.io/categories/%E7%A8%8B%E5%BA%8F%E5%AD%A6%E4%B9%A0/"},{"name":"Python","slug":"程序学习/Python","permalink":"https://eastsheng.github.io/categories/%E7%A8%8B%E5%BA%8F%E5%AD%A6%E4%B9%A0/Python/"}]},{"title":"论文笔记2021-04","date":"2021-04-28T04:18:28.000Z","path":"wiki/2021/04/28/notes/PaperReadNote202104/","text":"[toc] 黏度（viscosity）：黏度也可以称为粘度，是指流体对流动所表现的阻力。 当流体 (气体或液体) 流动时， 一部分在另一部分上面流动时， 就受到阻力， 这是流体的内摩擦力。 要使流体流动就需在流体流动方向上加一切线力以对抗阻力作用。 黏度系数(简称黏度)η的物理意义是： 在相距单位距离的两液层中， 使单位面积液层维持单位速度差所需的切线力。 其单位在厘米·克·秒(c·g·s)制中为泊(g·cm-1·s-1)，在SI制中为帕斯卡·秒(Pa·s或kg·m-1·s-1)，1泊&#x3D;0.1帕·秒。 黏度又称黏滞系数，是量度流体黏滞性大小的物理量。流体中相距dx的两平行液层，由于内摩擦，使垂直于流动方向的液层间存在速度梯度dv&#x2F;dx，当速度梯度为1个单位，相邻流层接触面S上所产生的黏滞力F(亦称内摩擦力)即黏度，单位：Pa·s。 2021&#x2F;6&#x2F;6 热学概念 潜热（latent heat）：状态量 潜热，相变潜热的简称，指物质在等温等压情况下，从一个相变化到另一个相吸收或放出的热量。 这是物体在固、液、气三相之间以及不同的固相之间相互转变时具有的特点之一。 固、液之间的潜热称为熔解热（或凝固热）； 液、气之间的称为汽化热（或凝结热）； 而固、气之间的称为升华热（或凝华热）。 饱和蒸汽（saturated vapor）：指饱和状态下的蒸汽 未经过热处理的蒸汽称为饱和蒸汽； 饱和蒸汽是在一个大气压下，温度为100度的蒸汽，温度不能再升高，是饱和状态下的蒸汽。 饱和蒸汽由气体分子之间的热运动现象造成的。 在饱和状态下的液体称为饱和液体，其蒸汽称为干饱和蒸汽（也称饱和蒸汽）。 它是无色、无味、不能燃烧又无腐蚀性的气体。 饱和蒸汽的温度与压力之间一一对应，二者之间只有一个独立变量。 工程热力学 刚性绝热容器分隔成两部分，一部分装气体，一部分抽成真空，中间是隔板，当取气体为系统时，若突然抽去隔板，系统不做功？[1] 思考题[2],[4]： 选择题[3] 概念[5] 参考：[1] 慕课片段 https://www.icourse163.org/learn/SJTU-1002535024?tid=1463098466#/learn/content?type=detail&amp;id=1240231964[2] 慕课片段 https://www.icourse163.org/learn/SJTU-1002535024?tid=1463098466#/learn/content?type=detail&amp;id=1240231978&amp;sm=1[3] 慕课片段 https://www.icourse163.org/learn/SJTU-1002535024?tid=1463098466#/learn/content?type=detail&amp;id=1240231979&amp;cid=1261672279&amp;replay=true[4] 慕课片段 https://www.icourse163.org/learn/SJTU-1002535024?tid=1463098466#/learn/content?type=detail&amp;id=1240231981&amp;sm=1[5] 慕课片段 https://www.icourse163.org/learn/SJTU-1002535024?tid=1463098466#/learn/content?type=detail&amp;id=1240231982&amp;sm=1","tags":[{"name":"Paper Notes","slug":"Paper-Notes","permalink":"https://eastsheng.github.io/tags/Paper-Notes/"},{"name":"2021-04","slug":"2021-04","permalink":"https://eastsheng.github.io/tags/2021-04/"}],"categories":[{"name":"学习笔记","slug":"学习笔记","permalink":"https://eastsheng.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"},{"name":"论文笔记","slug":"学习笔记/论文笔记","permalink":"https://eastsheng.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E8%AE%BA%E6%96%87%E7%AC%94%E8%AE%B0/"},{"name":"2021","slug":"学习笔记/论文笔记/2021","permalink":"https://eastsheng.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E8%AE%BA%E6%96%87%E7%AC%94%E8%AE%B0/2021/"}]},{"title":"Python 常用基本命令","date":"2021-04-11T10:22:28.000Z","path":"wiki/2021/04/11/codes/python/python_code_study/","text":"[toc] 1. 操作文件（夹）等 例如：获得当前文件所在目录 123import ospath=os.getcwd()print(path) 在当前文件夹生成文件夹，以时间命名 123folder=time.strftime(r&quot;%Y-%m-%d_%H-%M-%S&quot;,time.localtime())folder=time.strftime(r&quot;%Y%m%d_%H%M%S&quot;,time.localtime())os.makedirs(r&#x27;%s/%s&#x27;%(os.getcwd(),folder)) 更改当前工作路径 123os.chdir(&#x27;C:\\\\Users\\\\ASUS\\\\Desktop\\\\1&#x27;)path=os.getcwd()print(path) 判断一个路径或文件夹、文件是否存在 123456789101112import ospath_yesno1 = os.path.exists(&#x27;C:\\\\Users\\\\ASUS\\\\Desktop\\\\1&#x27;)path_yesno2 = os.path.isdir(&#x27;C:\\\\Users\\\\ASUS\\\\Desktop\\\\1&#x27;)path_yesno3 = os.path.isfile(&#x27;C:\\\\Users\\\\ASUS\\\\Desktop\\\\1&#x27;)print(path_yesno1,path_yesno2,path_yesno3)# or pathlibimport pathlib import Pathmypath = Path(&quot;C:\\\\Users\\\\ASUS\\\\Desktop\\\\1&quot;)print(mypath.is_dir())print(mypath.is_file())print(mypath.exists()) 判断一个文件夹是否存在用以安全的创建文件 1234567if os.path.isdir(densitypath)==False: os.makedirs(densitypath)else: pass# or利用pathli库from pathlib import PathPath(&quot;/mydirectory&quot;).mkdir(parents=True,exist_ok) 获取目录中所有文件及文件夹list 12PATH = os.listdir(&#x27;C:\\\\Users\\\\ASUS\\\\Desktop&#x27;)print(PATH) 创建和删除子目录 1234os.makedirs(&#x27;C:\\\\Users\\\\ASUS\\\\Desktop\\\\2&#x27;)os.rmdir(&#x27;C:\\\\Users\\\\ASUS\\\\Desktop\\\\2&#x27;)path=os.getcwd()print(path) 改文件名 1os.rename(&#x27;123.txt&#x27;,&#x27;000.txt&#x27;) 2. 时间 time库 1234567import time# 打印时间戳print(time.time()) # 打印自从1970年1月1日午夜（历元）经过了多长时间，以秒为单位# 打印本地时间print(time.localtime(time.time())) # 打印本地时间# 打印格式化时间print(time.strftime(&#x27;%Y-%m-%d %H:%M:%S&#x27;,time.localtime(time.time()))) # 打印按指定格式排版的时间 datetime库 12345678import datetime # 打印当前时间time1 = datetime.datetime.now()print(time1)# 打印按指定格式排版的时间time2 = datetime.datetime.now().strftime(&#x27;%Y-%m-%d %H:%M:%S&#x27;)print(time2) https://blog.csdn.net/tszupup/article/details/108128037 3. 正则表达式操作12345import rerdf1 = &#x27;satC_Si-rdf.dat&#x27;lab1 = re.findall(&#x27;_(.*?)-&#x27;,rdf1)[0]lab2 = re.findall(&#x27;(.*?)_&#x27;,rdf1)[0]print(lab1,lab2) 1Si satC","tags":[{"name":"Python","slug":"Python","permalink":"https://eastsheng.github.io/tags/Python/"},{"name":"Code","slug":"Code","permalink":"https://eastsheng.github.io/tags/Code/"}],"categories":[{"name":"程序学习","slug":"程序学习","permalink":"https://eastsheng.github.io/categories/%E7%A8%8B%E5%BA%8F%E5%AD%A6%E4%B9%A0/"},{"name":"Python","slug":"程序学习/Python","permalink":"https://eastsheng.github.io/categories/%E7%A8%8B%E5%BA%8F%E5%AD%A6%E4%B9%A0/Python/"}]},{"title":"Learning English Notes 2021","date":"2021-03-03T16:00:00.000Z","path":"wiki/2021/03/04/notes/EnglishNote2021/","text":"[toc] Phrase&#x2F;sentence notes 2021-122021-11 preliminary adj. 初步的，预备的 n. 初步行动，准备工作；预赛，预试 prelimi 预备考试 Although we have a preliminary understanding of some of the influencing factors, we are still far from a) understanding the adsorption behaviour of methane in nanoscale pores of a complex kerogen structure and b) making reasonable predictions of adsorption in sub-core or core samples to match experiments. Chemical Engineering Journal 426 (2021) 130984 fidelity n. 保真度；忠诚；精确；尽责 a high fidelity tool hollow adj. 空的，空心的；凹的，凹陷的；虚伪的，不真诚的；无用的，无价值的；（声音）沉闷回荡的；空腹的；沉闷回荡的v. 使凹陷，使下陷；挖洞（成某物）；形成空洞n. 凹陷处，坑洼处；坑，洞；山谷 molecules prefer to be adsorbed on the hollow sites of the carbon ring of a hydrocarbon backbone as mentioned above 如上所述 the inertia of the piston 活塞的惯性 interstices n. 间隙；缝（interstice 的复数） evolution n. 进化（论）；演变，发展；（气体的）释放，（热量的）散发；队形变换，位置变换；&lt;旧&gt;开方 evaluation n. 评价，评估 Parameter a is proportional to A 参数a与A成正比 As mentioned earlier,如前所述 To further validate our method, 为了进一步验证我们的方法， 2021-09 a binder 固体石蜡 colloidal adj. 胶体的；胶质的；胶状的 resin n. 树脂；松香 The overall goal is to improve the understanding of … 总的目标是提高对 complex shear moduli 复杂剪切模 so as to reach a relatively stable state. 从而达到相对稳定的状态 Asphaltenes and resins are of important significance to the stability of petroleum. Resin and asphaltene have similar chemical properties and structural shapes With the great deal of research, scientists have gradually deepened their understanding of the structure and properties of asphaltenes and resins. In addressing the problem and improving the recovery of petroleum 在解决这一问题和提高石油采收率方面 For these two ranges To the best of our knowledge 据我们所知 understand the intricate properties of asphalt intricate adj. 复杂的；错综的，缠结的 some other trace elements 其他一些微量元素 2021-08 alleviate vt. #减轻，缓和 penetrate through water film #穿透水膜 penetration 渗透 viz #.abbr. 即；也就是（videlicet,namely） oil-displacing agent design 驱油剂的设计 oil-displacing 驱油 crude oil 原油 surfactant n. 表面活性剂 adj. 表面活性剂的 supercritical carbon dioxide 超临界二氧化碳 supercritical adj. [物][物化] 超临界的；吹毛求疵的 which have profound effect on the oil exploitation. profound adj. 深厚的；意义深远的；渊博的 infer vt. 推断；推论 vi. 推断；作出推论 aqueous layer 水层 ternary model 三元模型 binary model 二元模型 Adsorption behavior of oil components on water-wet silica surface This phenomenon was in good accordance with reported experiment [32] and simulation [33] results be in good accordance withaccordance n. 按照，依据；一致，和谐 one of the objectives is to shed light on the relationship between component polarity and adsorption capability shed light 阐明 cristobalite n. 方石英；方晶石 quartz n. 石英 stishovite n. [矿物] 超石英；重硅石 adhesion n. 粘附；黏附（力）；支持；固定； carbonate 碳酸盐(calcite n. [矿物] 方解石) sandstone n. [岩] 砂岩；沙岩(silica n. 二氧化硅) clay 粘土 (mica n. [矿物] 云母) dipole n. [物化] 偶极；双极子 aromatic 芳香的，芬芳的；芳香族的 carbons resin n. 树脂；松香 vt. 涂树脂；用树脂处理 aliphatic 脂肪质的，[有化] 脂肪族的 whereas a reverse trend is observed in the silica system the electrostatic interaction between the heavy oil and rock surface is dictated by the dipole moment of the rock surface. dictated adj. 口述的 v. 口述 the depletion of oil in the conventional oil fields is ofgreat concern depletion n. 消耗；损耗；放血 barrel n. 桶 Heavy oil, extra-heavy oil, and bitumen(n. 沥青) asphaltene n. [油气] 沥青质；[油气] 沥青烯 aromatics n. [助剂] 芳香剂，香料；芳族化合物 The problem is further compounded by the surface chemistry of reservoir rocks in which these oils are trapped. compounded adj. [生物] 复合的，化合的 v. 混合；组成（compound的过去分词） brine n. 卤水；盐水；海水 brain 脑子 displace and detach oil from the rock surface detach vt. 分离；派遣；使超然 affinity n. 密切关系；吸引力；姻亲关系；类同 additives n. 添加剂，食物添加剂；附加剂 spontaneous adj. 自发的；自然的；无意识的 imbibition n. 吸入；吸取 zeta potential 电动电势，界面动电势 zeta n. 希腊语字母表的第六个字母 电位 sorption n. 吸附作用；吸着作用；吸收作用 here, molecular simulations provide a useful alternative for studying the rock−oil interface. in practice 在实践中；实际上，事实上 scenario n. 方案；情节；剧本；设想 play a dominant role in the adhesion energies with heavy oil. the implications of these results 这些结果的含义 They also studied the physical and rheological properties of heavy oil through molecular simulations rheological adj. 流变学的；液流学的 limestone n. [岩] 石灰岩 dolomite n. 白云石 the vacuum permittivity permittivity n. [电] 介电常数，[电] 电容率 reformulate vt. 再用形式表示 instantaneous adj. 瞬间的；即时的；猝发的 DPD &#x3D; dissipative particle dynamics dissipative（adj. 浪费的；消耗的；消散的） Of particular interest is 特别有趣的是 a slit rock nanopore 裂隙岩石的纳米孔 slit n. 狭长的切口；裂缝 v. 使有狭缝；撕裂；使成长条；眯起眼睛 hydrophilic and hydrophobic （亲水的和疏水的） There are three major types of EOR : miscible displacement, chemical flooding, and thermal recovery. 2021-03 intriguing 有趣的；迷人的 intrigue n. 阴谋；诡计；复杂的事；私通 vt. 用诡计取得；激起…的兴趣 vi. 私通；密谋 interpret vt. 说明；口译 vi. 解释；翻译 prominently adv. 显著地 ultimately adv. 最后；根本；基本上 2021-01 many fascinating properties provide a promising alternative In recent decades which is attributed to the competition between incoherent and coherent phonon transport regimes. In comparison with … made of periodically alternating layers of two materials have reveiced widespread attention gain insight into the underlying transport mechanisms 深入了解潜在传输机制 Despite the long-standing importance of A and B as thermoelectric materials, with close agreement to experimental measurements.","tags":[{"name":"Paper Notes","slug":"Paper-Notes","permalink":"https://eastsheng.github.io/tags/Paper-Notes/"}],"categories":[{"name":"学习笔记","slug":"学习笔记","permalink":"https://eastsheng.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"},{"name":"论文笔记","slug":"学习笔记/论文笔记","permalink":"https://eastsheng.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E8%AE%BA%E6%96%87%E7%AC%94%E8%AE%B0/"},{"name":"2021","slug":"学习笔记/论文笔记/2021","permalink":"https://eastsheng.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E8%AE%BA%E6%96%87%E7%AC%94%E8%AE%B0/2021/"}]},{"title":"虚拟机扩容","date":"2021-02-28T05:36:18.000Z","path":"wiki/2021/02/28/linux/linux_虚拟机扩容/","text":"1. VMware虚拟机虚拟硬盘扩展 虚拟机关机情况下，打开虚拟机&gt;设置&gt;硬盘； 点击右侧磁盘实用工具下方扩展，输入磁盘大小，点击扩展; 注意，谨慎操作，貌似虚拟盘只能增大，往小了改的话好像很困难，我是实现不了; 耐心等…… 2. 在Ubuntu虚拟机中分配内存 目前只是把内存给了虚拟机，就像是给电脑增加了个硬盘，但是，是未分配状态，因此需要分配空间; 打开虚拟机，在终端使用：sudo apt-get install gparted安装磁盘分区软件GParted，打开GParted 可以看到一个unallocated的内存空间，右键所要扩容的一级磁盘/dev/sda1，点击Resize/Move，将进度条拉到最右边，点击Resize，相同方法操作二级磁盘，再点击上方绿色对勾√； 比如，这只有两个盘，一个系统盘/dev/sda1和一个空间盘/dev/sda2，我们要扩容给空间盘/dev/sda2，就先右键/dev/sda2这一行（一级磁盘）扩容，然后发现unallocated并未分配，还需要再给它的子空间再分配一次。 因为，直接右键/dev/sda5分配空间，是不行的，进度条是拉不动的，只有先给一级磁盘分配，然后再由一级分给二级才可以实现。 3. 最后可能还会有个1MiB的空间未分配 直接把那1MiB空间加到Free space following(MiB),然后Resize； 之后就可以把这1MiB空间按上述操作再加到/dev/sda2或/dev/sda5里 4. 终端查看df -h空间是否增加 参考链接","tags":[{"name":"Linux学习","slug":"Linux学习","permalink":"https://eastsheng.github.io/tags/Linux%E5%AD%A6%E4%B9%A0/"},{"name":"虚拟机扩容","slug":"虚拟机扩容","permalink":"https://eastsheng.github.io/tags/%E8%99%9A%E6%8B%9F%E6%9C%BA%E6%89%A9%E5%AE%B9/"},{"name":"Ubuntu","slug":"Ubuntu","permalink":"https://eastsheng.github.io/tags/Ubuntu/"}],"categories":[{"name":"Linux学习","slug":"Linux学习","permalink":"https://eastsheng.github.io/categories/Linux%E5%AD%A6%E4%B9%A0/"}]},{"title":"日常笔记2021","date":"2021-01-22T10:11:28.000Z","path":"wiki/2021/01/22/notes/DailyNotes2021/","text":"[toc] 1. 只要使用键盘Materials Studio就卡住 解决方法：在微软拼音输入法的“中”(或“英”)字上右击鼠标，然后点“设置”，在弹出界面中点“常规”，在新界面中向下滚动动底部，有个兼容性，打开兼容性，然后就OK了。 参考链接:[1] http://muchong.com/t-14329827-1 2. 最新WIN10 20H2系统找回经典系统属性界面的最彻底的方法 重装了Win10 20H2以后，右键此电脑后的属性面板变了，要彻底换回经典的属性面板方法。 （1）打开注册表，直接搜索注册表、或者Win+R，然后输入regedit； （2）找到路径HKEY_LOCAL_MACHINE\\SYSTEM\\ControlSet001\\Control\\FeatureManagement\\Overrides\\0\\2093230218; （3）将EnabledState的数值数据修改为 1 即可。 （4）参考链接：https://www.bilibili.com/read/cv8197364 3. OPLS(optimized potentials for liquid simulations) 参考链接:[1] https://blog.csdn.net/qq_31346429/article/details/106358251 4. [AMBER基础教程B0：AMBER分子动力学模拟入门] 参考链接:[1] https://jerkwin.github.io/2018/01/17/AMBER%E5%9F%BA%E7%A1%80%E6%95%99%E7%A8%8BB0-AMBER%E5%88%86%E5%AD%90%E5%8A%A8%E5%8A%9B%E5%AD%A6%E6%A8%A1%E6%8B%9F%E5%85%A5%E9%97%A8/ 5. 国内9大免费CDN汇总 转 转 [1] https://cloud.tencent.com/developer/article/1352398 6. ctrl+c没反应 可能是开着有道翻译快捷键冲突了，关了有道或者其他快捷键冲突软件即可 7. R7000office时不时闪黑屏 打开office，文件&gt;选项&gt;高级&gt;显示 勾选“禁用硬件图形加速”，“应用”并“确定” 参考：[1] https://answers.microsoft.com/zh-hans/msoffice/forum/msoffice_word-mso_win10-mso_2019/office-%E9%97%AA%E5%B1%8F/33c9a15d-595b-4c62-8d30-fbce21a24fc8 8. 双系统教程参考 https://www.cnblogs.com/masbay/p/10745170.html 9. Origin, Copy Page到Word或PPT后侧边空白多？ 修改Tools→Options→page选项卡，将Margin Control 设置为Tight，或者将Clip Border Width设置为0，两种都可行。 若以上步骤不行，那应该是电脑的屏幕缩放不是100%，改为100%就好； 或者换更高版本的Origin. 10. FFTW Windows安装跟使用fftw http://m.myexceptions.net/windows/1616414.html linux 和 Windows下FFTW库的安装 https://blog.csdn.net/dengm155/article/details/53819704 11. Vmware虚拟机完整创建一个linux https://blog.csdn.net/weixin_42533541/article/details/81877207 12. 在VMD中显示原子序号的方法 http://sobereva.com/197 13. PhpStudy PhpStudy https://www.xp.cn/ https://jingyan.baidu.com/article/148a1921b820c34d70c3b168.html phpStudy V8 使用手册 https://www.xp.cn/phpstudy-v8/ FileZilla https://www.filezilla.cn/ 14. 搭建本地服务器 Web服务器——保姆级教程！ https://my.oschina.net/u/4383725/blog/4510772 15. MathType7 https://www.mathtype.cn/ 30天到期后，删除注册表计算机\\HKEY_CURRENT_USER\\SOFTWARE\\Install Options中的Options7.4 便可再获得30天（还没试过） 16. Office自动安装至C盘修改（如果够用不建议） 安装前修改注册表计算机\\HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion下ProgramFilesDir路径为其他盘路径（千万不要乱改后又重启电脑） 一定要注意，改完安装后，立马注册表修改回到原来，没改前千万别重启电脑。 被迫重装系统后的反思。 17. npm install error (code EBADPLATFORM) https://stackoverflow.com/questions/49475492/npm-install-error-code-ebadplatform/49475537 删除package-lock.json文件后，输入命令：1npm install 18. PC VMware安装安卓虚拟机 https://blog.csdn.net/muzihuaner/article/details/105284177 19. autoCAD plant 3D 2022 http://www.ddooo.com/softdown/193119.htm#dltab 20. VS code怎么同时开多个文件夹 右键资源管理器空白处，将文件夹添加到工作区即可。 https://blog.csdn.net/magic_xiang/article/details/84024493 21. 挖矿流程 electrum钱包 安装钱包 生成地址 挖矿软件nicehash","tags":[{"name":"Daily Notes","slug":"Daily-Notes","permalink":"https://eastsheng.github.io/tags/Daily-Notes/"}],"categories":[{"name":"学习笔记","slug":"学习笔记","permalink":"https://eastsheng.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"},{"name":"杂记","slug":"学习笔记/杂记","permalink":"https://eastsheng.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E6%9D%82%E8%AE%B0/"}]},{"title":"Matplotlib基本-1","date":"2021-01-22T10:11:28.000Z","path":"wiki/2021/01/22/codes/python/matplotlib_1/","text":"[toc] Matplotlib 中文 调整ylabel位置: labelpad1ax.set_ylabel(&quot;Interaction energy (kcal/mol)&quot;,fontweight=&#x27;bold&#x27;,size=28,labelpad=20) 修改边框宽度12345bwith = 1.2ax0.spines[&#x27;bottom&#x27;].set_linewidth(bwith)ax0.spines[&#x27;left&#x27;].set_linewidth(bwith)ax0.spines[&#x27;top&#x27;].set_linewidth(bwith)ax0.spines[&#x27;right&#x27;].set_linewidth(bwith) 刻度朝内123# 此带代码应放在plt.plot()之前，才能生效plt.rcParams[&#x27;xtick.direction&#x27;] = &#x27;in&#x27;#将x周的刻度线方向设置向内plt.rcParams[&#x27;ytick.direction&#x27;] = &#x27;in&#x27;#将y轴的刻度方向设置向内 画自定义颜色曲线 1234567891011121314151617181920212223242526import numpy as npimport matplotlib.pyplot as pltfrom matplotlib.collections import LineCollectionx = np.linspace(0, 2*np.pi, 100)y = np.sin(x)z = np.cos(x)#上色数据points = np.array([x, y]).T.reshape(-1, 1, 2)segments = np.concatenate([points[:-1], points[1:]], axis=1)fig, ax = plt.subplots(figsize=(5,3))fig.subplots_adjust(bottom=0.1,left=0.2)##调整边界norm = plt.Normalize(min(z),max(z))lc = LineCollection(segments,cmap=&#x27;jet&#x27;,norm=norm)lc.set_array(z)lc.set_linewidth(2)line = ax.add_collection(lc)fig.colorbar(line)plt.xlim(0,2*np.pi)plt.ylim(-1,1)plt.savefig(&#x27;fig1.png&#x27;)plt.show() 如果想要画很多曲线的上色，其实只要一个循环就可以了，这里不赘述。 参考 [1] https://www.matplotlib.org.cn/ 直方图 1234567891011import numpy as np import matplotlib.pyplot as plt X = np.linspace(0,1,10)Y = np.ones(X.size)plt.rc(&#x27;font&#x27;, family=&#x27;Times New Roman&#x27;,size=26)fig, ax = plt.subplots(figsize=(10, 4))fig.subplots_adjust(bottom=0.2,left=0.2)ax.bar(X,Y,0.05,hatch=&#x27;\\\\\\\\&#x27;,color=&#x27;white&#x27;,edgecolor=&#x27;c&#x27;)ax.set_xlabel(&#x27;Eigenvector Amplitude&#x27;,fontsize=26,fontweight=&#x27;bold&#x27;)ax.set_ylabel(&#x27;Count&#x27;,fontsize=26,fontweight=&#x27;bold&#x27;)plt.show() 直方截断图 123456789101112131415import numpy as np import matplotlib.pyplot as plt from brokenaxes import brokenaxesX = np.linspace(0,1,10)Y = np.ones(X.size)plt.rc(&#x27;font&#x27;, family=&#x27;Times New Roman&#x27;,size=26)# fig = plt.subplots(figsize=(10, 4))fig = plt.figure(figsize=(10,4))ax = brokenaxes(ylims=((0,0.5),(0.6,1)),hspace=0.06,despine=False)# fig.subplots_adjust(bottom=0.2,left=0.2)ax.bar(X,Y,0.05,hatch=&#x27;\\\\\\\\&#x27;,color=&#x27;white&#x27;,edgecolor=&#x27;c&#x27;)# ax.set_xlabel(&#x27;Eigenvector Amplitude&#x27;,fontsize=26,fontweight=&#x27;bold&#x27;)# ax.set_ylabel(&#x27;Count&#x27;,fontsize=26,fontweight=&#x27;bold&#x27;)plt.show() 直方Log图 123456789101112131415161718import numpy as np import matplotlib.pyplot as plt from brokenaxes import brokenaxesX = np.linspace(0,1,10)Y = np.ones(X.size)plt.rc(&#x27;font&#x27;, family=&#x27;Times New Roman&#x27;,size=26)fig, ax= plt.subplots(figsize=(10, 4))# fig = plt.figure(figsize=(10,4))# ax = brokenaxes(ylims=((0,0.5),(0.6,1)),hspace=0.06,despine=False)fig.subplots_adjust(bottom=0.2,left=0.2)ax.bar(X,Y,0.05,hatch=&#x27;\\\\\\\\&#x27;,color=&#x27;white&#x27;,edgecolor=&#x27;c&#x27;)ax.set_xlabel(&#x27;Eigenvector Amplitude&#x27;,fontsize=26,fontweight=&#x27;bold&#x27;)ax.set_ylabel(&#x27;Count&#x27;,fontsize=26,fontweight=&#x27;bold&#x27;)&#x27;&#x27;&#x27;x、y坐标log&#x27;&#x27;&#x27;# ax.set_xscale(&quot;log&quot;)ax.set_yscale(&quot;log&quot;)plt.show() 点线图（Error Bar） 12345678910111213141516171819202122232425262728import numpy as np import matplotlib.pyplot as plt def plt_tc(tcfile): tc = np.loadtxt(tcfile) # print(tc) x = tc[:,0]/32.06 y = tc[:,1:4] y_mean = np.mean(y,axis=1) y_std = np.std(y,axis=1) # print(y_mean,y_std) plt.rc(&#x27;font&#x27;,family=&#x27;Times New Roman&#x27;,size=26) fig, ax = plt.subplots(figsize=(8,6)) fig.subplots_adjust(bottom=0.2,left=0.2) s1 = ax.errorbar(x,y_mean,yerr=y_std,capsize=10,capthick=4, fmt=&#x27;bo:&#x27;,mfc=&#x27;w&#x27;,mec=&#x27;b&#x27;,markersize=16,mew=2) ax.legend(handles=[s1],labels=[&#x27;$\\mathregular&#123;MoS_2&#125;$/$\\mathregular&#123;MoSe^&#123;78&#125;&#125;_\\mathregular&#123;2&#125;$&#x27;] ,loc=&#x27;best&#x27;, fontsize=26) ax.set_xlabel(&#x27;Mass ratio (R)&#x27;,fontsize=26,fontweight=&#x27;bold&#x27;) ax.set_ylabel(&#x27;Thermal conductivity (W/m-K)&#x27;,fontsize=26,fontweight=&#x27;bold&#x27;) ax.set_xticks([0,1,2,3,4,5,6]) plt.show() return if __name__ == &#x27;__main__&#x27;: tcfile = &#x27;./Thermal_conductivity.txt&#x27; plt_tc(tcfile) 数据 12345678.9 17.925 16.9828 16.447515.999 19.5132 18.2719 19.375132.06 25.3194 23.8796 25.242948.9 23.6784 21.4915 22.988878.9 15.9254 14.4494 15.1808127.6 8.5564 9.0751 8.8317209 5.2363 6.8541 5.3407 参考：[1] https://matplotlib.org/stable/api/_as_gen/matplotlib.pyplot.errorbar.html 去掉坐标轴123plt.xticks([]) #去掉x轴plt.yticks([]) #去掉y轴plt.axis(&#x27;off&#x27;) #去掉坐标轴 or 12345ax = plt.gca()ax.spines[&#x27;top&#x27;].set_visible(False)ax.spines[&#x27;bottom&#x27;].set_visible(False)ax.spines[&#x27;left&#x27;].set_visible(False)ax.spines[&#x27;right&#x27;].set_visible(False) or 123ax.set_xticks([]), ax_set_yticks([]) #关闭坐标刻度ax.axis(&#x27;off&#x27;) #关闭坐标轴ax.set_title()#设置标题 参考：[1] https://blog.csdn.net/lly1122334/article/details/90647962[2] https://blog.csdn.net/lanchunhui/article/details/80100430 调整图间距123fig.tight_layout()#调整整体处于正确位置fig.subplots_adjust(bottom=0.2,left=0.15)#调整图间距plt.subplots_adjust(wspace =0, hspace =0)#调整子图间距 参考：[1] https://blog.csdn.net/GAN_player/article/details/78543643 图片上添加文字123456plt.text(x, y, string, #(x坐标,y坐标,&#x27;text&#x27;) fontsize=15, verticalalignment=&quot;top&quot;, horizontalalignment=&quot;right&quot;)plt.text(100, 100, &#x27;text&#x27;) #example Maplotlib坐标轴反转12ax.invert_xaxis()ax.invert_yaxis() python matplotlib 下标的字体设置问题12345plt.rc(&#x27;font&#x27;, family=&#x27;Times New Roman&#x27;, size=18)fig = plt.figure(figsize=(12,6))fig.subplots_adjust(bottom=0.2,left=0.2,hspace=0.3) ax=fig.add_subplot(111) ax.set_ylabel(r&#x27;$\\regular&#123;gr_&#123;OO&#125;&#125;(r)$&#x27;,fontweight=&#x27;bold&#x27;,size=22) 图中图123456789101112131415161718192021222324252627282930import numpy as npimport matplotlib.pyplot as pltfrom mpl_toolkits.axes_grid1.inset_locator import zoomed_inset_axes, mark_inset# 创建数据x = np.linspace(0, 10, 100)y = np.sin(x)# 创建父图fig, ax = plt.subplots()# 绘制父图ax.plot(x, y, label=&#x27;sin(x)&#x27;)# 创建放大的子图axins = zoomed_inset_axes(ax,2, loc=&#x27;lower right&#x27;)mark_inset(ax, axins, loc1=2, loc2=1, linestyle=&quot;--&quot;, fc=&quot;none&quot;, ec=&quot;r&quot;)# 绘制放大的子图axins.plot(x, y, label=&#x27;sin(x)&#x27;)# 设置放大子图的范围axins.set_xlim(1, 3)axins.set_ylim(0.5, 1)# 将放大的子图绘制到父图上ax.indicate_inset_zoom(axins)fig.tight_layout()# 显示图像plt.show()","tags":[{"name":"Python","slug":"Python","permalink":"https://eastsheng.github.io/tags/Python/"},{"name":"Matplotlib","slug":"Matplotlib","permalink":"https://eastsheng.github.io/tags/Matplotlib/"}],"categories":[{"name":"程序学习","slug":"程序学习","permalink":"https://eastsheng.github.io/categories/%E7%A8%8B%E5%BA%8F%E5%AD%A6%E4%B9%A0/"},{"name":"Python","slug":"程序学习/Python","permalink":"https://eastsheng.github.io/categories/%E7%A8%8B%E5%BA%8F%E5%AD%A6%E4%B9%A0/Python/"},{"name":"Matplotlib","slug":"程序学习/Python/Matplotlib","permalink":"https://eastsheng.github.io/categories/%E7%A8%8B%E5%BA%8F%E5%AD%A6%E4%B9%A0/Python/Matplotlib/"}]},{"title":"Numpy/math","date":"2021-01-22T10:11:28.000Z","path":"wiki/2021/01/22/codes/python/numpy_1/","text":"[toc] Numpy矩阵创建 创建0向量&#x2F;三维矩阵 123import numpy as npnp.zeros((10))np.zeros((1,10,10)) 创建1向量&#x2F;三维矩阵 1np.ones((1,10,10)) 矩阵拼接\\转置123np.hstack((matrix1,matrix2)) #横向拼接np.vstack((matrix1,matrix2)) #纵向拼接matrix1.T #转置 求平均12np.mean(array,axis=1) #行平均np.mean(array,axis=0) #列平均 只保留独一无二值1np.unique() #去除numpy数组里的相同值 给矩阵嵌入值 例如：给矩阵x在第三列插入一列01np.insert(x,3,0,axis=1) 矩阵排序例子 按照第一列对矩阵fe进行排序1fe_sort = fe[np.argsort(fe[:,0])] 按照矩阵的第一列排序np.argsort(x[:,0])12345678910111213141516171819x = np.array([[9,6,5,11],[7,5,4,6],[12,9,8,10]])print(x)&#x27;&#x27;&#x27;[[ 9 6 5 11] [ 7 5 4 6] [12 9 8 10]]&#x27;&#x27;&#x27;print(x[np.argsort(x[:,0])]) #从小到大&#x27;&#x27;&#x27;[[ 7 5 4 6] [ 9 6 5 11] [12 9 8 10]]&#x27;&#x27;&#x27;print(x[np.argsort(-x[:,0])]) #从大到小&#x27;&#x27;&#x27;[[12 9 8 10] [ 9 6 5 11] [ 7 5 4 6]]&#x27;&#x27;&#x27; loadtxt &amp;&amp; savetxt numpy.loadtxt12numpy.loadtxt(fname, dtype=&lt;class &#x27;float&#x27;&gt;, comments=&#x27;#&#x27;, delimiter=None, converters=None, skiprows=0, usecols=None, unpack=False, ndmin=0, encoding=&#x27;bytes&#x27;, max_rows=None, *, like=None)numpy.savetxt(fname, X, fmt=&#x27;%.18e&#x27;, delimiter=&#x27; &#x27;, newline=&#x27;\\n&#x27;, header=&#x27;&#x27;, footer=&#x27;&#x27;, comments=&#x27;# &#x27;, encoding=None) 常用参数解释：12345fname #文件名dtype=&lt;class &#x27;float&#x27;&gt; #读取数据类型skiprows=0 #跳过几行读取usecols=None #读取哪几列，例如：usecols = (1,4,5)max_rows=None #最大读取几行 展示输出12np.set_printoptions(threshold=100000000) #显示省略的数据np.set_printoptions(suppress=True) #不易科学计数法输出 计算行列式 计算二维数组行列式 [[a, b], [c, d]] 也即是 ad - bc: 12a = np.array([[1,2],[3,4]])b = np.linalg.det(a) 计算多个矩阵的行列式: 12a = np.array([ [[1, 2], [3, 4]], [[1, 2], [2, 1]], [[1, 3], [3, 1]] ])b = np.linalg.det(a) https://numpy.org/doc/stable/reference/generated/numpy.linalg.det.html 相似的用法：slogdetscipy.linalg.det -参考：https://numpy.org/doc/stable/reference/generated/numpy.linalg.det.html np.linalg.norm(求范数)1x_norm=np.linalg.norm(x, ord=None, axis=None, keepdims=False) https://blog.csdn.net/hqh131360239/article/details/79061535 计算协方差矩阵 1234# numpy.cov(m, y=None, rowvar=True, bias=False, ddof=None, fweights=None, aweights=None)X=np.array([[1 ,5 ,6] ,[4 ,3 ,9 ],[ 4 ,2 ,9],[ 4 ,7 ,2]])print(X)print(np.cov(X,rowvar=False)) rowvar&#x3D;True,每行为一个变量,每一列是对这个变量的观察 rowvar&#x3D;False,与上相反 y&#x3D;None，另外一组变量和观察结果。y和m有相同的形式 https://numpy.org/doc/stable/reference/generated/numpy.cov.html https://www.huaweicloud.com/articles/5cac03cc9d220d6b0561dbaa161bcbcf.html https://blog.csdn.net/qq_37667364/article/details/80458108 Numpy.append12345678910111213141516import numpy as npmatrix = [ [1,2,3,4], [5,6,7,8], [9,10,11,12]]m1 = np.append(matrix,[[1,1,1,1]],axis=0)# 第0维度(行)尾部添加[[1,1,1,1]],注意两个[],相同维度print(&#x27;&gt;&gt;&gt;&gt;m1&gt;&gt;&gt;&gt;\\n&#x27;,m1)m2 = np.append(matrix,[[1],[1],[1]],axis=1)# 第1维度(列)尾部添加[[1],[1],[1]],注意两个[],相同维度print(&#x27;&gt;&gt;&gt;&gt;m2&gt;&gt;&gt;&gt;\\n&#x27;,m2)m3 = np.append(matrix,[1,1,1,1])# 拉平后再尾部添加[1,1,1,1]，这里可以[[1,1,1,1]]和[1,1,1,1]均可print(&#x27;&gt;&gt;&gt;&gt;m3&gt;&gt;&gt;&gt;\\n&#x27;,m3) 单位矩阵123np.identity(n) #生成n×n的单位矩阵np.diag([1] * 4) # 生成单位对角阵np.eye(3) # 生成单位矩阵 点乘与叉乘12#点乘直接a*bnumpy.dot(a,b) #叉乘 矩阵中字符串改为浮点数1234x = np.array([&#x27;1.1&#x27;, &#x27;1.2&#x27;, &#x27;1.3&#x27;])y = x.astype(np.float64)# ory = x.astype(float) Math对数函数12import mathmath.log(x[, base]) x – 数值表达式 base – 可选，底数，默认为 e math.log(x) 就相当于数学中的ln(x)，x&gt;0，求底数为e的对数，e &#x3D; 2.718281828459；","tags":[{"name":"Python","slug":"Python","permalink":"https://eastsheng.github.io/tags/Python/"},{"name":"Numpy","slug":"Numpy","permalink":"https://eastsheng.github.io/tags/Numpy/"},{"name":"math","slug":"math","permalink":"https://eastsheng.github.io/tags/math/"}],"categories":[{"name":"程序学习","slug":"程序学习","permalink":"https://eastsheng.github.io/categories/%E7%A8%8B%E5%BA%8F%E5%AD%A6%E4%B9%A0/"},{"name":"Python","slug":"程序学习/Python","permalink":"https://eastsheng.github.io/categories/%E7%A8%8B%E5%BA%8F%E5%AD%A6%E4%B9%A0/Python/"},{"name":"Numpy","slug":"程序学习/Python/Numpy","permalink":"https://eastsheng.github.io/categories/%E7%A8%8B%E5%BA%8F%E5%AD%A6%E4%B9%A0/Python/Numpy/"}]},{"title":"Python问题与解决方法汇总","date":"2021-01-22T10:11:28.000Z","path":"wiki/2021/01/22/codes/python/problems/","text":"[toc] 1. Windows下&quot;MINGW64&quot;中运行python没反应 （1）. 可以pip list，也可以python --version，但是直接输入python就卡那不动了 （2）. 解决方法–&gt;在 MINGW64 git shell 中输入以下命令即可解决： 1alias python=&#x27;winpty python.exe&#x27; （3）. 但是，发现这只是临时的，关了再重新打开输入python，还是没反应 （4）. 永久解决方法，将第2步命令直接复制到以下文件中：C:\\Users\\yourcomputer\\.bash_profile 参考链接：[1] https://www.codenong.com/32597209/ 2. FileNotFoundError: Could not find module （1）.引用vlc库时报错： 12FileNotFoundError: Could not find module &#x27;...\\2021\\2021-3\\libvlc.dll&#x27; (or one of its dependencies). Try using the full path with constructor syntax. （2）.解决方法： ①. 首先pip list查看vlc的版本： ②. 然后，下载并解压对应vlc版本 http://download.videolan.org/pub/videolan/vlc/ ③. 将文件夹中plugins、libvlc.dll、libvlccore.dll，复制到添加到已经设置环境变量的文件夹中，这里我直接复制到D:\\softwares\\Python\\Python39\\Scripts中 参考链接：[1] https://stackoverflow.com/questions/59014318/filenotfounderror-could-not-find-module-libvlc-dll[2] https://blog.csdn.net/fleaxin/article/details/101943941④. 解决 3. Centos 7安装python3 Centos 7安装python3 4. StopIteration StopIteration异常，一般是由于迭代时所给的数据超出实际数据范围所致； 如果想要正常运行已给出数据范围的程序，则可以处理异常程序：123456re = iter(range(5))try: for i inrange(200): print(&quot;normal: &quot;,re.next())except StopIteration: print(&#x27;Here is stop &#x27;,i) 5. overflow encountered1RuntimeWarning: overflow encountered in det r = _umath_linalg.det(a, signature=signature) 计算行列式时溢出； 没解决。 6. unindent does not match any outer indentation level 如果缩进没有问题的画，这个主要是错误主要就是TAB和空格混用了。 使用notepad++打开视图&gt;显示符号&gt;显示空格与制表符查看缩进。 修改成一种就可以了。 7. 安装conda报错1Solving environment: failed with initial frozen solve. Retrying with flexible solve. https://tools-platform-guide.readthedocs.io/zh_CN/latest/anaconda/conda%E5%AE%89%E8%A3%85%E7%8E%AF%E5%A2%83%E6%8A%A5%E9%94%99/ https://blog.csdn.net/qq_35203425/article/details/103872420?utm_medium=distribute.pc_relevant.none-task-blog-2~default~baidujs_title~default-4.no_search_link&amp;spm=1001.2101.3001.4242 执行： 1234conda -Vconda update -n base condaconda update --all 还不行就换conda镜像 1234567channels: - https://mirrors.ustc.edu.cn/anaconda/pkgs/main/ - https://mirrors.ustc.edu.cn/anaconda/cloud/conda-forge/ - https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free/ - defaultsshow_channel_urls: true","tags":[{"name":"Python","slug":"Python","permalink":"https://eastsheng.github.io/tags/Python/"},{"name":"Bug","slug":"Bug","permalink":"https://eastsheng.github.io/tags/Bug/"}],"categories":[{"name":"程序学习","slug":"程序学习","permalink":"https://eastsheng.github.io/categories/%E7%A8%8B%E5%BA%8F%E5%AD%A6%E4%B9%A0/"},{"name":"Python","slug":"程序学习/Python","permalink":"https://eastsheng.github.io/categories/%E7%A8%8B%E5%BA%8F%E5%AD%A6%E4%B9%A0/Python/"}]},{"title":"单位/常数","date":"2021-01-21T10:11:28.000Z","path":"wiki/2021/01/21/notes/units_or_constants/","text":"[toc] 单位 Unit Converter Online UnitConverter 1. 质量 1 amu(Atomic Mass Unit) (12C&#x2F;12)是电子静止质量的1822.83倍。 2. 长度 Bohr&#x3D;0.52917706 angstrom 3. 压力 标准大气压（Standard atmospheric pressure）是在标准大气条件下海平面的气压，1644年由物理学家托里拆利提出，其值为101.325kPa，是压强的单位，记作atm。 1 bar &#x3D; 100000 Pa &#x3D; 100 kPa参考：[1] 《工程热力学》-沈维道 1 Pa = 1 N/m² = 1（kg·m·s-2）/m² =1（kg·m-1·s-2） = 0.01 mbar（毫巴） = 10−5 bar（巴） ≈ 10−5 kgf/cm2（千克力/平方厘米） 帕斯卡与其他单位的转换 1巴 100 000 Pa 1毫巴 100 Pa 1标准大气压 101 325 Pa 1 mmHg（毫米水银柱） 133.322 Pa 1 inHg（英寸水银柱） 3386.38 Pa 1 mmH2O（毫米水柱） 9.8 Pa 4. 时间 时间单位转换器在线计算器 千年–&gt;纳秒 常用： 1秒 &#x3D; $1×10^3$ 毫秒 1秒 &#x3D; $1×10^6$ 微秒 1秒 &#x3D; $1×10^9$ 纳秒 1秒 &#x3D; $1×10^{12}$ 皮秒 1秒 &#x3D; $1×10^{15}$ 飞秒 1 fs &#x3D; $1×10^{-6}$ ns 5. 能量 1 kcal&#x2F;mol &#x3D; 0.0434 eV &#x3D; 4.184 kJ&#x2F;mol &#x3D; 503.217 K 1 eV &#x3D; 23.0605 kcal&#x2F;mol &#x3D; 96.4853 kJ&#x2F;mol &#x3D; 1.16045×104 K 1 kJ&#x2F;mol &#x3D; 0.239006 kcal&#x2F;mol &#x3D; 120.272 K 常数 玻尔兹曼常数 Kb &#x3D; 1.3806504×10-23 [J&#x2F;K] 约化普朗克常数 (reduced Planck constant) ℏ&#x3D;h&#x2F;(2π) &#x3D; 1.05457266(63)×10-34 J·s 欧拉数 e (Euler’s Number) e &#x3D; 2.7182818284590452353602874713527(and more)","tags":[{"name":"Daily Notes","slug":"Daily-Notes","permalink":"https://eastsheng.github.io/tags/Daily-Notes/"},{"name":"units","slug":"units","permalink":"https://eastsheng.github.io/tags/units/"},{"name":"constants","slug":"constants","permalink":"https://eastsheng.github.io/tags/constants/"}],"categories":[{"name":"学习笔记","slug":"学习笔记","permalink":"https://eastsheng.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"},{"name":"杂记","slug":"学习笔记/杂记","permalink":"https://eastsheng.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E6%9D%82%E8%AE%B0/"}]},{"title":"Alamode","date":"2020-11-21T15:07:16.000Z","path":"wiki/2020/11/21/others/2020/alamode-1/","text":"1. alamode安装参考https://zhuanlan.zhihu.com/p/145873368 Alamode 运行 执行almalm alm.in &gt; alm.log MODE &#x3D; suggest的时候可以获得一个包含笛卡尔坐标的displacement patternsMODE &#x3D; optimize的时候需要一个数据集（DFSET）,且得到xx.fcs(力常数),xx.xml(必要的信息) 执行anphonanphon anphon.in &gt; anphon.logormpirun -np 16 anphon anphon.in &gt; anphon.log MODE &#x3D; phonons的时候perform (harmonic) phonon calculationsMODE &#x3D; RTA的时候conduct thermal conductivity calculations plot 2. 使用LAMMPS和Alamode计算热导率、PDOS、弛豫时间等流程： 运行alm.in,生成xxx.pattern_HARMONIC和xxx.pattern_ANHARM3 需要注意：NORDER = 2 # 1: harmonic, 2: cubic, .. 其他信息修改参照官网 用alamode自带的displace.py，生成harm1.lammps和cubic1.lammps 如果harm和cubic文件很多的话，几百几千个，这里可能会出现harm0001.lammps这种文件名，会报错。 用脚本运行lammps,in.sw,使harm1.lammps和cubic1.lammps 分别生成XFSET.harm1和XFSET.cubic1 最后使用alamode自带的extract.py，从XFSET.harm（XFSET.cubic）提取到DESET_harmonic（DFSET_cubic）中 修改alm.in中的MODE为optimize并添加一些信息，再次运行alm.in，会得到xxx.fcs和xxx.xml, 利用anphon通过xxx.xml会得到xxx.bands文件，然后通过自带的plotband.py可以计算声子色散； 同样获得pdos 具体参见官网注意： cutoff 的值可以从log中查看 3. Alamode在训练的时候出现的错误：123terminate called after throwing an instance of &#x27;std::bad_alloc&#x27; what(): std::bad_allocAborted (core dumped) 主要是由于运行内存不足； 总结两种原因，一种是运行的task太多导致，另一种是一个task的数据量太大了（比如这里选的截断半径太大） 4. Alamode中拟合力常数的时候 Fitting error (%) : 100,找不到原因 截断半径的原因？怎么设置cutoff? 运行lammps的时候，只run了0步，因为例子力也是0步，会不会是这里的原因？","tags":[{"name":"Alamode","slug":"Alamode","permalink":"https://eastsheng.github.io/tags/Alamode/"}],"categories":[{"name":"科研学习","slug":"科研学习","permalink":"https://eastsheng.github.io/categories/%E7%A7%91%E7%A0%94%E5%AD%A6%E4%B9%A0/"},{"name":"Alamode","slug":"科研学习/Alamode","permalink":"https://eastsheng.github.io/categories/%E7%A7%91%E7%A0%94%E5%AD%A6%E4%B9%A0/Alamode/"}]},{"title":"论文笔记2020","date":"2020-07-23T10:11:28.000Z","path":"wiki/2020/07/23/notes/PaperReadNote2020/","text":"[toc] 2020-07 07-23 1. 声子线宽Γ(phonon linewidth) 声子线宽与声子的寿命τ(lifetime or relaxtion time)有关,声子寿命(τ)=1/2*半高宽(FWHM)。 Full width at half maximum (FWHM) equals 2Γ τ &#x3D; 1&#x2F;2Γ. 2. 拉曼光谱(raman spectra) 利用光子与原子产生的散射光来研究振动能量方式的。 在拉曼散射中，入射光子与原子发生非弹性散射，进行能量交换而产生拉曼信号。 产生的散射光中小于原入射光子频率的称为斯托克斯（Stokes）偏移， 大于入射光子频率的称为反斯托克斯（Anti-Stokes）偏移。 等于入射光子频率的称为瑞利（Rayleigh）偏移。 3. 杂化(hybridization) 在成键过程中，由于原子间的相互影响，同一原子中几个能量相近的不同类型的原子轨道（即波函数），可以进行线性组合，重新分配能量和确定空间方向，组成数目相等的新的原子轨道，这种轨道重新组合的过程称为杂化（hybridization），杂化后形成的新轨道称为 杂化轨道（hybrid orbital）。 07-24 4. 散射相空间SPS(scattering phase space 相空间(phase space) ，相空间的散射理论 相空间在数学与物理学中，是一个用以表示出一系统所有可能状态的空间；系统每个可能的状态都有一相对应的相空间的点。 搞不懂啊…… 07-27 5. 泡利不相容原理(Pauli exclusion principe) 在费米子组成的系统中，不能有两个或两个以上的粒子处于完全相同的状态。 通俗的说就是，两个相同的粒子不能处于同一个状态。 费米子(玻色子)满足(不满足)泡利不相容原理。 自旋为整数(0,1,2……)的是玻色子，为半奇数(1&#x2F;2,3&#x2F;2,5&#x2F;2……)的为费米子。 玻色子一般有：光子、 费米子一般有：电子、中子、质子…… 2020-(08~11) 08-19 6. 热力学定律老是记不住，参考自：《热力学.统计物理》第五版—汪志诚 热力学第一定律：能量守恒定律，公式：U1-U2&#x3D;W+Q，系统在终态2和初态1的内能之差（U1-U2）等于在过程中外界对系统所作的功W与系统从外界吸收的热量Q之和。（也即是，在过程中通过作功和传热两种方式所传递的能量，都转化为系统的内能） 表述1：自然界一切物质都具有能量，能量有各种不同的形式，可以从一种形式转化为另一种形式，从一个物体传递到另一个物体，在传递和转化中能量的数量不变。 表述2：第一类永动机是不可能的造成的。 热力学第二定律： 克氏表述：不可能把热量从低温物体传到高温物体而不引起其他变化。 开氏表述：不可能从单一热源吸热使之完全变成有用的功而不引起其他变化。（或者，第二类永动机是不可能造成的。） 卡诺定理：所有工作于两个一定温度之间的热机，以可逆机的效率最高。 推论：所有工作于两个一定温度之间的可逆热机，其效率相等。 热力学第三定律：不可能通过有限的步骤使一个物体冷却到热力学温度的零度（绝对零度）。 09-1 7. RDFThe radial distribution function(RDF): definitions通俗的讲就是，局部的密度与全局的密度的比值。 09-08 8. 极化（polarization） 在原始晶体材料中，正常的模，都是具有明确极化的声子模； 当材料变得越无序的时候，给定模式的原子振动方向就会变得越不像波、well-defined、越随机。也即是，极化越弱，波矢量的定义缺失。 9. phonon wave-packets11-02 The dominant width of phonon wave-packets is also called coherent length. 10. H-phase和T-phase12-07 图片引用自：DOI: 10.1021&#x2F;acsnano.6b00148 TMDs的H-phase和T-phase,表示不同结构 不同材料的不同phase的稳定性不同； 例如MoTe2在H-phase更稳定；而WTe2在T-phase更稳定 两个phase的能量差不是很大，所以两项可以共存（coexistence）， 却有不同的电子性质，比如在H-phase是半导体，在T-phase可能是半金属或者拓扑绝缘体,跟层数有关。 11. 简并（Degeneration&amp;Entartung） 简并（Degeneration&amp;Entartung） 简并 12. 绝热近似（Born-Oppenheimer）： 将原子核与电子的运动分开考虑，认为电子能绝热于原子核的运动。 也即是，在考虑电子运动时，原子核处于静止状态（电子的运动速度比原子核高出几个量级）； 考虑原子核的运动则不考虑周围电子的分布。 2021-03-16 13. AA stacking和 AB(BA) stacking的区别 参考文献：[1]. Xu K, Xu Y, Zhang H, et al. The role of Anderson’s rule in determining electronic, optical and transport properties of transition metal dichalcogenide heterostructures[J]. Physical Chemistry Chemical Physics, 2018, 20(48): 30351-30364. 参考文献：[2]. Quan, J., Linhart, L., Lin, ML. et al. Phonon renormalization in reconstructed MoS2 moiré superlattices. Nat. Mater. (2021). 2021-03-26 14. Wiedemann-Franz law（威德曼-弗朗兹定律） Wiedemann-Franz定律是关于金属材料热导率与电导率之间的关系的定律。 自由电子引起的热导率可以通过电导率，利用Wiedemann-Franz定律得到。 在物理学中，wiedemann–franz定律的简述是，金属的热导率（k）与导电率（σ）之比与温度（t）成正比。 κ&#x2F;σ&#x3D;LT（常数L即洛伦兹数(Lorenz number)） 即在给定温度下，许多金属材料的热导率(κ)与它的电导率(σ)之比约为常数。 德国物理学家Gustav Wiedemann和Rudolph Franz于1853年由大量实验事实发现，许多金属的热导率和电导率的比值都是一个常数，这一规律称为威德曼-弗朗兹定律。 1872年，Ludvig Lorenz进一步发现，比值λ&#x2F;σT是与金属种类无关的常数，T是绝对温度，这常数用L表示，称洛伦兹数。Ludwig Lorenz发现了κ&#x2F;σ与温度的比例关系。 2021-04-29 15. 格波（lattice wave） 格波（lattice wave）是原子热振动的一种描述。 从整体上看，处于格点上的原子的热振动可描述成类似于机械波传播的结果，这种波称为格波，即晶格的振动模。 晶格具有周期性，因此晶格的振动模具有波的形式。 格波和一般连续介质波有共同的波的特性，但也有它不同的特点。","tags":[{"name":"Paper Notes","slug":"Paper-Notes","permalink":"https://eastsheng.github.io/tags/Paper-Notes/"},{"name":"2020","slug":"2020","permalink":"https://eastsheng.github.io/tags/2020/"}],"categories":[{"name":"学习笔记","slug":"学习笔记","permalink":"https://eastsheng.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"},{"name":"论文笔记","slug":"学习笔记/论文笔记","permalink":"https://eastsheng.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E8%AE%BA%E6%96%87%E7%AC%94%E8%AE%B0/"},{"name":"2020","slug":"学习笔记/论文笔记/2020","permalink":"https://eastsheng.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E8%AE%BA%E6%96%87%E7%AC%94%E8%AE%B0/2020/"}]},{"title":"Hueman主题","date":"2020-07-07T05:20:22.000Z","path":"wiki/2020/07/07/others/2020/Hexo-hueman/","text":"这个主题挺不错的，不过在配置的时候有些波折，记录一下。 1. 安装1git clone https://github.com/ppoffice/hexo-theme-hueman.git themes/hueman 注： 这里说一下与这个主题无关的bug，git clone命令后面的目录theme/hueman,这个下载路径这么写的话是正常的clone到博客目录下的theme文件夹中，但是，如果这么写/theme/hueman, 那就会clone到git安装路径下的theme文件夹下。 2. 配置_config.yml1theme: hueman 注： 此处是在博客目录下的_config.yml修改，不是主题下的。 也别忘了把主题目录下的config.yml.example名字改成config.yml 3. 进入主题下的_config.yml 第一个坑 123456# Menusmenu: Home: / # Delete this row if you don&#x27;t want categories in your header nav bar Categories: About: /about/index.html 首先，按照以往的经验，直接在menu下添加菜单就可以，并在git bash下创建page，例如：hexo new page people1234567# Menusmenu: Home: / # Delete this row if you don&#x27;t want categories in your header nav bar Categories: People: /people About: /about/index.html 但是，经过hexo s 预览http://localhost:4000/会发现，在菜单栏下面的people没有显示People,而是显示了index.people。 解决方法—找到主题下的languages文件夹，比如打开en.yml,在相应位置添加people: &quot;People&quot;就可以了。 第二个坑 在heuman主题预览的菜单栏里，注意到有个Technology是有下拉菜单栏的，搞了好久没搞懂怎么搞。 最后，终于搞定了，原来是这么回事啊，都怪自己没有仔细看mamual. 也是因为测试主题的时候没有分类的post，没法一眼看出来。 之前，没有注意到下面menu有个Categories:,应该是在新建post里添加Categories就会在菜单栏里显示分类，而这个主题的下拉菜单并不是真正的下拉菜单，而是分类放到了菜单栏里。 比如下面的配置，就会显示Technology下拉菜单是Github 1234title: categories:- Technology- Github 还可以通过删除Categories:,不在菜单栏里显示分类；而且那个Categories:在哪放着，你的分类菜单栏就会在哪显示，合理配置。 3. 总结与其去google@baidu,不如好好看manual，不然费时又费精力，最后还得看manual……手动滑稽 附上主题源码","tags":[{"name":"Hueman","slug":"Hueman","permalink":"https://eastsheng.github.io/tags/Hueman/"}],"categories":[{"name":"Hexo","slug":"Hexo","permalink":"https://eastsheng.github.io/categories/Hexo/"}]},{"title":"Vscode常用","date":"2020-06-30T03:03:46.000Z","path":"wiki/2020/06/30/others/2020/Vscode1/","text":"Ctrl+Shift+P或F1打开命令面板，例如输入Configure Display Language可以换语言，如选择zh-cn，切换为中文。 F11全屏模式。","tags":[{"name":"VScode","slug":"VScode","permalink":"https://eastsheng.github.io/tags/VScode/"}],"categories":[{"name":"学习笔记","slug":"学习笔记","permalink":"https://eastsheng.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"},{"name":"杂记","slug":"学习笔记/杂记","permalink":"https://eastsheng.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E6%9D%82%E8%AE%B0/"}]},{"title":"无法将“mklink”项识别为 cmdlet","date":"2020-06-29T16:25:26.000Z","path":"wiki/2020/06/30/others/2020/windows-mklink/","text":"1. 目的 目的是要把C盘的一个文件夹链接到E盘， 这里我是为了要把VScode安装的插件位置从C盘link到E盘，在PowerShell（因为使用cmd的话没有权限）使用命令如下： 1mklink /d &quot;C:\\Users\\yourcomputername\\.vscode\\extensions&quot; &quot;E:\\VScodePlug\\extensions\\extensions&quot; 2. 错误信息12345678mklink : 无法将“mklink”项识别为 cmdlet、函数、脚本文件或可运行程序的名称。请检查名称的拼写，如果包括路径，请确保路径正确，然后再试一次。所在位置 行:1 字符: 1+ mklink /d &quot;C:\\Users\\yourcomputername\\.vscode\\extensions&quot; &quot;E:\\VScodePlug ...+ ~~~~~~ + Cat##egoryInfo : ObjectNotFound: (mklink:String) [], CommandNotFoundException + FullyQualifiedErrorId : CommandNotFoundException 3. 错误原因 因为PowerShell中没有mklink命令 4. 解决方法 在进入PowerShell后先输出 cmd,在执行： 1mklink /d &quot;C:\\Users\\yourcomputername\\.vscode\\extensions&quot; &quot;E:\\VScodePlug\\extensions\\extensions&quot; 5. 成功提示1为 C:\\Users\\yourcomputername\\.vscode\\extensions &lt;&lt;===&gt;&gt; E:\\VScodePlug\\extensions 创建的符号链接 参考链接","tags":[{"name":"Windows","slug":"Windows","permalink":"https://eastsheng.github.io/tags/Windows/"},{"name":"mklink","slug":"mklink","permalink":"https://eastsheng.github.io/tags/mklink/"}],"categories":[{"name":"Windows","slug":"Windows","permalink":"https://eastsheng.github.io/categories/Windows/"}]},{"title":"给icarus主题换背景图片","date":"2020-06-28T16:00:34.000Z","path":"wiki/2020/06/29/others/2020/Hexo-icarus/","text":"在.&#x2F;themes&#x2F;..&#x2F;source&#x2F;css&#x2F;style.styl添加如下代码12345678// Custom styles.body &#123; background:url(https://source.unsplash.com/random/1600x900?wallpapers); background-repeat: no-repeat; background-attachment:fixed; background-position:50% 50%; background-size: cover&#125; 如果想要自定义背景图片，直接给图片路径就可以，或者图床的url 这里使用的是unsplash，刷新后自动更换美图。 注：是添加不是替换，不然以前的布局将丢失。","tags":[{"name":"Icarus","slug":"Icarus","permalink":"https://eastsheng.github.io/tags/Icarus/"}],"categories":[{"name":"Hexo","slug":"Hexo","permalink":"https://eastsheng.github.io/categories/Hexo/"}]},{"title":"Windows相关","date":"2020-06-24T03:29:49.000Z","path":"wiki/2020/06/24/others/2020/windows-problems/","text":"1. 自动获取 ip 地址，获取了 169 开头的ip地址？自从家里来到学校之后，就连接不上校网，自动获取的ip地址老是169开头，但，电脑是可以连上路由器无线和网线的，就是在直接连校网的网线(需要登录账号密码)出现的这种问题。 2. windows定时关机定时3600s后关机：shutdown -s -t 3600取消：shutdown -a 3. win10系统在重分析点缓冲区中的标记无效 的解决方法https://blog.csdn.net/COCO56/article/details/108634554 4. 若在计算机管理中找不到解禁管理员时 打开命令提示符（管理员） 执行：net user administrator /active:yes 后回车即可解禁管理员账户 也可以关闭：net user administrator /active:no 5. 重装系统后经典属性界面找回 参考：最新WIN10 20H2系统找回经典系统属性界面的几种方法","tags":[{"name":"Windows","slug":"Windows","permalink":"https://eastsheng.github.io/tags/Windows/"}],"categories":[{"name":"Windows","slug":"Windows","permalink":"https://eastsheng.github.io/categories/Windows/"}]},{"title":"Origin Integrate","date":"2020-06-22T11:16:25.000Z","path":"wiki/2020/06/22/others/2020/Origin-2/","text":"积分 选中数据，并按照figure2找到 Integrate 操作完之后，就会在figure1中E(Y2)列出现积分后的数据 接下来就是画图，plot&gt;line figure1 figure2","tags":[{"name":"origin","slug":"origin","permalink":"https://eastsheng.github.io/tags/origin/"}],"categories":[{"name":"科研学习","slug":"科研学习","permalink":"https://eastsheng.github.io/categories/%E7%A7%91%E7%A0%94%E5%AD%A6%E4%B9%A0/"},{"name":"Origin","slug":"科研学习/Origin","permalink":"https://eastsheng.github.io/categories/%E7%A7%91%E7%A0%94%E5%AD%A6%E4%B9%A0/Origin/"}]},{"title":"Origin 画双y轴","date":"2020-06-22T07:21:49.000Z","path":"wiki/2020/06/22/others/2020/Origin-1/","text":"1. 首先画一个单y轴 选中数据并，plot&gt;line 画出图 figure1 figure2 2. 然后插入另一个坐标轴 如图figure3,可以得到figure4–双y轴 figure3 figure4 3. 插入数据，并调格式得到完美的双y轴图片 右键，选中figure5中的 Layer Contents,选择要画的数据 调一下格式就可以得到最后的图片 figure5 figure6","tags":[{"name":"origin","slug":"origin","permalink":"https://eastsheng.github.io/tags/origin/"}],"categories":[{"name":"科研学习","slug":"科研学习","permalink":"https://eastsheng.github.io/categories/%E7%A7%91%E7%A0%94%E5%AD%A6%E4%B9%A0/"},{"name":"Origin","slug":"科研学习/Origin","permalink":"https://eastsheng.github.io/categories/%E7%A7%91%E7%A0%94%E5%AD%A6%E4%B9%A0/Origin/"}]},{"title":"Common Commands of Hexo","date":"2020-06-17T16:00:00.000Z","path":"wiki/2020/06/18/others/2020/Hexo-command/","text":"1. Create a new post123$ hexo new [layout] &quot;My New Post&quot;where layout: post; page; draftdefault layout==post More info: Writing 2. Run server123$ hexo serveror$ hexo s More info: Server 3. Generate static files123$ hexo generateor$ hexo g More info: Generating 4. Deploy to remote sites123$ hexo deployor$ hexo d 5. Generate static files and Deploy to remote sites simultaneously12$ hexo g -dhexo clean &amp;&amp; hexo douban -bgm &amp;&amp; hexo g &amp;&amp; hexo d More info: Deployment 6. 参考链接 建站参考链接 Hexo同时部署在GitHub、Coding、Gitee Hexo博客提交百度和Google收录参考链接 Hexo 双线部署到 Coding 和 GitHub 提升访问速度 完全小白教程：使用Coding Pages和Gridea搭建个人博客 自定义一个不使用主题模板渲染的独立页面 https://www.cnblogs.com/TRHX/archive/2004/01/13/11699990.html 自动部署Gitee上： [1] https://github.com/yanglbme/gitee-pages-action[2] https://blog.csdn.net/qq_35977139/article/details/113764322","tags":[{"name":"Hexo command","slug":"Hexo-command","permalink":"https://eastsheng.github.io/tags/Hexo-command/"}],"categories":[{"name":"Hexo","slug":"Hexo","permalink":"https://eastsheng.github.io/categories/Hexo/"}]},{"title":"Ovito","date":"2020-05-09T11:49:48.000Z","path":"wiki/2020/05/09/others/2020/Ovito/","text":"1. 去掉盒子 直接把Display下的Simulation Cell前的框框里的√去掉即可。","tags":[{"name":"Ovito","slug":"Ovito","permalink":"https://eastsheng.github.io/tags/Ovito/"}],"categories":[{"name":"科研学习","slug":"科研学习","permalink":"https://eastsheng.github.io/categories/%E7%A7%91%E7%A0%94%E5%AD%A6%E4%B9%A0/"},{"name":"Ovito","slug":"科研学习/Ovito","permalink":"https://eastsheng.github.io/categories/%E7%A7%91%E7%A0%94%E5%AD%A6%E4%B9%A0/Ovito/"}]},{"title":"控制Tecplot里的原子间距","date":"2020-05-08T11:49:48.000Z","path":"wiki/2020/05/08/others/2020/Tecplot-1/","text":"1. Plot&lt;Axis&lt;独立操作x,y,z的Size Factors Plot&lt;Axis 独立操作x,y,z的Size Factors 调原子间距效果 2. x,y,z方向的视角调整 可以手动调，但正视图、侧视图、俯视图手动调可能不太好调 一般这种可视化软件，不应该都在很明显的位置嘛？ 这个就不明显，藏在这里： View&gt;Rotate 3D Rotate 3. 很奇怪，也非常便捷的一个操作 采用Tecplot画能量图的时候，只要把之前画过的.lay文件，直接复制到另一个要画的文件夹里，就可以直接画出来。 注意：这个.lay文件要与要画图的文件夹里你要画的那个文件名要一样， 这样，直接复制粘贴过去，就可以直接画出来，里面的设置不变，很奇怪，但很便捷。","tags":[{"name":"Tecplot","slug":"Tecplot","permalink":"https://eastsheng.github.io/tags/Tecplot/"}],"categories":[{"name":"科研学习","slug":"科研学习","permalink":"https://eastsheng.github.io/categories/%E7%A7%91%E7%A0%94%E5%AD%A6%E4%B9%A0/"},{"name":"Tecplot","slug":"科研学习/Tecplot","permalink":"https://eastsheng.github.io/categories/%E7%A7%91%E7%A0%94%E5%AD%A6%E4%B9%A0/Tecplot/"}]},{"title":"Fortran error","date":"2020-04-16T10:11:28.000Z","path":"wiki/2020/04/16/codes/fortran/error/","text":"[toc] 1. FFTW调用出错1234567/tmp/cc7nhiwo.o: In function `MAIN__&#x27;:xxx.f90:(.text+0x200c): undefined reference to `dfftw_plan_dft_1d_&#x27;xxx.f90:(.text+0x202c): undefined reference to `dfftw_execute_dft_&#x27;xxx.f90:(.text+0x203b): undefined reference to `dfftw_destroy_plan_&#x27;xxx.f90:(.text+0x21be): undefined reference to `dfftw_plan_dft_1d_&#x27;xxx.f90:(.text+0x21db): undefined reference to `dfftw_execute_dft_&#x27;xxx.f90:(.text+0x21ea): undefined reference to `dfftw_destroy_plan_&#x27; 解决方法： 1gfortran xxx.f90 -L/usr/local/fftw/lib -lfftw3 如果没有在xxx.f90中include &#39;/usr/local/fftw/include/fftw3.f&#39;路径，仅仅include &#39;fftw3.f&#39; 则可以： 1gfortran xxx.f90 -I/usr/local/fftw/include -L/usr/local/fftw/lib -lfftw3 参考链接：[1] https://blog.csdn.net/TedOne_LZ/article/details/89151411","tags":[{"name":"Fortran","slug":"Fortran","permalink":"https://eastsheng.github.io/tags/Fortran/"},{"name":"error","slug":"error","permalink":"https://eastsheng.github.io/tags/error/"}],"categories":[{"name":"程序学习","slug":"程序学习","permalink":"https://eastsheng.github.io/categories/%E7%A8%8B%E5%BA%8F%E5%AD%A6%E4%B9%A0/"},{"name":"Fortran","slug":"程序学习/Fortran","permalink":"https://eastsheng.github.io/categories/%E7%A8%8B%E5%BA%8F%E5%AD%A6%E4%B9%A0/Fortran/"}]},{"title":"python镜像配置","date":"2019-08-05T10:11:28.000Z","path":"wiki/2019/08/05/codes/python/pip_install/","text":"[toc] Window python 镜像 临时 1pip install numpy -i http://mirrors.aliyun.com/pypi/simple/ 永久 在 windows “文件资源管理器” 地址栏 输入 %APPDATA% 回车；或者直接找到路径C:\\Users\\yourcomputer\\AppData\\Roaming 创建名为pip的文件夹 在里面新建名为 pip.ini 的配置文件 在 pip.ini 文件中输入以下内容，然后保存1234[global]index-url=http://mirrors.aliyun.com/pypi/simple/[install]trusted-host=mirrors.aliyun.com 然后可以试试快不快 国内镜像源： 1234567891011阿里http://mirrors.aliyun.com/pypi/simple/清华大学 https://pypi.tuna.tsinghua.edu.cn/simple/中国科技大学 https://pypi.mirrors.ustc.edu.cn/simple/豆瓣(douban) http://pypi.douban.com/simple/中国科学技术大学 http://pypi.mirrors.ustc.edu.cn/simple/ Linux python 镜像 临时(同window) 12pip install pyspider -i http://mirrors.aliyun.com/pypi/simple/ 永久 1234[global]index-url=http://mirrors.aliyun.com/pypi/simple/[install]trusted-host=mirrors.aliyun.com 12终端打开pip.conf写入即可vim ~/.pip/pip.conf","tags":[{"name":"Python","slug":"Python","permalink":"https://eastsheng.github.io/tags/Python/"},{"name":"Tutorials","slug":"Tutorials","permalink":"https://eastsheng.github.io/tags/Tutorials/"},{"name":"python镜像配置","slug":"python镜像配置","permalink":"https://eastsheng.github.io/tags/python%E9%95%9C%E5%83%8F%E9%85%8D%E7%BD%AE/"}],"categories":[{"name":"程序学习","slug":"程序学习","permalink":"https://eastsheng.github.io/categories/%E7%A8%8B%E5%BA%8F%E5%AD%A6%E4%B9%A0/"},{"name":"Python","slug":"程序学习/Python","permalink":"https://eastsheng.github.io/categories/%E7%A8%8B%E5%BA%8F%E5%AD%A6%E4%B9%A0/Python/"}]},{"title":"GULP 汇总","date":"2019-01-22T10:11:28.000Z","path":"wiki/2019/01/22/softwares/GULP/","text":"[toc] GULP (General Utility Lattice Program)晶格动力学软件 在线Manual 1. Run GULP Command GULP 执行命令：gulpoutputfile 例如： 1$ /home/ubuntu/GULP/gulp-5.2/Src/gulp &lt;input.gin&gt;OUTfile 2. dispersion &amp; DOS 在计算dispersion的时候，会附带着输出DOS(Density of State) 但是，如果加一条命令就可以使输出的DOS文件内容为空，即： 1$ shrink 24 24 1 官网给出的解释是： 指定倒易空间中的收缩因子，收缩系数越高，倒空间的采样范围越广。 并不清楚为什么加了这条命令之后DOS为空。","tags":[{"name":"GULP","slug":"GULP","permalink":"https://eastsheng.github.io/tags/GULP/"}],"categories":[{"name":"软件学习","slug":"软件学习","permalink":"https://eastsheng.github.io/categories/%E8%BD%AF%E4%BB%B6%E5%AD%A6%E4%B9%A0/"},{"name":"GULP","slug":"软件学习/GULP","permalink":"https://eastsheng.github.io/categories/%E8%BD%AF%E4%BB%B6%E5%AD%A6%E4%B9%A0/GULP/"}]},{"title":"GROMACS 入门","date":"2019-01-22T10:11:28.000Z","path":"wiki/2019/01/22/softwares/gromacs/GROMACS_入门/","text":"[toc] GROMACS 入门GROMACS 安装 安装： 12345678wget https://ftp.gromacs.org/gromacs/gromacs-2023.tar.gztar -zxvf gromacs-2023.tar.gzcd gromacs-2023mkdir buildcd buildexport CMAKE_PREFIX_PATH=~/fftw # fftw 路径cmake .. -DCMAKE_INSTALL_PREFIX=~/softwares/gromacs # gromacs安装路径make install -j8 环境变量设置： 12345678cd ~/softwares/gromacs/binpwd # 查看路径，并复制sudo vim ~/.bashrcexport PATH=&quot;~/softwares/gromacs/bin:$PATH&quot;# esc# :# wqsource ~/.bashrc 测试： 12345678910111213141516171819202122232425262728gmx -version# output:# Executable: ~/softwares/gromacs/bin/gmx# Data prefix: ~/softwares/gromacs# Working dir: ~/softwares/gromacs# Command line:# gmx -version# # GROMACS version: 2023-dev# Precision: mixed# Memory model: 64 bit# MPI library: thread_mpi# OpenMP support: enabled (GMX_OPENMP_MAX_THREADS = 128)# GPU support: disabled# SIMD instructions: AVX2_256# CPU FFT library: fftw-3.3.10# GPU FFT library: none# Multi-GPU FFT: none# RDTSCP usage: enabled# TNG support: enabled# Hwloc support: disabled# Tracing support: disabled# C compiler: /usr/bin/cc GNU 9.4.0# C compiler flags: -Wno-array-bounds -fexcess-precision=fast -funroll-all-loops -mavx2 -mfma -Wall -Wno-unused -Wunused-value -Wunused-parameter -Wextra -Wno-sign-compare -Wpointer-arith -Wundef -Werror=stringop-truncation -Wno-missing-field-initializers -O3 -DNDEBUG# C++ compiler: /usr/bin/c++ GNU 9.4.0# C++ compiler flags: -Wno-array-bounds -fexcess-precision=fast -funroll-all-loops -mavx2 -mfma -Wall -Wextra -Wpointer-arith -Wmissing-declarations -Wundef -Wstringop-truncation -Wno-missing-field-initializers -Wno-cast-function-type-strict -fopenmp -O3 -DNDEBUG# BLAS library: External - detected on the system# LAPACK library: External - detected on the system 参考： [1] Gromacs官网 [2] GROMACS的安装方法 运行GROMACS运行GROMACS 所需文件 初始构型文件：x.gro x.pdb 参数控制文件：x.mdp 力场文件：x.top x.itp 索引文件：x.ndx 相关力场： Martini粗粒化力场 AMBER、CHARMM、OPLS-AA、GROMOS 力场文件相关工具： pdb2gmx、AMBER Tool、tppmktop、x2top、martini.py、ATB&#x2F;PRODRG…… 后处理工具： gmx msd gmx rdf gmx totcf (旋转自相关函数) gmx potential (静电势) gmx helix ($\\alpha$螺旋结构的基本性质) MD_Analysis、VMD 自编程","tags":[{"name":"GROMACS","slug":"GROMACS","permalink":"https://eastsheng.github.io/tags/GROMACS/"},{"name":"GROMACS入门","slug":"GROMACS入门","permalink":"https://eastsheng.github.io/tags/GROMACS%E5%85%A5%E9%97%A8/"}],"categories":[{"name":"软件学习","slug":"软件学习","permalink":"https://eastsheng.github.io/categories/%E8%BD%AF%E4%BB%B6%E5%AD%A6%E4%B9%A0/"},{"name":"GROMACS","slug":"软件学习/GROMACS","permalink":"https://eastsheng.github.io/categories/%E8%BD%AF%E4%BB%B6%E5%AD%A6%E4%B9%A0/GROMACS/"}]},{"title":"Lammps Command","date":"2019-01-22T10:11:28.000Z","path":"wiki/2019/01/22/softwares/lammps/LammpsCommond/","text":"[toc] neighbor 2.0 multi neighbor skin style 此命令用于设置cutoff distance; 3种style代表不同的算法去构建list,bin nsq multi 一般使用bin较多； nsq没有用过，手册上讲，在计算非周期性的盒子里的未溶解的小分子可能会更快； multi多用于一些cutoff distance 差别大的体系，例如，聚合物与离子共存的体系。 group123group g_ID region reg_ID# orgroup g_ID type 1 2 # atom type 所分的组的个数不能大于32个。 meam势函数 meam 势函数，data很多重复元素的原子的时候，library那个文件后面只需要写元素，另一个需要写全原子类型。 LJ 交互 mix1pair_modify mix geometric 如果需要交互LJ势参数时，可以使用此命令 Berendsen控温12fix ID group-ID temp/berendsen Tstart Tstop Tdampfix 1 all temp/berendsen 300.0 300.0 100.0 Tdamp 温度阻尼参数，时间单位（例如ps，fs） 使用Berendsen恒温器重新设置一组原子的温度，Berendsen每一步都会调整原子的速度。温度不能为0 LAMMPS中dihedral与improper具体有什么区别？ 这不是lammps问题，是力场问题。A dihedral angle potentials depends on four consecutive bonded atoms, whereas the improper torsion depends on three atoms centered around a fourth atom. … The main difference between both torsion potentials is the definition of the torsional angle and the functional form of the potential function. 参考：http://muchong.com/t-12670230-1 这两个improper不用可以吗？ lj&#x2F;cut&#x2F;coul&#x2F;long123lj/cut/coul/long args = cutoff (cutoff2)cutoff = global cutoff for LJ (and Coulombic if only 1 arg) (distance units)cutoff2 = global cutoff for Coulombic (optional) (distance units) SHAKE vs RATTLE在LAMMPS模拟中，通过SHAKE或RATTLE算法对指定的键和角度应用键和角度约束。这通常会启用更长的时间步长。 SHAKE 123fix ID group-ID style tol iter N constraint values ... keyword value ...fix ID group-ID shake 0.0001 20 10 b 254 a 459 tol &#x3D; accuracy tolerance of SHAKE solution iter &#x3D; max # of iterations in each SHAKE solution N &#x3D; print SHAKE statistics every this many timesteps (0 &#x3D; never) b values &#x3D; one or more bond types a values &#x3D; one or more angle types t values &#x3D; one or more atom types m value &#x3D; one or more mass values SHAKE算法是为标准Verlet timestepping等方案而发明的，在这些方案中，只有坐标被积分，速度被近似为轨迹的有限差分； 如果速度被明确地积分，就像LAMMPS使用的velocity Verlet积分方法一样，为了消除沿着键的速度分量，就需要第二组约束力； SHAKE and RATTLE都是针对单个分子来设置的； i原子和j原子的位移矢量为：rijn+1 &#x3D; rjn-rin 约束条件为：① rijn+1.rijn+1&#x3D;dij2 and ② vijn+1.rijn+1&#x3D;0 其中，SHAKE算法满足第一条件，如果强加第二条件，沿键方向的速度分量就会消失； 而RATTLE算法满足这两个条件； fix SHAKE和RATTLE有着相同的设置和选项； 通过SHAKE算法每一步都指定键和角去重新设置它们的平衡长度和角度值J of Comp Phys, 23, 327-341 (1977)；这是通过施加额外的约束力来实现的，这样新的位置就保持了所需的原子分离。小的delta值意味着SHAKE的很好； 另外，由于fix RATTLE修改力和速度，因此fix RATTLE应该定义在所有其他fix的后面。 为了计算效率，在一个模拟中只能定义一个SHAKE或RATTLE 9. fix npt12fix ID group-ID style_name keyword valuefix 1 water npt temp 300.0 300.0 100.0 iso 0.0 0.0 1000.0 基于Nose-Hoover style对非哈密顿运动方程执行时间积分，在每个时间步更新组中原子的位置和速度。 压力里是怎么给的？ 温度调节和压力调节是通过添加一些动态变量来实现的，这些动态变量与粒子速度(温度调节)和模拟域尺寸(压力调节)耦合。 除了基本的恒温和恒压调节外，这些修复还可以创建一个与粒子恒温器耦合的恒温器链，以及另一个与恒压调节变量耦合的恒温器链。该稳压器可以耦合到整体盒体积，或个别尺寸，包括xy, xz和yz倾斜尺寸。恒温器的外部压力可以指定为标量压力(等压系综)或对称应力张量的分量(恒应力系综)。当使用正确时，粒子的时间平均温度和应力张量将会和指定的Tstart&#x2F;Tstop和Pstart&#x2F;Pstop目标值匹配。 定义一种计算一组原子温度的方法12345compute ID group-ID tempcompute temp_HeavyOil HeavyOil tempcompute press_HeavyOil all pressure temp_HeavyOilthermo_style custom step temp press pxx pyy pzz pe ke etotal epair ebond eangle edihedthermo_modify temp temp_HeavyOil format 3 %15.8g press press_HeavyOil 计算压力必须是对all进行。 设置一组或多组原子刚体 设置一组 1fix 1 Water rigid single 设置多组 1234fix 2 all rigid group 2 Water Quartz# 排除刚体组内原子之间的相互作用力neigh_modify exclude group Water Waterneigh_modify exclude group Quartz Quartz read_data 该命令通过使用add、offset、shift关键字可以多次读取data文件，可以组件比较复杂的系统，比如：先读取一个流体结构，再读取一个壁面的结构，然后还可以再次读取第二个壁面结构，并可以通过displace_atoms命令对该结构进行旋转，以实现对面的另一个壁面。 读取单个data时1read_data file.data 读取多个data时12read_data file.data keyword argsread_data data.water add append offset 3 1 1 1 1 shift 0.0 0.0 50.0 keyword：add、offset、shift、extra、groupadd:如果没有模拟盒子，不能用add，如果已经通过create_box命令或先前的read_data命令构建了盒子（也即是data中的xlo、xhi等）。 另外，add后面还跟着一个参数，有四个选择:append;IDoffset;MOLoffset merge分别表示：（append）后面加上来的data中的原子id直接顺延，比如之前读取的data一共5个原子类型，后来加的data有2个原子id，那么合起来的原子id就是5+2；（IDoffset）是指定一个具体数值代替前面的5，例如：IDoffset 10， 这里表示下一个data读取的原子id会从11开始；（MOLoffset）与IDoffset相似，表示分子ID（merge）表示不改变原子id直接合并 offset在data文件中读取atom bond angle … types offset后面跟五个参数 12345toff = offset to add to atom typesboff = offset to add to bond typesaoff = offset to add to angle typesdoff = offset to add to dihedral typesioff = offset to add to improper types 以第一个为例，如果toff&#x3D;2，添加的原子的原来id为1 2 3，那么添加后将会变为3 4 5； shift关键字可以改变加入系统data的位置 有三个参数分别代表在三个方向的原子偏移量; 12shift Sx, Sy, Szshift 0.0 0.0 20 extra关键字为稍后再次使用read_data命令添加新的atom、bond、angle等而准备 该关键字只能在第一次读取data时使用； 当系统第一次初始化时，LAMMPS设置了允许的原子、键、角度等类型的最大数目; 如果不使用extra关键字，那么这些类型的数量将被限制在您读的第一个数据文件中出现的数量。 例如，如果第一个数据文件是Si的固体基底，它可能会指定一个单个原子类型；如果读取第二个数据文件而且是不同的材料(例如水分子)，位于基底上方，将需要使用不同的原子类型。只有在读取基底数据文件时将extra&#x2F;atom&#x2F;types关键字的值设置的足够大，才能做到 注意，使用extra关键字还允许每个数据文件包含如下部分:Masses或Pair Coeffs或Bond Coeffs，其大小与数据文件中的类型数量相匹配 group关键字是可以把新添加data设为一组nocoeff关键字，顾名思义LAMMPS data盒子类型转换12change_box all triclinic #正交转单斜change_box all ortho #单斜转正交 计算group和group原子之间相互能与力 模板 1compute ID group-ID group/group group2-ID keyword value ... 例子 1compute 1 lower group/group upper keyword 1234pair value = yes or no #默认yes, 相互作用能将包括一对分量，该分量被定义为所有原子对之间的成对能量，其中一对原子中的一个在第一组，另一个在第二组。kspace value = yes or no #默认为no,若为yes则计算的相互作用能将包括一个k空间分量，即长程库仑能boundary value = yes or no #默认yes,如果boundary关键字设置为yes(默认值)，并且包含了kspace贡献，那么这个能量修正项将被添加到总组-组能量中。这一修正项不影响力的计算，并将为零，如果一个或两个组是电荷中性。这个能量修正项与常规Ewald和PPPM例程中包含的能量修正项相同。molecule value = off or inter or intra #默认no,如果将molecule关键字设置为inter或intra，则在包括它们的相互作用能和力之前，将根据每对中的两个原子的分子id进行额外的检查。对于两个原子之间inter的相互作用，这两个原子必须处于不同的分子中。对于内部设置intra，这两个原子必须在同一个分子中. 拓展： 是不是说，加了kspace yes后计算的是范德华力+库仑力； 进一步不加kspace yes，计算的是范德华力，这两项相减就可得到两个组之间的库仑力了？ LAMMPS data删除原子 删除没有键角信息的data中组1delete_atoms group Quartz 删除带有键角信息的data中组12delete_atoms group Quartzreset_atom_ids #需新版lammps ref change_box change_box LAMMPS data盒子类型转换12change_box all triclinic #正交转单斜change_box all ortho #单斜转正交","tags":[{"name":"Lammps","slug":"Lammps","permalink":"https://eastsheng.github.io/tags/Lammps/"},{"name":"Lammps Command","slug":"Lammps-Command","permalink":"https://eastsheng.github.io/tags/Lammps-Command/"}],"categories":[{"name":"软件学习","slug":"软件学习","permalink":"https://eastsheng.github.io/categories/%E8%BD%AF%E4%BB%B6%E5%AD%A6%E4%B9%A0/"},{"name":"Lammps","slug":"软件学习/Lammps","permalink":"https://eastsheng.github.io/categories/%E8%BD%AF%E4%BB%B6%E5%AD%A6%E4%B9%A0/Lammps/"}]},{"title":"Lammps 笔记","date":"2019-01-22T10:11:28.000Z","path":"wiki/2019/01/22/softwares/lammps/LammpsNotes/","text":"[toc] 11-17 使用LAMMPS和Alamode计算热导率、PDOS、弛豫时间等 运行alm.in,生成xxx.pattern_HARMONIC和xxx.pattern_ANHARM3 需要注意：NORDER = 2 # 1: harmonic, 2: cubic, .. 其他信息修改参照官网 用alamode自带的displace.py，生成harm1.lammps和cubic1.lammps 如果harm和cubic文件很多的话，几百几千个，这里可能会出现harm0001.lammps这种文件名，会报错。 用脚本运行lammps,in.sw,使harm1.lammps和cubic1.lammps 分别生成XFSET.harm1和XFSET.cubic1 最后使用alamode自带的extract.py，从XFSET.harm和XFSET.cubic提取到DESET_harmonic中 修改alm.in中的MODE为optimize并添加一些信息，再次运行alm.in，会得到xxx.fcs和xxx.xml, 利用anphon通过xxx.xml会得到xxx.bands文件，然后通过自带的plotband.py可以计算声子色散； 同样获得pdos 具体参见官网 Nose-Hoover Lammps默认NVT为Nose-Hoover NEMD时使用此热库，其实就是在热源和冷源加 nvt ， 在跑非平衡分子动力学( NEMD )模拟时，由于Nose-Hoover具有演化的过程，但是NEMD也有演化， 所以在跑nve的时候，不仅要排除fixed的区域，还要排除热源冷源区域。 NPT时系统的边界条件必须为周期性边界条件1boundary p p p REBO MoS2 https://research.matse.psu.edu/sinnott/software 注意： 120.020 epsilon_SS #对应300K0.01386 epsilon_SS #对应0K 原子间势函数库 Interatomic Potentials (Force Fields)Repository https://www.ctcms.nist.gov/potentials/ LAMMPS Online LAMMPS Online https://editor.lammps.org/ lammps国外社区对于amorphous结构控压 应该先淬火、不能有真空层，不然不能控压，真空给不了压力 LAMMPS入门教程（2）——从in文件建立讲分子动力学模拟流程 https://zhuanlan.zhihu.com/p/341613975","tags":[{"name":"Lammps","slug":"Lammps","permalink":"https://eastsheng.github.io/tags/Lammps/"},{"name":"Lammps 笔记","slug":"Lammps-笔记","permalink":"https://eastsheng.github.io/tags/Lammps-%E7%AC%94%E8%AE%B0/"}],"categories":[{"name":"软件学习","slug":"软件学习","permalink":"https://eastsheng.github.io/categories/%E8%BD%AF%E4%BB%B6%E5%AD%A6%E4%B9%A0/"},{"name":"Lammps","slug":"软件学习/Lammps","permalink":"https://eastsheng.github.io/categories/%E8%BD%AF%E4%BB%B6%E5%AD%A6%E4%B9%A0/Lammps/"}]},{"title":"VMD 基本操作","date":"2019-01-22T10:11:28.000Z","path":"wiki/2019/01/22/softwares/lammps/VMD使用/","text":"[toc] VMD使用VMD TkConsole常用命令 设定盒子边界类命令：12345678910pbc box -style lines # 显示boxpbc box -width 2 # 改变lines宽pbc box -color white # 改变lines颜色set cell [pbc set &#123;10.0 10.0 10.0&#125; -all] # 设置边界pbc box -center origin -shiftcenter &#123;-1 -1 0&#125; #移动盒子pbc box -center origin -color black -width 1.0 -center compbc box -onpbc wrappbc wrap -shiftcenterrel &#123;0 0 0.95&#125; 视角切换123rotate x by 90rotate y by 90rotate z by 90 读取lammpsdata1topo readlammpsdata lammps.data 输出高清图片 File&gt;&gt;Render...&gt;&gt;Tachyon Figure.bat文件内内容：1&quot;..\\VMD\\tachyon_WIN32.exe&quot; vmdscene.dat -aasamples 100 -mediumshade -trans_vmd -res 1024 742 -format BMP -o Figure.bmp 输出Video 输出帧图片：1Extensions&gt;&gt;Visualizations&gt;&gt;Movie Maker 组合图片成视频 VideoMach TCL命令计算z方向的氢键Hbonds_cal_z.tcl123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566#TCL VMD script to calculate Avg No. of HBonds for given Acceptor and Donor groups in the z direction ##Authour : KAPAKAYALA ANJI BABU# IIT KANPUR, INDIA.#Modified by : Dongsheng Chen#USAGE : Open VMD/Extensions - Tk console then execute script as &quot; source hbonds_direction_z.tcl&quot;##OUTPUT Files :: hbonds-details_new.dat ; which contains details of all given Donor &amp; Acceptor atoms.# hbonds-z.dat ; which contains z position vs No.of Hbonds.#set outfile [open &quot;hbonds-details-all.dat&quot; w]#set hbzfile [open &quot;hbonds-all-z.dat&quot; w]#set hbzfile [open &quot;hbonds-wat-wat-z.dat&quot; w]set hbzfile [open &quot;hbonds-wat-sdbs-z.dat&quot; w]set n [ molinfo top get numframes]set sum 0for &#123;set i 901&#125; &#123;$i &lt;= $n&#125; &#123;incr i&#125; &#123;for &#123;set j -34&#125; &#123;$j &lt;=94&#125; &#123;incr j&#125; &#123;set k [expr $j]#set D [atomselect top &quot;all and z&lt;[expr $k+0.5] and z&gt;=$k&quot; frame $i] set D [atomselect top &quot;type 411 to 412 and z&lt;[expr $k+0.5] and z&gt;=$k&quot; frame $i] #set A [atomselect top &quot;all&quot; frame $i]#set A [atomselect top &quot;type 411 to 412&quot; frame $i]#set A [atomselect top &quot;resid 1606 1607 3108 3109&quot; frame $i]#set A [atomselect top &quot;resid 1606 1607 1608 1609 3110 3111 3112 3113&quot; frame $i]set A [atomselect top &quot;resid 1606 1607 1608 1609 1610 1611 1612 1613 1614 1615 3116 3117 3118 3119 3120 3121 3122 3123 3124 3125&quot; frame $i]set D_list [$D get &#123;resname type serial &#125;]set A_list [$A get &#123;resname type serial &#125;]set lists [measure hbonds 3.5 30 $D $A]set atoms [lindex $lists 0]set Num [llength $atoms] ##---------Writing OUTPUT----------------------##puts $outfile &quot;========================================&quot;#puts $outfile &quot;Frame :: $i &quot;#puts $outfile &quot;DONARS_list ::\\n$D_list&quot;#puts $outfile &quot;&quot;#puts $outfile &quot;Acceptors_list ::\\n$A_list&quot;#puts $outfile &quot;&quot;##puts &quot;Hbonds List :: $lists&quot;##set HBnum [llength $lists ]#puts &quot;&quot;##puts &quot;No. of Hbonds :: $HBnum&quot;#puts $outfile &quot;HB Atoms:: $atoms&quot;#puts $outfile &quot;&quot;#puts $outfile &quot;No. of Hbonds:: $Num&quot;puts $hbzfile &quot;$i $k [expr $k+0.5] $Num&quot;puts &quot;$i $k [expr $k+0.5] :: No. of Hbonds = $Num&quot;#------------------Calculating Avg HBonds--------#set sum [expr $sum + $Num ]#puts &quot;Sum :: $sum&quot;&#125;&#125;set Hbavg [expr $sum/$i]#puts $hbfile &quot;Ang Hbonds :: $Hbavg&quot;puts &quot;====================================&quot;puts &quot;Ang Hbonds :: $Hbavg&quot;puts &quot;====================================&quot;$D delete$A delete#close $outfileclose $hbzfile#lsort -unique [$sel get resname]#==========================================================## Written By ANJI BABU KAPAKAYALA ## Modifed By Dongsheng Chen ##==========================================================# 导入轨迹后在VMD TkConsole中使用source Hbonds_cal_z.tcl命令执行该代码 常用命令proc proc：procedure的简称，类似于python中的函数定义def 1234# proc 函数名 &#123;参数x 参数y&#125;&#123;函数过程&#125;proc add &#123;x y&#125; &#123;return [expr $x+$y] # expr将参数做表达式处理 &#125; incr123456set x 5# 5incr x 10 #相当于给x加10# 15incr x #相当于给x加1# 16 puts 相当于python的print 1puts &quot;welcome to TkConsole!&quot; llength 相当于python的len，返回列表的元素个数12llength &#123;a b c d e&#125;# 5 lindex 从列表中获得元素1234lindex &#123;a b c d&#125;# a b c dlindex &#123;a b c d&#125; 2# c 参考 Atomselect命令介绍 VMD里原子选择语句的语法和例子","tags":[{"name":"Lammps","slug":"Lammps","permalink":"https://eastsheng.github.io/tags/Lammps/"},{"name":"VMD 基本操作","slug":"VMD-基本操作","permalink":"https://eastsheng.github.io/tags/VMD-%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C/"}],"categories":[{"name":"软件学习","slug":"软件学习","permalink":"https://eastsheng.github.io/categories/%E8%BD%AF%E4%BB%B6%E5%AD%A6%E4%B9%A0/"},{"name":"Lammps","slug":"软件学习/Lammps","permalink":"https://eastsheng.github.io/categories/%E8%BD%AF%E4%BB%B6%E5%AD%A6%E4%B9%A0/Lammps/"}]},{"title":"Lammps安装","date":"2019-01-22T10:11:28.000Z","path":"wiki/2019/01/22/softwares/lammps/LammpsInstall/","text":"[toc] - Windows下Lammps安装 官网下载Windows版Lammps,和并行包mpich2；2.下载完成后，直接双击LAMMPS-64bit-stable-MPI.exe安装,可以自定义安装位置； Similarly，接着安装MPICH2mpich2-1.4.1p1-win-x86-64.msi； 完了之后，进入到Administrator用户下操作，win+R输入cmd，调出cmd窗口； cd到MPICH2安装目录的bin下，也即是D:\\Program Files\\MPICH2\\bin； 然后，输入命令：smpd.exe -install -phrase behappy； 别忘记设置环境变量，即是将对应的Lammps@MPICH2路径加入到path中：D:\\Program Files\\LAMMPS 64-bit 7Aug2019-MPI\\bin，D:\\Program Files\\MPICH2\\bin 怎么设置环境变量： 鼠标右键此电脑；点开高级系统设置；找到高级；点开右下角环境变量(N)； 在系统变量下path中找找看，是否已经设置；若没有，点击新建，将路径复制过来，确定即可 至此，完成，可以进入lammps目录下Examples中测试一下并行；例如：mpiexec -np 8 lmp_mpi -i inputfile.in；具体看官网 - Linux下Lammps并行安装1. 安装必要的编译器 安装&#x2F;更新必要的C&#x2F;C++编译器等：123456sudo apt-get upgradesudo apt-get updatesudo apt-get install gccsudo apt-get install g++sudo apt-get install gfortransudo apt-get install make 2. 并行计算程序MIPCH安装 下载MPICH安装包 ，并解压:123456wget https://www.mpich.org/static/downloads/4.1.1/mpich-4.1.1.tar.gztar -zxvf mpich-4.1.1.tar.gzcd mpich-4.1.1./configure --prefix=/opt/mpich 2&gt;&amp;1|tee c.txtmake 2&gt;&amp;1|tee m.txtmake install 2&gt;&amp;1|tee mi.txt 完成MPICH安装，接着把mpich的安装路径添加到环境变量中，参考这里 输入:1which mpirun # 检查mpi是否添加路径到环境变量 注：若已有mpich，请略过。 3. FFTW3安装 Downloading FFTW Installation on Unix123456wget http://www.fftw.org/fftw-3.3.10.tar.gztar -zxvf fftw-3.3.10.tar.gzcd fftw-3.3.10./configure # --prefix=/your fftw3 path(默认/usr/local/include)不能使用相对路径/makesudo make install 4. LAMMPS安装 下载安装包， 解压:12wget https://download.lammps.org/tars/lammps-3Mar2020.tar.gztar -zxvf lammps-3Mar2020.tar.gz 进入解压文件夹内：1cd lammps-3Mar20/src 输入： 12make ps # 或者make package-status #查看扩展包安装状态 1234567891011121314151617181920212223242526272829303132Installed NO: package ASPHEREInstalled NO: package BODYInstalled NO: package CLASS2Installed NO: package COLLOIDInstalled NO: package COMPRESSInstalled NO: package CORESHELLInstalled NO: package DIPOLEInstalled NO: package GPUInstalled NO: package GRANULARInstalled NO: package KIMInstalled NO: package KOKKOSInstalled NO: package KSPACEInstalled NO: package LATTEInstalled NO: package MANYBODYInstalled NO: package MCInstalled NO: package MESSAGEInstalled NO: package MISCInstalled NO: package MOLECULEInstalled NO: package MPIIOInstalled NO: package MSCGInstalled NO: package OPTInstalled NO: package PERIInstalled NO: package POEMSInstalled NO: package PYTHONInstalled NO: package QEQInstalled NO: package REPLICAInstalled NO: package RIGIDInstalled NO: package SHOCKInstalled NO: package SNAPInstalled NO: package SPINInstalled NO: package SRDInstalled NO: package VORONOI 输入： 123# make yes-xxx #安装所需扩展包# 常用包一次性安装make yes-BODY yes-MANYBODY yes-CLASS2 yes-KSPACE yes-MISC yes-MOLECULE yes-RIGID 完成后，输入: 1make mpi -j8 待编译完成后，LAMMPS就安装成功了。 注意如果提示mpicxx:command not found的错误,是由于mpich的环境变量没有添加成功； 进入lammps-stable/examples中任意测试一个例子； 运行lammps，例如： 123mpirun -np 4 lmp_mpi -i in.atm#或mpiexec -np 4 lmp_mpi -i in.atm 注意：记得在~/.bashrc中设置/home/.../lammps-stable/src环境变量 参考 1","tags":[{"name":"Lammps","slug":"Lammps","permalink":"https://eastsheng.github.io/tags/Lammps/"},{"name":"Lammps安装","slug":"Lammps安装","permalink":"https://eastsheng.github.io/tags/Lammps%E5%AE%89%E8%A3%85/"}],"categories":[{"name":"软件学习","slug":"软件学习","permalink":"https://eastsheng.github.io/categories/%E8%BD%AF%E4%BB%B6%E5%AD%A6%E4%B9%A0/"},{"name":"Lammps","slug":"软件学习/Lammps","permalink":"https://eastsheng.github.io/categories/%E8%BD%AF%E4%BB%B6%E5%AD%A6%E4%B9%A0/Lammps/"}]},{"title":"Lammps error汇总","date":"2019-01-22T10:11:28.000Z","path":"wiki/2019/01/22/softwares/lammps/error/","text":"[toc] 1. 跑MD结构散了跑MD结构结构散了，常见原因总结： (1). 势函数的问题，调研一下该势函数是否有人模拟过成果过。(2). 原子结构不稳定导致的，例如： 模拟 缺陷 的时候，缺陷过多导致结构不稳定； 模拟 高温 或者 高压 环境下时，导致结构不稳定； 可以先低温弛豫（NPT或NVT），稳定后再升温。 (3). 势参数设置出错，例如： data文件中原子类型与input文件中配置势参数时的原子类型顺序不一致； (4). 是否有足够的真空层 2. 温度分层多出一层 在跑NEMD时，我们要记录温度，通过给系统分层，记录每一层的温度； 诡异的来了，分的有些层数，输出的结果会多出一层； 比如，分了120层，输出的结果有121层； 但是，有些就很正常，比如分了200层； 猜测的原因 是边边上有多余的部分没有被分到？自动分了？ 3. data文件格式问题1Incorrect atom format in data file (../atom.cpp:853) data文件的格式是 full ，却在inputfile中使用了 atomic 格式。 4. Lammps输入文件中变量”k”首先说一下，Lammps inputfile 的变量有很多，这里说的这个 k 是控制算几遍的那个变量。 问题？ 按理说，如果按照下面来写的话，它应该是正常运行，并且会计算三遍。 1234567variable k index 1 2 3 .........clearnext kjump inputfile.in 事实上，它也会算三遍，但是，我发现有一种情况，它是不会jump到下一个case的。 这种情况：多个inputfile的时候，例如：驰豫(minimize,npt,nvt…)和记录结果分别用两个inputfile来表示。 也即是，先从驰豫jump到记录结果，再让记录结果的inputfile自己jump自己。 结果就是，记录结果的inputfile不会 next k and jump 已解决 把第一个inputfile里的variable k equal 1改为 variable k index 1 2 3即可 5. missing an entry2020-07-25错误信息：“ERROR: Potential file is missing an entry (../pair_sw.cpp:500)”解决方法： 是由于势函数文件里少了一部分没给出来。 比如，以MoS2为例,要给的有，12345678Mo S SS Mo MoMo Mo MoMo Mo S Mo S MoS Mo S S S MoS S S 但是，如果少给其中一个就会报此错误。 6. Pair hybrid sub-style is not used2021-03-19 此错误字面意思时采用了hybrid之后，没有用到sub-style，也即是没有用到下面的sw或tersoff。123456789101112#Force fieldpair_style hybrid lj/cut 10.0 sw tersoff pair_coeff * * tersoff BNC.tersoff C NULL NULLpair_coeff * * sw mos2.sw NULL S Mo #LJ-potential#J. Am. Chem. Soc. 1992, 114, 10024-10035#Dan Han et al 2019 Nanotechnology 30 075403#RSC Adv.,2015, 5, 29193–29200#*********LJ-potential parameters*********#pair_coeff 1 1 lj/cut 0.004560 3.431#C-C #注释了此行即可解决pair_coeff 1 2 lj/cut 0.007355 3.219#C-Spair_coeff 1 3 lj/cut 0.003325 2.818#C-Mo 这里可能主要是因为pair_style后面先执行了lj/cut，C-C的势函数就以LJ势已经被给了; 而接下来，使用tersoff的时候，就没有用到？ 因此，把C-C的LJ注释就可以了。 但是，我这里算的是多层石墨烯和MoS2，因此，必须还要给石墨烯一个层间的LJ 所以，还需要再具体修改每层C原子类型。 7. LAMMPSmsi2lmp.exe转换.car .mdf为LAMMPS data文件时： 执行 1msi2lmp.exe xxx -i -f cvff.frc 错误信息 1Cannot open ../frc_files/cvff.frc 解决方法 windows下，添加frc_files的路径为环境变量就好了 linux下，添加环境变量后还是一样的错误信息。 8. Expected floating point parameter instead of &#39;C1&#39; in input script or data file (../pair_lj_cut_coul_long.cpp:628) 在执行lammps时出现错误信息 1Expected floating point parameter instead of &#x27;C1&#x27; in input script or data file (../pair_lj_cut_coul_long.cpp:628) 按照data file格式修改即可，这里是因为data里Pair Coeffs的格式不对 9. 出现错误ERROR: Pair style requires a KSpace style (../pair_lj_cut_coul_long.cpp:687)1ERROR: Pair style requires a KSpace style (../pair_lj_cut_coul_long.cpp:687) 解决方法： in文件中缺少KSpace style,添加即可 1kspace_style pppm 1e-4 10. 出现错误Expected floating point parameter instead of1Expected floating point parameter instead of &#x27;lj/cut/coul/long&#x27; in input script or data file (../pair_lj_cut_coul_long.cpp:628) 解决方法 pair_style 使用 hybrid 参考链接 http://blog.sciencenet.cn/blog-3388193-1235086.html 11. Out of range atoms - cannot compute MSM 修改 neigh_modify delay 0 every 1 check yes 原子重叠、步长太大等 12. ERROR on proc 10: Neighbor list overflow, boost neigh_modify one (..&#x2F;npair_half_multi_newton.cpp:163) 官网解答：There are too many neighbors of a single atom. Use the neigh_modify command to increase the max number of neighbors allowed for one atom. You may also want to boost the page size. 13. ERROR: Incorrect args for improper coefficients (..&#x2F;improper_harmonic.cpp:237) 实在找不出原因，我看以前有人把这一部分删除了， 跟dihedral一样，improper应该也是描述二面角力的，可以省略一个不？。待解决？？？ 解决方法： 需要安装该库 USER-MISC 12This improper style can only be used if LAMMPS was built with the USER-MISC package. See the Build packagedoc page for more info. 14. Out of range atoms - cannot compute PPPM 在平衡前不使用kspace_style pppm 0.0001 参考：http://bbs.keinsci.com/thread-13244-1-1.html 这样的话，会出现新的error:ERROR: Pair style requires a KSpace style 然后，就想着先把能量最小化去掉，直接做NPT、nvt，平衡结构。 接着有出现新的error:ERROR: Non-numeric pressure - simulation unstable 调不好，想着先不做npt，先做nvt。 又出现开始时的错误了0.0 把盒子扩大试试。 排查后，发现是使用moltemplate模型构建不合理，有原子重叠之类的 15. Bond atoms 1951 1952 missing on proc 13 at step 112345WARNING: Inconsistent image flags (../domain.cpp:785)Per MPI rank memory allocation (min/avg/max) = 20.02 | 20.77 | 21.26 MbytesStep Temp Press Pxx Pyy Pzz PotEng KinEng TotEng E_pair E_bond E_angle E_dihed 0 6.6068346e+08 1.5300993e+09 12965.294 2609.4845 4.5902822e+09 -1782420.7 1.0587343e+10 1.0585561e+10 -1822828.3 37029.198 2967.9944 410.42917 ERROR on proc 7: Bond atoms 2213 2215 missing on proc 7 at step 2 (../ntopo_bond_all.cpp:63) 一般bond不会自动断裂的，只有lammps在更新粒子坐标时发现在其截断长度加上bin值小于两个粒子之间的距离时会显示missing。 从1.0到5.0试一下看是不是特定原子在特定的时间步missing。 结构有问题，有原子重叠之类的，采用能量最小化优化。 还是结构问题 ref: [1] http://www.mdbbs.org/thread-19983-1-1.html [2] http://muchong.com/html/201706/5624479.html [3] http://wap.sciencenet.cn/blog-3437453-1299919.html?mobile=1 16. Non-numeric box dimensions - simulation unstable17. Non-numeric pressure - simulation unstable 应该先控温，再控压 最后发现是电荷给的有问题。 18 ERROR: All pair coeffs are not set (..&#x2F;pair.cpp:236) 使用了pair_modify mix geometric为什么还有这个错误？","tags":[{"name":"Lammps","slug":"Lammps","permalink":"https://eastsheng.github.io/tags/Lammps/"},{"name":"Lammps error","slug":"Lammps-error","permalink":"https://eastsheng.github.io/tags/Lammps-error/"}],"categories":[{"name":"软件学习","slug":"软件学习","permalink":"https://eastsheng.github.io/categories/%E8%BD%AF%E4%BB%B6%E5%AD%A6%E4%B9%A0/"},{"name":"Lammps","slug":"软件学习/Lammps","permalink":"https://eastsheng.github.io/categories/%E8%BD%AF%E4%BB%B6%E5%AD%A6%E4%B9%A0/Lammps/"}]}]}